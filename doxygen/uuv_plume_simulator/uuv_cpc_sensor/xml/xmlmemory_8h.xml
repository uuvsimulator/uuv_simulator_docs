<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="xmlmemory_8h" kind="file" language="C++">
    <compoundname>xmlmemory.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="xmlversion_8h" local="no">libxml/xmlversion.h</includes>
    <includes refid="threads_8h" local="no">libxml/threads.h</includes>
    <includes refid="globals_8h" local="no">libxml/globals.h</includes>
    <includedby refid="tree_8h" local="no">venv/lib/python3.6/site-packages/lxml/includes/libxml/tree.h</includedby>
    <includedby refid="globals_8h" local="no">venv/lib/python3.6/site-packages/lxml/includes/libxml/globals.h</includedby>
    <incdepgraph>
      <node id="1680">
        <label>stdarg.h</label>
      </node>
      <node id="1684">
        <label>libxml/xmlregexp.h</label>
        <link refid="xmlregexp_8h_source"/>
        <childnode refid="1675" relation="include">
        </childnode>
      </node>
      <node id="1696">
        <label>libxml/xlink.h</label>
        <link refid="xlink_8h_source"/>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
      </node>
      <node id="1695">
        <label>stdlib.h</label>
      </node>
      <node id="1691">
        <label>libxml/entities.h</label>
        <link refid="entities_8h_source"/>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
      </node>
      <node id="1686">
        <label>libxml/hash.h</label>
        <link refid="hash_8h_source"/>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1679" relation="include">
        </childnode>
        <childnode refid="1685" relation="include">
        </childnode>
      </node>
      <node id="1693">
        <label>libxml/xmlIO.h</label>
        <link refid="xml_i_o_8h_source"/>
        <childnode refid="1674" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1678" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
        <childnode refid="1679" relation="include">
        </childnode>
        <childnode refid="1692" relation="include">
        </childnode>
      </node>
      <node id="1685">
        <label>libxml/dict.h</label>
        <link refid="dict_8h_source"/>
        <childnode refid="1682" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
      </node>
      <node id="1682">
        <label>limits.h</label>
      </node>
      <node id="1689">
        <label>libxml/list.h</label>
        <link refid="list_8h_source"/>
        <childnode refid="1675" relation="include">
        </childnode>
      </node>
      <node id="1678">
        <label>libxml/globals.h</label>
        <link refid="globals_8h_source"/>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1679" relation="include">
        </childnode>
        <childnode refid="1688" relation="include">
        </childnode>
        <childnode refid="1694" relation="include">
        </childnode>
        <childnode refid="1673" relation="include">
        </childnode>
        <childnode refid="1677" relation="include">
        </childnode>
      </node>
      <node id="1673">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h</label>
        <link refid="xmlmemory_8h"/>
        <childnode refid="1674" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1677" relation="include">
        </childnode>
        <childnode refid="1678" relation="include">
        </childnode>
      </node>
      <node id="1675">
        <label>libxml/xmlversion.h</label>
        <link refid="xmlversion_8h_source"/>
        <childnode refid="1676" relation="include">
        </childnode>
      </node>
      <node id="1683">
        <label>libxml/xmlstring.h</label>
        <link refid="xmlstring_8h_source"/>
        <childnode refid="1680" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
      </node>
      <node id="1679">
        <label>libxml/parser.h</label>
        <link refid="parser_8h_source"/>
        <childnode refid="1680" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
        <childnode refid="1685" relation="include">
        </childnode>
        <childnode refid="1686" relation="include">
        </childnode>
        <childnode refid="1687" relation="include">
        </childnode>
        <childnode refid="1691" relation="include">
        </childnode>
        <childnode refid="1688" relation="include">
        </childnode>
        <childnode refid="1683" relation="include">
        </childnode>
        <childnode refid="1692" relation="include">
        </childnode>
        <childnode refid="1693" relation="include">
        </childnode>
        <childnode refid="1678" relation="include">
        </childnode>
      </node>
      <node id="1681">
        <label>libxml/tree.h</label>
        <link refid="tree_8h_source"/>
        <childnode refid="1674" relation="include">
        </childnode>
        <childnode refid="1682" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1683" relation="include">
        </childnode>
        <childnode refid="1684" relation="include">
        </childnode>
        <childnode refid="1673" relation="include">
        </childnode>
      </node>
      <node id="1692">
        <label>libxml/encoding.h</label>
        <link refid="encoding_8h_source"/>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
      </node>
      <node id="1687">
        <label>libxml/valid.h</label>
        <link refid="valid_8h_source"/>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1688" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
        <childnode refid="1689" relation="include">
        </childnode>
        <childnode refid="1690" relation="include">
        </childnode>
        <childnode refid="1684" relation="include">
        </childnode>
      </node>
      <node id="1694">
        <label>libxml/SAX2.h</label>
        <link refid="_s_a_x2_8h_source"/>
        <childnode refid="1674" relation="include">
        </childnode>
        <childnode refid="1695" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1679" relation="include">
        </childnode>
        <childnode refid="1696" relation="include">
        </childnode>
      </node>
      <node id="1677">
        <label>libxml/threads.h</label>
        <link refid="threads_8h_source"/>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1678" relation="include">
        </childnode>
      </node>
      <node id="1690">
        <label>libxml/xmlautomata.h</label>
        <link refid="xmlautomata_8h_source"/>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
      </node>
      <node id="1676">
        <label>libxml/xmlexports.h</label>
        <link refid="xmlexports_8h_source"/>
      </node>
      <node id="1674">
        <label>stdio.h</label>
      </node>
      <node id="1688">
        <label>libxml/xmlerror.h</label>
        <link refid="xmlerror_8h_source"/>
        <childnode refid="1679" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1741">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/namespaces.h</label>
        <link refid="namespaces_8h_source"/>
      </node>
      <node id="1742">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/xslt.h</label>
        <link refid="xslt_8h_source"/>
        <childnode refid="1719" relation="include">
        </childnode>
      </node>
      <node id="1702">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/debugXML.h</label>
        <link refid="debug_x_m_l_8h_source"/>
      </node>
      <node id="1737">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xlink.h</label>
        <link refid="xlink_8h_source"/>
        <childnode refid="1715" relation="include">
        </childnode>
        <childnode refid="1716" relation="include">
        </childnode>
      </node>
      <node id="1729">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/security.h</label>
        <link refid="security_8h_source"/>
      </node>
      <node id="1709">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlreader.h</label>
        <link refid="xmlreader_8h_source"/>
      </node>
      <node id="1723">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/functions.h</label>
        <link refid="functions_8h_source"/>
        <childnode refid="1724" relation="include">
        </childnode>
      </node>
      <node id="1712">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/HTMLparser.h</label>
        <link refid="_h_t_m_lparser_8h_source"/>
        <childnode refid="1713" relation="include">
        </childnode>
        <childnode refid="1714" relation="include">
        </childnode>
      </node>
      <node id="1722">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/extra.h</label>
        <link refid="extra_8h_source"/>
      </node>
      <node id="1734">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/entities.h</label>
        <link refid="entities_8h_source"/>
        <childnode refid="1705" relation="include">
        </childnode>
      </node>
      <node id="1704">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/hash.h</label>
        <link refid="hash_8h_source"/>
        <childnode refid="1705" relation="include">
        </childnode>
        <childnode refid="1732" relation="include">
        </childnode>
        <childnode refid="1719" relation="include">
        </childnode>
      </node>
      <node id="1708">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlIO.h</label>
        <link refid="xml_i_o_8h_source"/>
        <childnode refid="1705" relation="include">
        </childnode>
        <childnode refid="1709" relation="include">
        </childnode>
        <childnode refid="1710" relation="include">
        </childnode>
        <childnode refid="1711" relation="include">
        </childnode>
      </node>
      <node id="1740">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/numbersInternals.h</label>
        <link refid="numbers_internals_8h_source"/>
        <childnode refid="1719" relation="include">
        </childnode>
      </node>
      <node id="1739">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/attributes.h</label>
        <link refid="attributes_8h_source"/>
      </node>
      <node id="1728">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/preproc.h</label>
        <link refid="preproc_8h_source"/>
      </node>
      <node id="1736">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xinclude.h</label>
        <link refid="xinclude_8h_source"/>
      </node>
      <node id="1711">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/transform.h</label>
        <link refid="transform_8h_source"/>
      </node>
      <node id="1710">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlsave.h</label>
        <link refid="xmlsave_8h_source"/>
      </node>
      <node id="1727">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/pattern.h</label>
        <link refid="pattern_8h_source"/>
      </node>
      <node id="1699">
        <label>venv/lib/python3.6/site-packages/lxml/includes/etree_defs.h</label>
        <link refid="etree__defs_8h_source"/>
      </node>
      <node id="1701">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/catalog.h</label>
        <link refid="catalog_8h_source"/>
      </node>
      <node id="1703">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/dict.h</label>
        <link refid="dict_8h_source"/>
        <childnode refid="1704" relation="include">
        </childnode>
        <childnode refid="1705" relation="include">
        </childnode>
        <childnode refid="1719" relation="include">
        </childnode>
        <childnode refid="1731" relation="include">
        </childnode>
      </node>
      <node id="1706">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/globals.h</label>
        <link refid="globals_8h_source"/>
        <childnode refid="1705" relation="include">
        </childnode>
        <childnode refid="1707" relation="include">
        </childnode>
        <childnode refid="1708" relation="include">
        </childnode>
        <childnode refid="1697" relation="include">
        </childnode>
      </node>
      <node id="1732">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/relaxng.h</label>
        <link refid="relaxng_8h_source"/>
      </node>
      <node id="1697">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h</label>
        <link refid="xmlmemory_8h"/>
        <childnode refid="1698" relation="include">
        </childnode>
        <childnode refid="1706" relation="include">
        </childnode>
      </node>
      <node id="1705">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h</label>
        <link refid="parser_8h_source"/>
        <childnode refid="1706" relation="include">
        </childnode>
        <childnode refid="1704" relation="include">
        </childnode>
        <childnode refid="1712" relation="include">
        </childnode>
        <childnode refid="1714" relation="include">
        </childnode>
        <childnode refid="1715" relation="include">
        </childnode>
        <childnode refid="1716" relation="include">
        </childnode>
        <childnode refid="1717" relation="include">
        </childnode>
        <childnode refid="1708" relation="include">
        </childnode>
        <childnode refid="1711" relation="include">
        </childnode>
      </node>
      <node id="1713">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/HTMLtree.h</label>
        <link refid="_h_t_m_ltree_8h_source"/>
      </node>
      <node id="1730">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/templates.h</label>
        <link refid="templates_8h_source"/>
      </node>
      <node id="1698">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/tree.h</label>
        <link refid="tree_8h_source"/>
        <childnode refid="1699" relation="include">
        </childnode>
        <childnode refid="1700" relation="include">
        </childnode>
        <childnode refid="1701" relation="include">
        </childnode>
        <childnode refid="1702" relation="include">
        </childnode>
        <childnode refid="1703" relation="include">
        </childnode>
        <childnode refid="1733" relation="include">
        </childnode>
        <childnode refid="1734" relation="include">
        </childnode>
        <childnode refid="1713" relation="include">
        </childnode>
        <childnode refid="1705" relation="include">
        </childnode>
        <childnode refid="1735" relation="include">
        </childnode>
        <childnode refid="1718" relation="include">
        </childnode>
        <childnode refid="1736" relation="include">
        </childnode>
        <childnode refid="1737" relation="include">
        </childnode>
        <childnode refid="1738" relation="include">
        </childnode>
        <childnode refid="1708" relation="include">
        </childnode>
        <childnode refid="1709" relation="include">
        </childnode>
        <childnode refid="1710" relation="include">
        </childnode>
        <childnode refid="1739" relation="include">
        </childnode>
        <childnode refid="1720" relation="include">
        </childnode>
        <childnode refid="1719" relation="include">
        </childnode>
        <childnode refid="1740" relation="include">
        </childnode>
        <childnode refid="1725" relation="include">
        </childnode>
        <childnode refid="1741" relation="include">
        </childnode>
        <childnode refid="1728" relation="include">
        </childnode>
        <childnode refid="1729" relation="include">
        </childnode>
        <childnode refid="1742" relation="include">
        </childnode>
      </node>
      <node id="1733">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/encoding.h</label>
        <link refid="encoding_8h_source"/>
        <childnode refid="1705" relation="include">
        </childnode>
        <childnode refid="1708" relation="include">
        </childnode>
        <childnode refid="1710" relation="include">
        </childnode>
      </node>
      <node id="1700">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libexslt/exslt.h</label>
        <link refid="exslt_8h_source"/>
      </node>
      <node id="1718">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h</label>
        <link refid="valid_8h_source"/>
        <childnode refid="1705" relation="include">
        </childnode>
      </node>
      <node id="1716">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/SAX2.h</label>
        <link refid="_s_a_x2_8h_source"/>
        <childnode refid="1706" relation="include">
        </childnode>
      </node>
      <node id="1714">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h</label>
        <link refid="parser_internals_8h_source"/>
      </node>
      <node id="1720">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/documents.h</label>
        <link refid="documents_8h_source"/>
      </node>
      <node id="1725">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/imports.h</label>
        <link refid="imports_8h_source"/>
      </node>
      <node id="1719">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/xsltInternals.h</label>
        <link refid="xslt_internals_8h_source"/>
        <childnode refid="1720" relation="include">
        </childnode>
        <childnode refid="1721" relation="include">
        </childnode>
        <childnode refid="1722" relation="include">
        </childnode>
        <childnode refid="1723" relation="include">
        </childnode>
        <childnode refid="1725" relation="include">
        </childnode>
        <childnode refid="1726" relation="include">
        </childnode>
        <childnode refid="1727" relation="include">
        </childnode>
        <childnode refid="1728" relation="include">
        </childnode>
        <childnode refid="1729" relation="include">
        </childnode>
        <childnode refid="1730" relation="include">
        </childnode>
        <childnode refid="1711" relation="include">
        </childnode>
        <childnode refid="1724" relation="include">
        </childnode>
        <childnode refid="1731" relation="include">
        </childnode>
      </node>
      <node id="1721">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/extensions.h</label>
        <link refid="extensions_8h_source"/>
      </node>
      <node id="1707">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/threads.h</label>
        <link refid="threads_8h_source"/>
        <childnode refid="1706" relation="include">
        </childnode>
        <childnode refid="1697" relation="include">
        </childnode>
      </node>
      <node id="1715">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/SAX.h</label>
        <link refid="_s_a_x_8h_source"/>
      </node>
      <node id="1724">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/variables.h</label>
        <link refid="variables_8h_source"/>
      </node>
      <node id="1738">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlautomata.h</label>
        <link refid="xmlautomata_8h_source"/>
        <childnode refid="1718" relation="include">
        </childnode>
      </node>
      <node id="1731">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/xsltutils.h</label>
        <link refid="xsltutils_8h_source"/>
      </node>
      <node id="1726">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/keys.h</label>
        <link refid="keys_8h_source"/>
      </node>
      <node id="1735">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/uri.h</label>
        <link refid="uri_8h_source"/>
      </node>
      <node id="1717">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlerror.h</label>
        <link refid="xmlerror_8h_source"/>
        <childnode refid="1706" relation="include">
        </childnode>
        <childnode refid="1705" relation="include">
        </childnode>
        <childnode refid="1718" relation="include">
        </childnode>
        <childnode refid="1719" relation="include">
        </childnode>
        <childnode refid="1731" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="xmlmemory_8h_1a4f71389dfb832ec8b724ad68df8ef241" prot="public" static="no">
        <type>void(XMLCALL *</type>
        <definition>typedef void(XMLCALL * xmlFreeFunc) (void *mem)</definition>
        <argsstring>)(void *mem)</argsstring>
        <name>xmlFreeFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DEBUG_MEMORY:</para><para>DEBUG_MEMORY replaces the allocator with a collect and debug shell to the libc allocator. DEBUG_MEMORY should only be activated when debugging libxml i.e. if libxml has been configured with <ndash/>with-debug-mem too. DEBUG_MEMORY_LOCATION:</para><para>DEBUG_MEMORY_LOCATION should be activated only when debugging libxml i.e. if libxml has been configured with <ndash/>with-debug-mem too. xmlFreeFunc: : an already allocated block of memory</para><para>Signature for a free() implementation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="57" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="xmlmemory_8h_1af3047fdf792d28c50e160a1854084de2" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* LIBXML_ATTR_ALLOC_SIZE(1) XMLCALL *xmlMallocFunc)(size_t size)</definition>
        <argsstring>(1) XMLCALL *xmlMallocFunc)(size_t size)</argsstring>
        <name>LIBXML_ATTR_ALLOC_SIZE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>xmlMallocFunc: : the size requested in bytes</para><para>Signature for a malloc() implementation.</para><para>Returns a pointer to the newly allocated block or NULL in case of error. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="66" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="xmlmemory_8h_1a33755b4a71f6e6ad03febbc0422d9e9c" prot="public" static="no">
        <type>void *(XMLCALL *</type>
        <definition>typedef void*(XMLCALL * xmlReallocFunc) (void *mem, size_t size)</definition>
        <argsstring>)(void *mem, size_t size)</argsstring>
        <name>xmlReallocFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>xmlReallocFunc: : an already allocated block of memory : the new size requested in bytes</para><para>Signature for a realloc() implementation.</para><para>Returns a pointer to the newly reallocated block or NULL in case of error. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="77" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="xmlmemory_8h_1ab98782887f831b51e5fab3b1b9333e21" prot="public" static="no">
        <type>char *(XMLCALL *</type>
        <definition>typedef char*(XMLCALL * xmlStrdupFunc) (const char *str)</definition>
        <argsstring>)(const char *str)</argsstring>
        <name>xmlStrdupFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>xmlStrdupFunc: : a zero terminated string</para><para>Signature for an strdup() implementation.</para><para>Returns the copy of the string or NULL in case of error. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="87" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="xmlmemory_8h_1a8755b013a29c1a302453679c616a7787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlMemSetup</definition>
        <argsstring>(xmlFreeFunc freeFunc, xmlMallocFunc mallocFunc, xmlReallocFunc reallocFunc, xmlStrdupFunc strdupFunc)</argsstring>
        <name>xmlMemSetup</name>
        <param>
          <type>xmlFreeFunc</type>
          <declname>freeFunc</declname>
        </param>
        <param>
          <type>xmlMallocFunc</type>
          <declname>mallocFunc</declname>
        </param>
        <param>
          <type>xmlReallocFunc</type>
          <declname>reallocFunc</declname>
        </param>
        <param>
          <type>xmlStrdupFunc</type>
          <declname>strdupFunc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1aa3b9f8872e1daff13304b69b56160d9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlMemGet</definition>
        <argsstring>(xmlFreeFunc *freeFunc, xmlMallocFunc *mallocFunc, xmlReallocFunc *reallocFunc, xmlStrdupFunc *strdupFunc)</argsstring>
        <name>xmlMemGet</name>
        <param>
          <type>xmlFreeFunc *</type>
          <declname>freeFunc</declname>
        </param>
        <param>
          <type>xmlMallocFunc *</type>
          <declname>mallocFunc</declname>
        </param>
        <param>
          <type>xmlReallocFunc *</type>
          <declname>reallocFunc</declname>
        </param>
        <param>
          <type>xmlStrdupFunc *</type>
          <declname>strdupFunc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1a103aea4f625d713b5b6ad440e1156ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlGcMemSetup</definition>
        <argsstring>(xmlFreeFunc freeFunc, xmlMallocFunc mallocFunc, xmlMallocFunc mallocAtomicFunc, xmlReallocFunc reallocFunc, xmlStrdupFunc strdupFunc)</argsstring>
        <name>xmlGcMemSetup</name>
        <param>
          <type>xmlFreeFunc</type>
          <declname>freeFunc</declname>
        </param>
        <param>
          <type>xmlMallocFunc</type>
          <declname>mallocFunc</declname>
        </param>
        <param>
          <type>xmlMallocFunc</type>
          <declname>mallocAtomicFunc</declname>
        </param>
        <param>
          <type>xmlReallocFunc</type>
          <declname>reallocFunc</declname>
        </param>
        <param>
          <type>xmlStrdupFunc</type>
          <declname>strdupFunc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1a6756b41bc01eb0c83557da97a1ae41ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlGcMemGet</definition>
        <argsstring>(xmlFreeFunc *freeFunc, xmlMallocFunc *mallocFunc, xmlMallocFunc *mallocAtomicFunc, xmlReallocFunc *reallocFunc, xmlStrdupFunc *strdupFunc)</argsstring>
        <name>xmlGcMemGet</name>
        <param>
          <type>xmlFreeFunc *</type>
          <declname>freeFunc</declname>
        </param>
        <param>
          <type>xmlMallocFunc *</type>
          <declname>mallocFunc</declname>
        </param>
        <param>
          <type>xmlMallocFunc *</type>
          <declname>mallocAtomicFunc</declname>
        </param>
        <param>
          <type>xmlReallocFunc *</type>
          <declname>reallocFunc</declname>
        </param>
        <param>
          <type>xmlStrdupFunc *</type>
          <declname>strdupFunc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1a34fe5f1eeb0bebbc44016283b2ce32d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlInitMemory</definition>
        <argsstring>(void)</argsstring>
        <name>xmlInitMemory</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1aa637c5df5298f7777936d95d9327951a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlCleanupMemory</definition>
        <argsstring>(void)</argsstring>
        <name>xmlCleanupMemory</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1a01c5d46e6db4add179f3a15142659889" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlMemUsed</definition>
        <argsstring>(void)</argsstring>
        <name>xmlMemUsed</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1a20f1ab25f2110e71cbd47f6ce49864e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlMemBlocks</definition>
        <argsstring>(void)</argsstring>
        <name>xmlMemBlocks</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1a481ac8782e8f19eb6e87259f163a2f7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlMemDisplay</definition>
        <argsstring>(FILE *fp)</argsstring>
        <name>xmlMemDisplay</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1af63ddb54d8816f097fada4af9e9d6c3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlMemDisplayLast</definition>
        <argsstring>(FILE *fp, long nbBytes)</argsstring>
        <name>xmlMemDisplayLast</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>nbBytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1a18cb9039e694031347922525d29f7b4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlMemShow</definition>
        <argsstring>(FILE *fp, int nr)</argsstring>
        <name>xmlMemShow</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1a7eb2c723be7fda2424a730d374bc9f13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlMemoryDump</definition>
        <argsstring>(void)</argsstring>
        <name>xmlMemoryDump</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1aee6be9e75d1f4d2687500aba5ba43ac1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void *XMLCALL</type>
        <definition>XMLPUBFUN void* XMLCALL xmlMemMalloc</definition>
        <argsstring>(size_t size) LIBXML_ATTR_ALLOC_SIZE(1)</argsstring>
        <name>xmlMemMalloc</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1ace2053c01954b6d90a866c7018a9fec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void *XMLCALL</type>
        <definition>XMLPUBFUN void* XMLCALL xmlMemRealloc</definition>
        <argsstring>(void *ptr, size_t size)</argsstring>
        <name>xmlMemRealloc</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1a44cddd6d52cfe35d46654148aed1b491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlMemFree</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>xmlMemFree</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1a12dab7b8ff81bac60e5db0f26176cd05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN char *XMLCALL</type>
        <definition>XMLPUBFUN char* XMLCALL xmlMemoryStrdup</definition>
        <argsstring>(const char *str)</argsstring>
        <name>xmlMemoryStrdup</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1a82cb4e034b1cad067b787e2b2f446800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void *XMLCALL</type>
        <definition>XMLPUBFUN void* XMLCALL xmlMallocLoc</definition>
        <argsstring>(size_t size, const char *file, int line) LIBXML_ATTR_ALLOC_SIZE(1)</argsstring>
        <name>xmlMallocLoc</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1adba1da2d78814dac75906fc3040108bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void *XMLCALL</type>
        <definition>XMLPUBFUN void* XMLCALL xmlReallocLoc</definition>
        <argsstring>(void *ptr, size_t size, const char *file, int line)</argsstring>
        <name>xmlReallocLoc</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1ac7755103e2116fb73de6cc66243d7a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void *XMLCALL</type>
        <definition>XMLPUBFUN void* XMLCALL xmlMallocAtomicLoc</definition>
        <argsstring>(size_t size, const char *file, int line) LIBXML_ATTR_ALLOC_SIZE(1)</argsstring>
        <name>xmlMallocAtomicLoc</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="xmlmemory_8h_1a069ed73e18dea3876535177314d133c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN char *XMLCALL</type>
        <definition>XMLPUBFUN char* XMLCALL xmlMemStrdupLoc</definition>
        <argsstring>(const char *str, const char *file, int line)</argsstring>
        <name>xmlMemStrdupLoc</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h" line="167" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Summary:<sp/>interface<sp/>for<sp/>the<sp/>memory<sp/>allocator</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>provides<sp/>interfaces<sp/>for<sp/>the<sp/>memory<sp/>allocator,</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>including<sp/>debugging<sp/>capabilities.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copy:<sp/>See<sp/>Copyright<sp/>for<sp/>the<sp/>status<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Daniel<sp/>Veillard</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__DEBUG_MEMORY_ALLOC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__DEBUG_MEMORY_ALLOC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/xmlversion.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">/*<sp/>#define<sp/>DEBUG_MEMORY_FREED<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>DEBUG_MEMORY_LOCATION<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DEBUG_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEBUG_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor">#ifdef<sp/>DEBUG_MEMORY_LOCATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>The<sp/>XML<sp/>memory<sp/>wrapper<sp/>support<sp/>4<sp/>basic<sp/>overloadable<sp/>functions.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="57"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(XMLCALL<sp/>*xmlFreeFunc)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*mem);</highlight></codeline>
<codeline lineno="66"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(LIBXML_ATTR_ALLOC_SIZE(1)<sp/>XMLCALL<sp/>*xmlMallocFunc)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">typedef<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(XMLCALL<sp/>*xmlReallocFunc)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*mem,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">typedef<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*(XMLCALL<sp/>*xmlStrdupFunc)(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/>The<sp/>4<sp/>interfaces<sp/>used<sp/>for<sp/>all<sp/>memory<sp/>handling<sp/>within<sp/>libxml.</highlight></codeline>
<codeline lineno="91"><highlight class="comment">LIBXML_DLL_IMPORT<sp/>xmlFreeFunc<sp/>xmlFree;</highlight></codeline>
<codeline lineno="92"><highlight class="comment">LIBXML_DLL_IMPORT<sp/>xmlMallocFunc<sp/>xmlMalloc;</highlight></codeline>
<codeline lineno="93"><highlight class="comment">LIBXML_DLL_IMPORT<sp/>xmlMallocFunc<sp/>xmlMallocAtomic;</highlight></codeline>
<codeline lineno="94"><highlight class="comment">LIBXML_DLL_IMPORT<sp/>xmlReallocFunc<sp/>xmlRealloc;</highlight></codeline>
<codeline lineno="95"><highlight class="comment">LIBXML_DLL_IMPORT<sp/>xmlStrdupFunc<sp/>xmlMemStrdup;</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>The<sp/>way<sp/>to<sp/>overload<sp/>the<sp/>existing<sp/>functions.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>The<sp/>xmlGc<sp/>function<sp/>have<sp/>an<sp/>extra<sp/>entry<sp/>for<sp/>atomic<sp/>block</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>allocations<sp/>useful<sp/>for<sp/>garbage<sp/>collected<sp/>memory<sp/>allocators</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlMemSetup<sp/>(xmlFreeFunc<sp/>freeFunc,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlMallocFunc<sp/>mallocFunc,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlReallocFunc<sp/>reallocFunc,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlStrdupFunc<sp/>strdupFunc);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlMemGet<sp/><sp/><sp/>(xmlFreeFunc<sp/>*freeFunc,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlMallocFunc<sp/>*mallocFunc,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlReallocFunc<sp/>*reallocFunc,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlStrdupFunc<sp/>*strdupFunc);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlGcMemSetup<sp/><sp/><sp/>(xmlFreeFunc<sp/>freeFunc,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlMallocFunc<sp/>mallocFunc,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlMallocFunc<sp/>mallocAtomicFunc,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlReallocFunc<sp/>reallocFunc,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlStrdupFunc<sp/>strdupFunc);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlGcMemGet<sp/>(xmlFreeFunc<sp/>*freeFunc,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlMallocFunc<sp/>*mallocFunc,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlMallocFunc<sp/>*mallocAtomicFunc,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlReallocFunc<sp/>*reallocFunc,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlStrdupFunc<sp/>*strdupFunc);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/>Initialization<sp/>of<sp/>the<sp/>memory<sp/>layer.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlInitMemory<sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>Cleanup<sp/>of<sp/>the<sp/>memory<sp/>layer.</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCleanupMemory<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>These<sp/>are<sp/>specific<sp/>to<sp/>the<sp/>XML<sp/>debug<sp/>memory<sp/>wrapper.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlMemUsed<sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlMemBlocks<sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlMemDisplay<sp/><sp/><sp/>(FILE<sp/>*fp);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlMemDisplayLast(FILE<sp/>*fp,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nbBytes);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlMemShow<sp/><sp/>(FILE<sp/>*fp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nr);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlMemoryDump<sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlMemMalloc<sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>LIBXML_ATTR_ALLOC_SIZE(1);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlMemRealloc<sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlMemFree<sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlMemoryStrdup<sp/>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="160"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlMallocLoc<sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line)<sp/>LIBXML_ATTR_ALLOC_SIZE(1);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlReallocLoc<sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlMallocAtomicLoc<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line)<sp/>LIBXML_ATTR_ALLOC_SIZE(1);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlMemStrdupLoc<sp/>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_MEMORY_LOCATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor">#define<sp/>xmlMalloc(size)<sp/>xmlMallocLoc((size),<sp/>__FILE__,<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor">#define<sp/>xmlMallocAtomic(size)<sp/>xmlMallocAtomicLoc((size),<sp/>__FILE__,<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor">#define<sp/>xmlRealloc(ptr,<sp/>size)<sp/>xmlReallocLoc((ptr),<sp/>(size),<sp/>__FILE__,<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor">#define<sp/>xmlMemStrdup(str)<sp/>xmlMemStrdupLoc((str),<sp/>__FILE__,<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DEBUG_MEMORY_LOCATION<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__XML_GLOBALS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__XML_THREADS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/threads.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/globals.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>__DEBUG_MEMORY_ALLOC__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h"/>
  </compounddef>
</doxygen>
