<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="parser_8h" kind="file" language="C++">
    <compoundname>parser.h</compoundname>
    <includes local="no">stdarg.h</includes>
    <includes refid="xmlversion_8h" local="no">libxml/xmlversion.h</includes>
    <includes refid="tree_8h" local="no">libxml/tree.h</includes>
    <includes refid="dict_8h" local="no">libxml/dict.h</includes>
    <includes refid="hash_8h" local="no">libxml/hash.h</includes>
    <includes refid="valid_8h" local="no">libxml/valid.h</includes>
    <includes refid="entities_8h" local="no">libxml/entities.h</includes>
    <includes refid="xmlerror_8h" local="no">libxml/xmlerror.h</includes>
    <includes refid="xmlstring_8h" local="no">libxml/xmlstring.h</includes>
    <includes refid="encoding_8h" local="no">libxml/encoding.h</includes>
    <includes refid="xml_i_o_8h" local="no">libxml/xmlIO.h</includes>
    <includes refid="globals_8h" local="no">libxml/globals.h</includes>
    <includedby refid="globals_8h" local="no">venv/lib/python3.6/site-packages/lxml/includes/libxml/globals.h</includedby>
    <includedby refid="hash_8h" local="no">venv/lib/python3.6/site-packages/lxml/includes/libxml/hash.h</includedby>
    <includedby refid="_h_t_m_lparser_8h" local="no">venv/lib/python3.6/site-packages/lxml/includes/libxml/HTMLparser.h</includedby>
    <includedby refid="parser_internals_8h" local="no">venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h</includedby>
    <includedby refid="_s_a_x_8h" local="no">venv/lib/python3.6/site-packages/lxml/includes/libxml/SAX.h</includedby>
    <includedby refid="_s_a_x2_8h" local="no">venv/lib/python3.6/site-packages/lxml/includes/libxml/SAX2.h</includedby>
    <includedby refid="xmlerror_8h" local="no">venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlerror.h</includedby>
    <includedby refid="xml_i_o_8h" local="no">venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlIO.h</includedby>
    <includedby refid="transform_8h" local="no">venv/lib/python3.6/site-packages/lxml/includes/libxslt/transform.h</includedby>
    <incdepgraph>
      <node id="837">
        <label>stdarg.h</label>
      </node>
      <node id="844">
        <label>libxml/xmlregexp.h</label>
        <link refid="xmlregexp_8h_source"/>
        <childnode refid="838" relation="include">
        </childnode>
      </node>
      <node id="851">
        <label>libxml/xlink.h</label>
        <link refid="xlink_8h_source"/>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
      </node>
      <node id="850">
        <label>stdlib.h</label>
      </node>
      <node id="857">
        <label>libxml/entities.h</label>
        <link refid="entities_8h_source"/>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
      </node>
      <node id="853">
        <label>libxml/hash.h</label>
        <link refid="hash_8h_source"/>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="836" relation="include">
        </childnode>
        <childnode refid="852" relation="include">
        </childnode>
      </node>
      <node id="859">
        <label>libxml/xmlIO.h</label>
        <link refid="xml_i_o_8h_source"/>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="847" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
        <childnode refid="836" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
      </node>
      <node id="852">
        <label>libxml/dict.h</label>
        <link refid="dict_8h_source"/>
        <childnode refid="842" relation="include">
        </childnode>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
      </node>
      <node id="842">
        <label>limits.h</label>
      </node>
      <node id="855">
        <label>libxml/list.h</label>
        <link refid="list_8h_source"/>
        <childnode refid="838" relation="include">
        </childnode>
      </node>
      <node id="847">
        <label>libxml/globals.h</label>
        <link refid="globals_8h_source"/>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="836" relation="include">
        </childnode>
        <childnode refid="848" relation="include">
        </childnode>
        <childnode refid="849" relation="include">
        </childnode>
        <childnode refid="845" relation="include">
        </childnode>
        <childnode refid="846" relation="include">
        </childnode>
      </node>
      <node id="845">
        <label>libxml/xmlmemory.h</label>
        <link refid="xmlmemory_8h_source"/>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="846" relation="include">
        </childnode>
        <childnode refid="847" relation="include">
        </childnode>
      </node>
      <node id="838">
        <label>libxml/xmlversion.h</label>
        <link refid="xmlversion_8h_source"/>
        <childnode refid="839" relation="include">
        </childnode>
      </node>
      <node id="843">
        <label>libxml/xmlstring.h</label>
        <link refid="xmlstring_8h_source"/>
        <childnode refid="837" relation="include">
        </childnode>
        <childnode refid="838" relation="include">
        </childnode>
      </node>
      <node id="836">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h</label>
        <link refid="parser_8h"/>
        <childnode refid="837" relation="include">
        </childnode>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
        <childnode refid="852" relation="include">
        </childnode>
        <childnode refid="853" relation="include">
        </childnode>
        <childnode refid="854" relation="include">
        </childnode>
        <childnode refid="857" relation="include">
        </childnode>
        <childnode refid="848" relation="include">
        </childnode>
        <childnode refid="843" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="859" relation="include">
        </childnode>
        <childnode refid="847" relation="include">
        </childnode>
      </node>
      <node id="840">
        <label>libxml/tree.h</label>
        <link refid="tree_8h_source"/>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="842" relation="include">
        </childnode>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="843" relation="include">
        </childnode>
        <childnode refid="844" relation="include">
        </childnode>
        <childnode refid="845" relation="include">
        </childnode>
      </node>
      <node id="858">
        <label>libxml/encoding.h</label>
        <link refid="encoding_8h_source"/>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
      </node>
      <node id="854">
        <label>libxml/valid.h</label>
        <link refid="valid_8h_source"/>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="848" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="856" relation="include">
        </childnode>
        <childnode refid="844" relation="include">
        </childnode>
      </node>
      <node id="849">
        <label>libxml/SAX2.h</label>
        <link refid="_s_a_x2_8h_source"/>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="850" relation="include">
        </childnode>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="836" relation="include">
        </childnode>
        <childnode refid="851" relation="include">
        </childnode>
      </node>
      <node id="846">
        <label>libxml/threads.h</label>
        <link refid="threads_8h_source"/>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="847" relation="include">
        </childnode>
      </node>
      <node id="856">
        <label>libxml/xmlautomata.h</label>
        <link refid="xmlautomata_8h_source"/>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
      </node>
      <node id="839">
        <label>libxml/xmlexports.h</label>
        <link refid="xmlexports_8h_source"/>
      </node>
      <node id="841">
        <label>stdio.h</label>
      </node>
      <node id="848">
        <label>libxml/xmlerror.h</label>
        <link refid="xmlerror_8h_source"/>
        <childnode refid="836" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="901">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/namespaces.h</label>
        <link refid="namespaces_8h_source"/>
      </node>
      <node id="902">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/xslt.h</label>
        <link refid="xslt_8h_source"/>
        <childnode refid="872" relation="include">
        </childnode>
      </node>
      <node id="868">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/debugXML.h</label>
        <link refid="debug_x_m_l_8h_source"/>
      </node>
      <node id="895">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xlink.h</label>
        <link refid="xlink_8h_source"/>
        <childnode refid="896" relation="include">
        </childnode>
        <childnode refid="897" relation="include">
        </childnode>
      </node>
      <node id="888">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlreader.h</label>
        <link refid="xmlreader_8h_source"/>
      </node>
      <node id="882">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/security.h</label>
        <link refid="security_8h_source"/>
      </node>
      <node id="876">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/functions.h</label>
        <link refid="functions_8h_source"/>
        <childnode refid="877" relation="include">
        </childnode>
      </node>
      <node id="903">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/HTMLparser.h</label>
        <link refid="_h_t_m_lparser_8h_source"/>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="904" relation="include">
        </childnode>
      </node>
      <node id="875">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/extra.h</label>
        <link refid="extra_8h_source"/>
      </node>
      <node id="890">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/entities.h</label>
        <link refid="entities_8h_source"/>
        <childnode refid="860" relation="include">
        </childnode>
      </node>
      <node id="870">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/hash.h</label>
        <link refid="hash_8h_source"/>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="871" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
      </node>
      <node id="887">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlIO.h</label>
        <link refid="xml_i_o_8h_source"/>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="889" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
      </node>
      <node id="900">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/numbersInternals.h</label>
        <link refid="numbers_internals_8h_source"/>
        <childnode refid="872" relation="include">
        </childnode>
      </node>
      <node id="899">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/attributes.h</label>
        <link refid="attributes_8h_source"/>
      </node>
      <node id="881">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/preproc.h</label>
        <link refid="preproc_8h_source"/>
      </node>
      <node id="894">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xinclude.h</label>
        <link refid="xinclude_8h_source"/>
      </node>
      <node id="884">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/transform.h</label>
        <link refid="transform_8h_source"/>
      </node>
      <node id="889">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlsave.h</label>
        <link refid="xmlsave_8h_source"/>
      </node>
      <node id="880">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/pattern.h</label>
        <link refid="pattern_8h_source"/>
      </node>
      <node id="865">
        <label>venv/lib/python3.6/site-packages/lxml/includes/etree_defs.h</label>
        <link refid="etree__defs_8h_source"/>
      </node>
      <node id="867">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/catalog.h</label>
        <link refid="catalog_8h_source"/>
      </node>
      <node id="869">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/dict.h</label>
        <link refid="dict_8h_source"/>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
      </node>
      <node id="861">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/globals.h</label>
        <link refid="globals_8h_source"/>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="862" relation="include">
        </childnode>
        <childnode refid="887" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
      </node>
      <node id="871">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/relaxng.h</label>
        <link refid="relaxng_8h_source"/>
      </node>
      <node id="863">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h</label>
        <link refid="xmlmemory_8h_source"/>
        <childnode refid="864" relation="include">
        </childnode>
        <childnode refid="861" relation="include">
        </childnode>
      </node>
      <node id="860">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h</label>
        <link refid="parser_8h"/>
        <childnode refid="861" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="903" relation="include">
        </childnode>
        <childnode refid="904" relation="include">
        </childnode>
        <childnode refid="896" relation="include">
        </childnode>
        <childnode refid="897" relation="include">
        </childnode>
        <childnode refid="905" relation="include">
        </childnode>
        <childnode refid="887" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
      </node>
      <node id="891">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/HTMLtree.h</label>
        <link refid="_h_t_m_ltree_8h_source"/>
      </node>
      <node id="883">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/templates.h</label>
        <link refid="templates_8h_source"/>
      </node>
      <node id="864">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/tree.h</label>
        <link refid="tree_8h_source"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="886" relation="include">
        </childnode>
        <childnode refid="890" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
        <childnode refid="895" relation="include">
        </childnode>
        <childnode refid="898" relation="include">
        </childnode>
        <childnode refid="887" relation="include">
        </childnode>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="889" relation="include">
        </childnode>
        <childnode refid="899" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="900" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
        <childnode refid="901" relation="include">
        </childnode>
        <childnode refid="881" relation="include">
        </childnode>
        <childnode refid="882" relation="include">
        </childnode>
        <childnode refid="902" relation="include">
        </childnode>
      </node>
      <node id="886">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/encoding.h</label>
        <link refid="encoding_8h_source"/>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="887" relation="include">
        </childnode>
        <childnode refid="889" relation="include">
        </childnode>
      </node>
      <node id="866">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libexslt/exslt.h</label>
        <link refid="exslt_8h_source"/>
      </node>
      <node id="893">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h</label>
        <link refid="valid_8h_source"/>
        <childnode refid="860" relation="include">
        </childnode>
      </node>
      <node id="897">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/SAX2.h</label>
        <link refid="_s_a_x2_8h_source"/>
        <childnode refid="861" relation="include">
        </childnode>
      </node>
      <node id="904">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h</label>
        <link refid="parser_internals_8h_source"/>
      </node>
      <node id="873">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/documents.h</label>
        <link refid="documents_8h_source"/>
      </node>
      <node id="878">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/imports.h</label>
        <link refid="imports_8h_source"/>
      </node>
      <node id="872">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/xsltInternals.h</label>
        <link refid="xslt_internals_8h_source"/>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="874" relation="include">
        </childnode>
        <childnode refid="875" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
        <childnode refid="879" relation="include">
        </childnode>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="881" relation="include">
        </childnode>
        <childnode refid="882" relation="include">
        </childnode>
        <childnode refid="883" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
      </node>
      <node id="874">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/extensions.h</label>
        <link refid="extensions_8h_source"/>
      </node>
      <node id="862">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/threads.h</label>
        <link refid="threads_8h_source"/>
        <childnode refid="861" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
      </node>
      <node id="896">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/SAX.h</label>
        <link refid="_s_a_x_8h_source"/>
      </node>
      <node id="877">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/variables.h</label>
        <link refid="variables_8h_source"/>
      </node>
      <node id="898">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlautomata.h</label>
        <link refid="xmlautomata_8h_source"/>
        <childnode refid="893" relation="include">
        </childnode>
      </node>
      <node id="885">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/xsltutils.h</label>
        <link refid="xsltutils_8h_source"/>
      </node>
      <node id="879">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/keys.h</label>
        <link refid="keys_8h_source"/>
      </node>
      <node id="892">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/uri.h</label>
        <link refid="uri_8h_source"/>
      </node>
      <node id="905">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlerror.h</label>
        <link refid="xmlerror_8h_source"/>
        <childnode refid="861" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct__xml_parser_input" prot="public">_xmlParserInput</innerclass>
    <innerclass refid="struct__xml_parser_node_info" prot="public">_xmlParserNodeInfo</innerclass>
    <innerclass refid="struct__xml_parser_node_info_seq" prot="public">_xmlParserNodeInfoSeq</innerclass>
    <innerclass refid="struct__xml_parser_ctxt" prot="public">_xmlParserCtxt</innerclass>
    <innerclass refid="struct__xml_s_a_x_locator" prot="public">_xmlSAXLocator</innerclass>
    <innerclass refid="struct__xml_s_a_x_handler" prot="public">_xmlSAXHandler</innerclass>
    <innerclass refid="struct__xml_s_a_x_handler_v1" prot="public">_xmlSAXHandlerV1</innerclass>
      <sectiondef kind="user-defined">
      <header>:  The entity name</header>
      <description><para>referenceSAXFunc: : the user data (XML parser context)</para><para>Called when an entity reference is detected. </para></description>
      <memberdef kind="define" id="parser_8h_1ac1c62309afa1a006b6c4e1c5b0b42c8d" prot="public" static="no">
        <name>XML_SAX2_MAGIC</name>
        <initializer>0xDEEDBEAF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XML_SAX2_MAGIC:</para><para>Special constant found in SAX2 blocks initialized fields </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="671" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="671" bodyend="-1"/>
      </memberdef>
      <memberdef kind="enum" id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442c" prot="public" static="no">
        <name>xmlParserOption</name>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442ca75a738f3f852564dacda58af3c0cd146" prot="public">
          <name>XML_PARSE_RECOVER</name>
          <initializer>= 1&lt;&lt;0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442cae26a8ac158a3bd80902cf3f6bfcbff9b" prot="public">
          <name>XML_PARSE_NOENT</name>
          <initializer>= 1&lt;&lt;1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442ca72142bbf605afc8ae8e23bf3cef04c2f" prot="public">
          <name>XML_PARSE_DTDLOAD</name>
          <initializer>= 1&lt;&lt;2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442caa5688237b14df218e9d3ecb112a00b58" prot="public">
          <name>XML_PARSE_DTDATTR</name>
          <initializer>= 1&lt;&lt;3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442ca3332812e311c99616d09d2dd4cfaf606" prot="public">
          <name>XML_PARSE_DTDVALID</name>
          <initializer>= 1&lt;&lt;4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442cac5b574c2a468f0f843db4a20ae7bc5d3" prot="public">
          <name>XML_PARSE_NOERROR</name>
          <initializer>= 1&lt;&lt;5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442ca33657d6414d066b8c3ad1da263b378fe" prot="public">
          <name>XML_PARSE_NOWARNING</name>
          <initializer>= 1&lt;&lt;6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442cae2cf8ab1c72b39b77c2b93a7fc8f4601" prot="public">
          <name>XML_PARSE_PEDANTIC</name>
          <initializer>= 1&lt;&lt;7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442ca5cd8ca4096672e0270eca01a1bf363cc" prot="public">
          <name>XML_PARSE_NOBLANKS</name>
          <initializer>= 1&lt;&lt;8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442ca0722d56711d820beddfd5ede8c132c13" prot="public">
          <name>XML_PARSE_SAX1</name>
          <initializer>= 1&lt;&lt;9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442ca758b9de9111a47a561f4f0415e03a8da" prot="public">
          <name>XML_PARSE_XINCLUDE</name>
          <initializer>= 1&lt;&lt;10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442ca5c4e109aa639c9d8d5bb2f7922453566" prot="public">
          <name>XML_PARSE_NONET</name>
          <initializer>= 1&lt;&lt;11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442ca97797e6b6badab0925ee629fbaddf689" prot="public">
          <name>XML_PARSE_NODICT</name>
          <initializer>= 1&lt;&lt;12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442cae6512ccdd06597c52af2b110d27c9597" prot="public">
          <name>XML_PARSE_NSCLEAN</name>
          <initializer>= 1&lt;&lt;13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442ca3950437d35f383adac9b8bf80811f96c" prot="public">
          <name>XML_PARSE_NOCDATA</name>
          <initializer>= 1&lt;&lt;14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442cacb3591e65b9ba08f0a7f90f9bc9d0abd" prot="public">
          <name>XML_PARSE_NOXINCNODE</name>
          <initializer>= 1&lt;&lt;15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442ca4e1e1a94e4dfaa60e4c29165464edd9b" prot="public">
          <name>XML_PARSE_COMPACT</name>
          <initializer>= 1&lt;&lt;16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442caadc53b738160d8a013c8e8b547c530d4" prot="public">
          <name>XML_PARSE_OLD10</name>
          <initializer>= 1&lt;&lt;17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442ca6909ddeeff16c7a09cf1683425493c9e" prot="public">
          <name>XML_PARSE_NOBASEFIX</name>
          <initializer>= 1&lt;&lt;18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442ca818189d96d210abc76667c3e966b9faf" prot="public">
          <name>XML_PARSE_HUGE</name>
          <initializer>= 1&lt;&lt;19</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442cabc7c5766c3a21d59f4dcabb93df514d0" prot="public">
          <name>XML_PARSE_OLDSAX</name>
          <initializer>= 1&lt;&lt;20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442ca64d1dd1d9a694868b01c5af30f9cb3ca" prot="public">
          <name>XML_PARSE_IGNORE_ENC</name>
          <initializer>= 1&lt;&lt;21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a7d2daaf67df051ca5ef0b319b640442caa0b7be36b53ce842828eadf36cc4a277" prot="public">
          <name>XML_PARSE_BIG_LINES</name>
          <initializer>= 1&lt;&lt;22</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>xmlParserOption:</para><para>This is the set of XML parser options that can be passed down to the xmlReadDoc() and similar calls. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1089" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="1089" bodyend="1115"/>
      </memberdef>
      <memberdef kind="enum" id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78" prot="public" static="no">
        <name>xmlFeature</name>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a51770dc34922cb61dab67c9bffc7ad8b" prot="public">
          <name>XML_WITH_THREAD</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a0c594734f637b360b6d8169519f0c2c2" prot="public">
          <name>XML_WITH_TREE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a450f3e2a855e9bc918229fdd2bb709c4" prot="public">
          <name>XML_WITH_OUTPUT</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a9dca3b6cae309b1b76b125a31ce8740a" prot="public">
          <name>XML_WITH_PUSH</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78abf94cab7c101c444579f96f2d740017d" prot="public">
          <name>XML_WITH_READER</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78ab00a8c8509261268d7bafcf89d0b52f4" prot="public">
          <name>XML_WITH_PATTERN</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78ab69f61fb0ea4aedd3d64a77dfc0bbeaa" prot="public">
          <name>XML_WITH_WRITER</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78aaf2cea571679cdd6bbd4cab03dc4303f" prot="public">
          <name>XML_WITH_SAX1</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78abb36769500bebd9d3c5a5ebc921eb2b9" prot="public">
          <name>XML_WITH_FTP</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78abd00e51b0e2cdebfef9412977ee6e7d0" prot="public">
          <name>XML_WITH_HTTP</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a4c17c36bc47a4355d6ea1e26409feee9" prot="public">
          <name>XML_WITH_VALID</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a8a45ef7611d0108c71760166b85c8c3b" prot="public">
          <name>XML_WITH_HTML</name>
          <initializer>= 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a04d682a6dc04bd29847dad333ed07517" prot="public">
          <name>XML_WITH_LEGACY</name>
          <initializer>= 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a6cf68cf41ae8bc998a3833e9724c5c49" prot="public">
          <name>XML_WITH_C14N</name>
          <initializer>= 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a07c4c6a886a5b1bd7e45a1db5fba9712" prot="public">
          <name>XML_WITH_CATALOG</name>
          <initializer>= 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a08096d568aab4327a60014107d015b63" prot="public">
          <name>XML_WITH_XPATH</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a261e5d515ee4860530978262920b2ec1" prot="public">
          <name>XML_WITH_XPTR</name>
          <initializer>= 17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78ad768f261fc12f45d486289515777bc96" prot="public">
          <name>XML_WITH_XINCLUDE</name>
          <initializer>= 18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78aa059b0b2af378b447950cfac46272902" prot="public">
          <name>XML_WITH_ICONV</name>
          <initializer>= 19</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a967975edbcebe26ed01d257be68f7125" prot="public">
          <name>XML_WITH_ISO8859X</name>
          <initializer>= 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a7c5468bb939d2759f95bed17520dd201" prot="public">
          <name>XML_WITH_UNICODE</name>
          <initializer>= 21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a87a06324ade63d1cb53fda529255e9c2" prot="public">
          <name>XML_WITH_REGEXP</name>
          <initializer>= 22</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a92e31f8ff3e5ebb476e722a11686c8a8" prot="public">
          <name>XML_WITH_AUTOMATA</name>
          <initializer>= 23</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a4a1f5c17e3fa78da037134ca408248fb" prot="public">
          <name>XML_WITH_EXPR</name>
          <initializer>= 24</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a638348d985431d7ebcbb23caf67af251" prot="public">
          <name>XML_WITH_SCHEMAS</name>
          <initializer>= 25</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78add5324817d5e42be52d8526da5bc56a8" prot="public">
          <name>XML_WITH_SCHEMATRON</name>
          <initializer>= 26</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a7204e79e6b537eb59deb9085b3351e2c" prot="public">
          <name>XML_WITH_MODULES</name>
          <initializer>= 27</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a019de3a7bdfcdb3b325804f72b9c3171" prot="public">
          <name>XML_WITH_DEBUG</name>
          <initializer>= 28</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a1cc914713ceb076b337d0b4f31453637" prot="public">
          <name>XML_WITH_DEBUG_MEM</name>
          <initializer>= 29</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a21e9fea1810811ea443cf1e6166332ff" prot="public">
          <name>XML_WITH_DEBUG_RUN</name>
          <initializer>= 30</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78aaca31b5811028a72241c15f067d98eaf" prot="public">
          <name>XML_WITH_ZLIB</name>
          <initializer>= 31</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78ae2a42d8516cf994f2897dec2de9da22c" prot="public">
          <name>XML_WITH_ICU</name>
          <initializer>= 32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a8c1dbb462e2fd648158cc8acc08a8dde" prot="public">
          <name>XML_WITH_LZMA</name>
          <initializer>= 33</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1ab7ca5b67bda0c933c151e8fdb4aaaf78a7880ffe6787f3160f74bddb6dbd260e8" prot="public">
          <name>XML_WITH_NONE</name>
          <initializer>= 99999</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>xmlFeature:</para><para>Used to examine the existance of features that can be enabled or disabled at compile-time. They used to be called XML_FEATURE_xxx but this clashed with Expat </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1198" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="1198" bodyend="1233"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1a85f408324c98a8d32b8e6555c952bb11" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* entityDeclSAXFunc) (void *ctx, const xmlChar *name, int type, const xmlChar *publicId, const xmlChar *systemId, xmlChar *content)</definition>
        <argsstring>)(void *ctx, const xmlChar *name, int type, const xmlChar *publicId, const xmlChar *systemId, xmlChar *content)</argsstring>
        <name>entityDeclSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="412" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1aec86c94e515536f0b51b49226fbc2d8c" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* referenceSAXFunc) (void *ctx, const xmlChar *name)</definition>
        <argsstring>)(void *ctx, const xmlChar *name)</argsstring>
        <name>referenceSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="543" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="543" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1a7fd5e24151a5d5600ae4dce65969ec6c" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* charactersSAXFunc) (void *ctx, const xmlChar *ch, int len)</definition>
        <argsstring>)(void *ctx, const xmlChar *ch, int len)</argsstring>
        <name>charactersSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>charactersSAXFunc: : the user data (XML parser context) : a xmlChar string : the number of xmlChar</para><para>Receiving some chars from the parser. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="553" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1aa33097820941f90d7f40002ea1645522" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* ignorableWhitespaceSAXFunc) (void *ctx, const xmlChar *ch, int len)</definition>
        <argsstring>)(void *ctx, const xmlChar *ch, int len)</argsstring>
        <name>ignorableWhitespaceSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ignorableWhitespaceSAXFunc: : the user data (XML parser context) : a xmlChar string : the number of xmlChar</para><para>Receiving some ignorable whitespaces from the parser. UNUSED: by default the DOM building will use characters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="565" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1a67fec9511920e346c9cf8db23619bf94" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* processingInstructionSAXFunc) (void *ctx, const xmlChar *target, const xmlChar *data)</definition>
        <argsstring>)(void *ctx, const xmlChar *target, const xmlChar *data)</argsstring>
        <name>processingInstructionSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>processingInstructionSAXFunc: : the user data (XML parser context) : the target name : the PI data&apos;s</para><para>A processing instruction has been parsed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="576" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1a4c805c301c421fcc1706f23318089471" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* commentSAXFunc) (void *ctx, const xmlChar *value)</definition>
        <argsstring>)(void *ctx, const xmlChar *value)</argsstring>
        <name>commentSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>commentSAXFunc: : the user data (XML parser context) : the comment content</para><para>A comment has been parsed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="586" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1a0b0bc862805a2b3dda16c90504e5483f" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* cdataBlockSAXFunc) (void *ctx, const xmlChar *value, int len)</definition>
        <argsstring>)(void *ctx, const xmlChar *value, int len)</argsstring>
        <name>cdataBlockSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cdataBlockSAXFunc: : the user data (XML parser context) : The pcdata content : the block length</para><para>Called when a pcdata block has been parsed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="596" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="596" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1a3f273102b88d032a2a791343761eddbb" prot="public" static="no">
        <type>void(XMLCDECL *</type>
        <definition>typedef void(XMLCDECL * warningSAXFunc) (void *ctx, const char *msg,...) LIBXML_ATTR_FORMAT(2</definition>
        <argsstring>)(void *ctx, const char *msg,...) LIBXML_ATTR_FORMAT(2</argsstring>
        <name>warningSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>warningSAXFunc: : an XML parser context : the message to display/transmit ...: extra parameters for the message display</para><para>Display and format a warning messages, callback. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="608" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="608" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1aac6f256dea9f74c0ab334f5881940ff2" prot="public" static="no">
        <type>void(XMLCDECL *) typede</type>
        <definition>typedef void(XMLCDECL *) typede void) (XMLCDECL *errorSAXFunc)(void *ctx</definition>
        <argsstring>)(XMLCDECL *errorSAXFunc)(void *ctx</argsstring>
        <name>void</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>errorSAXFunc: : an XML parser context : the message to display/transmit ...: extra parameters for the message display</para><para>Display and format an error messages, callback. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="618" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1ae6ce52968b4b221237181dbdea400320" prot="public" static="no">
        <type>void(XMLCDECL *) typedef const char</type>
        <definition>typedef void(XMLCDECL *) typedef const char msg) </definition>
        <argsstring>)</argsstring>
        <name>msg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="619" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1ac738b3bb35101a9a1fed010fa8533b07" prot="public" static="no">
        <type>void(XMLCDECL *) typedef const cha</type>
        <definition>typedef void(XMLCDECL *) typedef const cha LIBXML_ATTR_FORMAT) (2, 3)</definition>
        <argsstring>)(2, 3)</argsstring>
        <name>LIBXML_ATTR_FORMAT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="619" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1aad1d3903c24d678d94f0414926f2b519" prot="public" static="no">
        <type>void(XMLCDECL *</type>
        <definition>typedef void(XMLCDECL * fatalErrorSAXFunc) (void *ctx, const char *msg,...) LIBXML_ATTR_FORMAT(2</definition>
        <argsstring>)(void *ctx, const char *msg,...) LIBXML_ATTR_FORMAT(2</argsstring>
        <name>fatalErrorSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>fatalErrorSAXFunc: : an XML parser context : the message to display/transmit ...: extra parameters for the message display</para><para>Display and format fatal error messages, callback. Note: so far fatalError() SAX callbacks are not used, error() get all the callbacks for errors. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="630" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1aeda4c032a37f82f77be89a026655898d" prot="public" static="no">
        <type>void(XMLCDECL *) typedef int(*</type>
        <definition>typedef void(XMLCDECL *) typedef int(* isStandaloneSAXFunc) (void *ctx)</definition>
        <argsstring>)(void *ctx)</argsstring>
        <name>isStandaloneSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>isStandaloneSAXFunc: : the user data (XML parser context)</para><para>Is this document tagged standalone?</para><para>Returns 1 if true </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="640" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="640" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1aa2da3f4f60619e33a10fd52b699f2d4e" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* hasInternalSubsetSAXFunc) (void *ctx)</definition>
        <argsstring>)(void *ctx)</argsstring>
        <name>hasInternalSubsetSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>hasInternalSubsetSAXFunc: : the user data (XML parser context)</para><para>Does this document has an internal subset.</para><para>Returns 1 if true </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="649" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="649" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1a8ac7164d8c139e135e3a950215b6ca87" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* hasExternalSubsetSAXFunc) (void *ctx)</definition>
        <argsstring>)(void *ctx)</argsstring>
        <name>hasExternalSubsetSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>hasExternalSubsetSAXFunc: : the user data (XML parser context)</para><para>Does this document has an external subset?</para><para>Returns 1 if true </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="659" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="659" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1a08a6538a16841116b2e98bbeaea8fe17" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* startElementNsSAX2Func) (void *ctx, const xmlChar *localname, const xmlChar *prefix, const xmlChar *URI, int nb_namespaces, const xmlChar **namespaces, int nb_attributes, int nb_defaulted, const xmlChar **attributes)</definition>
        <argsstring>)(void *ctx, const xmlChar *localname, const xmlChar *prefix, const xmlChar *URI, int nb_namespaces, const xmlChar **namespaces, int nb_attributes, int nb_defaulted, const xmlChar **attributes)</argsstring>
        <name>startElementNsSAX2Func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>startElementNsSAX2Func: : the user data (XML parser context) : the local name of the element : the element namespace prefix if available : the element namespace name if available : number of namespace definitions on that node : pointer to the array of prefix/URI pairs namespace definitions : the number of attributes on that node : the number of defaulted attributes. The defaulted ones are at the end of the array : pointer to the array of (localname/prefix/URI/value/end) attribute values.</para><para>SAX2 callback when an element start has been detected by the parser. It provides the namespace informations for the element, as well as the new namespace declarations on the element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="692" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="692" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1ae574d84a860f9183a7cc192c3cdd1f5f" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* endElementNsSAX2Func) (void *ctx, const xmlChar *localname, const xmlChar *prefix, const xmlChar *URI)</definition>
        <argsstring>)(void *ctx, const xmlChar *localname, const xmlChar *prefix, const xmlChar *URI)</argsstring>
        <name>endElementNsSAX2Func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>endElementNsSAX2Func: : the user data (XML parser context) : the local name of the element : the element namespace prefix if available : the element namespace name if available</para><para>SAX2 callback when an element end has been detected by the parser. It provides the namespace informations for the element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="713" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="713" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1a7127f39ff5d23f7a6620ceabaf24dacd" prot="public" static="no">
        <type>struct <ref refid="struct__xml_s_a_x_handler_v1" kindref="compound">_xmlSAXHandlerV1</ref></type>
        <definition>typedef struct _xmlSAXHandlerV1 xmlSAXHandlerV1</definition>
        <argsstring></argsstring>
        <name>xmlSAXHandlerV1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="713" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="758" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1a89ef914eed43b16605af4562092d0ea1" prot="public" static="no">
        <type><ref refid="struct__xml_s_a_x_handler_v1" kindref="compound">xmlSAXHandlerV1</ref> *</type>
        <definition>typedef xmlSAXHandlerV1* xmlSAXHandlerV1Ptr</definition>
        <argsstring></argsstring>
        <name>xmlSAXHandlerV1Ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="759" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="759" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1afee5486fac0f0ee512f4fca7741dcfeb" prot="public" static="no">
        <type><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref>(*</type>
        <definition>typedef xmlParserInputPtr(* xmlExternalEntityLoader) (const char *URL, const char *ID, xmlParserCtxtPtr context)</definition>
        <argsstring>)(const char *URL, const char *ID, xmlParserCtxtPtr context)</argsstring>
        <name>xmlExternalEntityLoader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>xmlExternalEntityLoader: : The System ID of the resource requested : The Public ID of the resource requested : the XML parser context</para><para>External entity loaders types.</para><para>Returns the entity input parser. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="802" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="802" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a5c5f4faf59376cfd725d80afc46642f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlInitParser</definition>
        <argsstring>(void)</argsstring>
        <name>xmlInitParser</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="823" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a3157f424aafcc78f5fb3f7b93e795268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlCleanupParser</definition>
        <argsstring>(void)</argsstring>
        <name>xmlCleanupParser</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="825" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a6547c9db2c5900dd09a1a0f861c2cb62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlParserInputRead</definition>
        <argsstring>(xmlParserInputPtr in, int len)</argsstring>
        <name>xmlParserInputRead</name>
        <param>
          <type><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref></type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="831" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a8fa89a204fa2913f60b5bf4f4180c1b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlParserInputGrow</definition>
        <argsstring>(xmlParserInputPtr in, int len)</argsstring>
        <name>xmlParserInputGrow</name>
        <param>
          <type><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref></type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="834" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1ab59184d1c80778f8063b88a4df2921de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlSubstituteEntitiesDefault</definition>
        <argsstring>(int val)</argsstring>
        <name>xmlSubstituteEntitiesDefault</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="850" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a0a550353dcf46163b57ecac07eff49d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlKeepBlanksDefault</definition>
        <argsstring>(int val)</argsstring>
        <name>xmlKeepBlanksDefault</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="852" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a4b8d95f868645054a9728f7ab317d8a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlStopParser</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlStopParser</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="854" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a8ec7d29f65a1727fe72b4726d58fe93c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlPedanticParserDefault</definition>
        <argsstring>(int val)</argsstring>
        <name>xmlPedanticParserDefault</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="856" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1aa7d41864fe5392c07f7d98486e0da0b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlLineNumbersDefault</definition>
        <argsstring>(int val)</argsstring>
        <name>xmlLineNumbersDefault</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="858" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1ac0e1e0b2bd5420461de3189a9d917870" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlParseDocument</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseDocument</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="877" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a27c4666d244d4850af35ecc6ec4bbc48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlParseExtParsedEnt</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseExtParsedEnt</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="879" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1adeb6424fd8ffe823ecd2b3065a0713ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN xmlParserErrors XMLCALL</type>
        <definition>XMLPUBFUN xmlParserErrors XMLCALL xmlParseInNodeContext</definition>
        <argsstring>(xmlNodePtr node, const char *data, int datalen, int options, xmlNodePtr *lst)</argsstring>
        <name>xmlParseInNodeContext</name>
        <param>
          <type><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>datalen</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref> *</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="944" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a2c2f69efa239844710d0d3be45c924c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlParseCtxtExternalEntity</definition>
        <argsstring>(xmlParserCtxtPtr ctx, const xmlChar *URL, const xmlChar *ID, xmlNodePtr *lst)</argsstring>
        <name>xmlParseCtxtExternalEntity</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>URL</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>ID</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref> *</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="968" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1affe1a841e0eb2c69e3d7d66bd108622f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlParserCtxtPtr XMLCALL xmlNewParserCtxt</definition>
        <argsstring>(void)</argsstring>
        <name>xmlNewParserCtxt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="977" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1abe19339e57f6c78a067b233be2fcdb12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlInitParserCtxt</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlInitParserCtxt</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="979" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1aef5f0eaae23bbe28ac0566f03842231a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlClearParserCtxt</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlClearParserCtxt</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="981" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1aa3bc4479f0c4a77daef53897abc3fc47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlFreeParserCtxt</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlFreeParserCtxt</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="983" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a4760a629b008f3b049487f5a15650a2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlParserCtxtPtr XMLCALL xmlCreateDocParserCtxt</definition>
        <argsstring>(const xmlChar *cur)</argsstring>
        <name>xmlCreateDocParserCtxt</name>
        <param>
          <type>const xmlChar *</type>
          <declname>cur</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="991" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a08fad4b061f2eddcb9e9a20a46480b0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlParserCtxtPtr XMLCALL xmlCreateIOParserCtxt</definition>
        <argsstring>(xmlSAXHandlerPtr sax, void *user_data, xmlInputReadCallback ioread, xmlInputCloseCallback ioclose, void *ioctx, xmlCharEncoding enc)</argsstring>
        <name>xmlCreateIOParserCtxt</name>
        <param>
          <type><ref refid="struct__xml_s_a_x_handler" kindref="compound">xmlSAXHandlerPtr</ref></type>
          <declname>sax</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <param>
          <type>xmlInputReadCallback</type>
          <declname>ioread</declname>
        </param>
        <param>
          <type>xmlInputCloseCallback</type>
          <declname>ioclose</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ioctx</declname>
        </param>
        <param>
          <type>xmlCharEncoding</type>
          <declname>enc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1032" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a157b05b87272e3c00f20a56c0fbe2422" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlParserInputPtr XMLCALL xmlNewIOInputStream</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, xmlParserInputBufferPtr input, xmlCharEncoding enc)</argsstring>
        <name>xmlNewIOInputStream</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_parser_input_buffer" kindref="compound">xmlParserInputBufferPtr</ref></type>
          <declname>input</declname>
        </param>
        <param>
          <type>xmlCharEncoding</type>
          <declname>enc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1040" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a611e8e1f370ff9a4beedd3b29250331b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN const <ref refid="struct__xml_parser_node_info" kindref="compound">xmlParserNodeInfo</ref> *XMLCALL</type>
        <definition>XMLPUBFUN const xmlParserNodeInfo* XMLCALL xmlParserFindNodeInfo</definition>
        <argsstring>(const xmlParserCtxtPtr ctxt, const xmlNodePtr node)</argsstring>
        <name>xmlParserFindNodeInfo</name>
        <param>
          <type>const <ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>const <ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1048" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1afc6966f7e073b14f976ae3496d99fe82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlInitNodeInfoSeq</definition>
        <argsstring>(xmlParserNodeInfoSeqPtr seq)</argsstring>
        <name>xmlInitNodeInfoSeq</name>
        <param>
          <type><ref refid="struct__xml_parser_node_info_seq" kindref="compound">xmlParserNodeInfoSeqPtr</ref></type>
          <declname>seq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1051" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a0f23a199755cda7dcd6e21ad10a97d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlClearNodeInfoSeq</definition>
        <argsstring>(xmlParserNodeInfoSeqPtr seq)</argsstring>
        <name>xmlClearNodeInfoSeq</name>
        <param>
          <type><ref refid="struct__xml_parser_node_info_seq" kindref="compound">xmlParserNodeInfoSeqPtr</ref></type>
          <declname>seq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1053" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1af2755b60fae819ec25023f463b6572d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN unsigned long XMLCALL</type>
        <definition>XMLPUBFUN unsigned long XMLCALL xmlParserFindNodeInfoIndex</definition>
        <argsstring>(const xmlParserNodeInfoSeqPtr seq, const xmlNodePtr node)</argsstring>
        <name>xmlParserFindNodeInfoIndex</name>
        <param>
          <type>const <ref refid="struct__xml_parser_node_info_seq" kindref="compound">xmlParserNodeInfoSeqPtr</ref></type>
          <declname>seq</declname>
        </param>
        <param>
          <type>const <ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1055" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1ab8d20a1e2b8a584da8900a8f1abbbdda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParserAddNodeInfo</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, const xmlParserNodeInfoPtr info)</argsstring>
        <name>xmlParserAddNodeInfo</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>const <ref refid="struct__xml_parser_node_info" kindref="compound">xmlParserNodeInfoPtr</ref></type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1058" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1aad5cf98fc6755f756f21564ef04430c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlSetExternalEntityLoader</definition>
        <argsstring>(xmlExternalEntityLoader f)</argsstring>
        <name>xmlSetExternalEntityLoader</name>
        <param>
          <type>xmlExternalEntityLoader</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1066" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a87e467a0ba70b807f939a831ee97fdf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN xmlExternalEntityLoader XMLCALL</type>
        <definition>XMLPUBFUN xmlExternalEntityLoader XMLCALL xmlGetExternalEntityLoader</definition>
        <argsstring>(void)</argsstring>
        <name>xmlGetExternalEntityLoader</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1068" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1af1aff2c5aef88f5cfa164242f87743b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlParserInputPtr XMLCALL xmlLoadExternalEntity</definition>
        <argsstring>(const char *URL, const char *ID, xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlLoadExternalEntity</name>
        <param>
          <type>const char *</type>
          <declname>URL</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ID</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1070" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1adcd40c8539f81bc3145eef86ee7383b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN long XMLCALL</type>
        <definition>XMLPUBFUN long XMLCALL xmlByteConsumed</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlByteConsumed</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1078" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a589e5ad70be2bcf4d9266a94605023a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlCtxtReset</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlCtxtReset</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1ab21f4608f64b33e518db17c427f774e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlCtxtResetPush</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, const char *chunk, int size, const char *filename, const char *encoding)</argsstring>
        <name>xmlCtxtResetPush</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>chunk</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>encoding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a8fd5c9c1eaca00d367234fe5632ea327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlCtxtUseOptions</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, int options)</argsstring>
        <name>xmlCtxtUseOptions</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1adad047f801ca2dba8447366acb9a12b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlDocPtr XMLCALL xmlReadDoc</definition>
        <argsstring>(const xmlChar *cur, const char *URL, const char *encoding, int options)</argsstring>
        <name>xmlReadDoc</name>
        <param>
          <type>const xmlChar *</type>
          <declname>cur</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>URL</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>encoding</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a2a48b63b903395efd55dafcff18619b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlDocPtr XMLCALL xmlReadFile</definition>
        <argsstring>(const char *URL, const char *encoding, int options)</argsstring>
        <name>xmlReadFile</name>
        <param>
          <type>const char *</type>
          <declname>URL</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>encoding</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a04a644845caed83a518491ec8ee73113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlDocPtr XMLCALL xmlReadMemory</definition>
        <argsstring>(const char *buffer, int size, const char *URL, const char *encoding, int options)</argsstring>
        <name>xmlReadMemory</name>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>URL</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>encoding</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a7b4b92e827e4b1b445cb159663a8609a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlDocPtr XMLCALL xmlReadFd</definition>
        <argsstring>(int fd, const char *URL, const char *encoding, int options)</argsstring>
        <name>xmlReadFd</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>URL</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>encoding</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a992fb825ce71fadc1ad5b0c68e2331a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlDocPtr XMLCALL xmlReadIO</definition>
        <argsstring>(xmlInputReadCallback ioread, xmlInputCloseCallback ioclose, void *ioctx, const char *URL, const char *encoding, int options)</argsstring>
        <name>xmlReadIO</name>
        <param>
          <type>xmlInputReadCallback</type>
          <declname>ioread</declname>
        </param>
        <param>
          <type>xmlInputCloseCallback</type>
          <declname>ioclose</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ioctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>URL</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>encoding</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1ace0442ff4ed18d9de83b635e3aa6fc2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlDocPtr XMLCALL xmlCtxtReadDoc</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, const xmlChar *cur, const char *URL, const char *encoding, int options)</argsstring>
        <name>xmlCtxtReadDoc</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>cur</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>URL</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>encoding</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1ad9b36d7a00de0d3f3306a8a8f08c9e7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlDocPtr XMLCALL xmlCtxtReadFile</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, const char *filename, const char *encoding, int options)</argsstring>
        <name>xmlCtxtReadFile</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>encoding</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a77595bc2042c0da02d049613ef716473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlDocPtr XMLCALL xmlCtxtReadMemory</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, const char *buffer, int size, const char *URL, const char *encoding, int options)</argsstring>
        <name>xmlCtxtReadMemory</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>URL</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>encoding</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a1a16d3cd568fa72b85c9746a41ef2010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlDocPtr XMLCALL xmlCtxtReadFd</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, int fd, const char *URL, const char *encoding, int options)</argsstring>
        <name>xmlCtxtReadFd</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>URL</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>encoding</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a0d8e34e218f71d1ca91749d002ec5971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlDocPtr XMLCALL xmlCtxtReadIO</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, xmlInputReadCallback ioread, xmlInputCloseCallback ioclose, void *ioctx, const char *URL, const char *encoding, int options)</argsstring>
        <name>xmlCtxtReadIO</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>xmlInputReadCallback</type>
          <declname>ioread</declname>
        </param>
        <param>
          <type>xmlInputCloseCallback</type>
          <declname>ioclose</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ioctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>URL</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>encoding</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a14aa7ceaf55001e938d661f945f04c82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlHasFeature</definition>
        <argsstring>(xmlFeature feature)</argsstring>
        <name>xmlHasFeature</name>
        <param>
          <type>xmlFeature</type>
          <declname>feature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="1236" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>:  the root element name</header>
      <description><para>externalSubsetSAXFunc: : the user data (XML parser context)</para><para>: the external ID : the SYSTEM ID (e.g. filename or URL)</para><para>Callback on external subset declaration. </para></description>
      <memberdef kind="typedef" id="parser_8h_1a27e972202d6838219d8f93aaceef6e41" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* internalSubsetSAXFunc) (void *ctx, const xmlChar *name, const xmlChar *ExternalID, const xmlChar *SystemID)</definition>
        <argsstring>)(void *ctx, const xmlChar *name, const xmlChar *ExternalID, const xmlChar *SystemID)</argsstring>
        <name>internalSubsetSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="362" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1afee15359e0b45d08765114ba6575e89e" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* externalSubsetSAXFunc) (void *ctx, const xmlChar *name, const xmlChar *ExternalID, const xmlChar *SystemID)</definition>
        <argsstring>)(void *ctx, const xmlChar *name, const xmlChar *ExternalID, const xmlChar *SystemID)</argsstring>
        <name>externalSubsetSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="375" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>: The entity name</header>
      <description><para>getParameterEntitySAXFunc: : the user data (XML parser context)</para><para>Get a parameter entity by name.</para><para>Returns the xmlEntityPtr if found. </para></description>
      <memberdef kind="typedef" id="parser_8h_1a6bbcae0a48eab81c42313451a3bfc3a9" prot="public" static="no">
        <type><ref refid="struct__xml_entity" kindref="compound">xmlEntityPtr</ref>(*</type>
        <definition>typedef xmlEntityPtr(* getEntitySAXFunc) (void *ctx, const xmlChar *name)</definition>
        <argsstring>)(void *ctx, const xmlChar *name)</argsstring>
        <name>getEntitySAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="388" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1a676ba2f69a5f305730cf7af16c9edbf8" prot="public" static="no">
        <type><ref refid="struct__xml_entity" kindref="compound">xmlEntityPtr</ref>(*</type>
        <definition>typedef xmlEntityPtr(* getParameterEntitySAXFunc) (void *ctx, const xmlChar *name)</definition>
        <argsstring>)(void *ctx, const xmlChar *name)</argsstring>
        <name>getParameterEntitySAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="399" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>: The name of the notation</header>
      <description><para>notationDeclSAXFunc: : the user data (XML parser context)</para><para>: The public ID of the entity : The system ID of the entity</para><para>What to do when a notation declaration has been parsed. </para></description>
      <memberdef kind="typedef" id="parser_8h_1ae868d0df93c6a017772407d739099b5a" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* notationDeclSAXFunc) (void *ctx, const xmlChar *name, const xmlChar *publicId, const xmlChar *systemId)</definition>
        <argsstring>)(void *ctx, const xmlChar *name, const xmlChar *publicId, const xmlChar *systemId)</argsstring>
        <name>notationDeclSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="427" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1a9b0837804e7e9b55ecffa4708b090273" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* attributeDeclSAXFunc) (void *ctx, const xmlChar *elem, const xmlChar *fullname, int type, int def, const xmlChar *defaultValue, xmlEnumerationPtr tree)</definition>
        <argsstring>)(void *ctx, const xmlChar *elem, const xmlChar *fullname, int type, int def, const xmlChar *defaultValue, xmlEnumerationPtr tree)</argsstring>
        <name>attributeDeclSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="443" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>:  The element name</header>
      <description><para>endElementSAXFunc: : the user data (XML parser context)</para><para>Called when the end of an element has been detected. </para></description>
      <memberdef kind="typedef" id="parser_8h_1a6690938bd795cca96bca048c2d398673" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* elementDeclSAXFunc) (void *ctx, const xmlChar *name, int type, xmlElementContentPtr content)</definition>
        <argsstring>)(void *ctx, const xmlChar *name, int type, xmlElementContentPtr content)</argsstring>
        <name>elementDeclSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="459" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1aa95bf34c49f3de2488ef85a4c29e5b8f" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* endElementSAXFunc) (void *ctx, const xmlChar *name)</definition>
        <argsstring>)(void *ctx, const xmlChar *name)</argsstring>
        <name>endElementSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="520" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="520" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>: The name of the entity</header>
      <description><para>unparsedEntityDeclSAXFunc: : the user data (XML parser context)</para><para>: The public ID of the entity : The system ID of the entity : the name of the notation</para><para>What to do when an unparsed entity declaration is parsed. </para></description>
      <memberdef kind="typedef" id="parser_8h_1a6354bab61867807bfd9604458f4cb895" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* unparsedEntityDeclSAXFunc) (void *ctx, const xmlChar *name, const xmlChar *publicId, const xmlChar *systemId, const xmlChar *notationName)</definition>
        <argsstring>)(void *ctx, const xmlChar *name, const xmlChar *publicId, const xmlChar *systemId, const xmlChar *notationName)</argsstring>
        <name>unparsedEntityDeclSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="473" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1a919877d2d1b827e473195455ebf4bb9e" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* setDocumentLocatorSAXFunc) (void *ctx, xmlSAXLocatorPtr loc)</definition>
        <argsstring>)(void *ctx, xmlSAXLocatorPtr loc)</argsstring>
        <name>setDocumentLocatorSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setDocumentLocatorSAXFunc: : the user data (XML parser context) : A SAX Locator</para><para>Receive the document locator at startup, actually xmlDefaultSAXLocator. Everything is available on the context, so this is useless in our case. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="486" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1a4268bb28d5cde065e253072f9fb043f7" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* startDocumentSAXFunc) (void *ctx)</definition>
        <argsstring>)(void *ctx)</argsstring>
        <name>startDocumentSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>startDocumentSAXFunc: : the user data (XML parser context)</para><para>Called when the document start being processed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="494" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1ac608920fca862211a347b7e566da5f07" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* endDocumentSAXFunc) (void *ctx)</definition>
        <argsstring>)(void *ctx)</argsstring>
        <name>endDocumentSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>endDocumentSAXFunc: : the user data (XML parser context)</para><para>Called when the document end has been detected. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="501" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="501" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>:  The element name, including namespace prefix</header>
      <description><para>startElementSAXFunc: : the user data (XML parser context)</para><para>: An array of name/value attributes pairs, NULL terminated</para><para>Called when an opening tag has been processed. </para></description>
      <memberdef kind="typedef" id="parser_8h_1acd161dbf36daa156e929c43f0da82a57" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* startElementSAXFunc) (void *ctx, const xmlChar *name, const xmlChar **atts)</definition>
        <argsstring>)(void *ctx, const xmlChar *name, const xmlChar **atts)</argsstring>
        <name>startElementSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="510" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="510" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>:  The attribute name, including namespace prefix</header>
      <description><para>attributeSAXFunc: : the user data (XML parser context)</para><para>: The attribute value</para><para>Handle an attribute that has been read by the parser. The default handling is to convert the attribute into an DOM subtree and past it in a new xmlAttr element added to the element. </para></description>
      <memberdef kind="typedef" id="parser_8h_1a58ea5c070c26c3bb385152ef8f731e77" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* attributeSAXFunc) (void *ctx, const xmlChar *name, const xmlChar *value)</definition>
        <argsstring>)(void *ctx, const xmlChar *name, const xmlChar *value)</argsstring>
        <name>attributeSAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="533" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="533" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="parser_8h_1a7a642c7b5e0049affd372175d2754993" prot="public" static="no">
        <name>XML_DEFAULT_VERSION</name>
        <initializer>&quot;1.0&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XML_DEFAULT_VERSION:</para><para>The default version of XML used: 1.0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="33" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_8h_1a50837dd90f03206e432ed8f685aa226c" prot="public" static="no">
        <name>XML_DETECT_IDS</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XML_DETECT_IDS:</para><para>Bit in the loadsubset context field to tell to do ID/REFs lookups. Use it to initialize xmlLoadExtDtdDefaultValue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="139" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_8h_1a57cdf66b36ae538e81d4163b992b2e29" prot="public" static="no">
        <name>XML_COMPLETE_ATTRS</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XML_COMPLETE_ATTRS:</para><para>Bit in the loadsubset context field to tell to do complete the elements attributes lists with the ones defaulted from the DTDs. Use it to initialize xmlLoadExtDtdDefaultValue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="148" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_8h_1a1bb90305ea43958568e3983ff5fe228c" prot="public" static="no">
        <name>XML_SKIP_IDS</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XML_SKIP_IDS:</para><para>Bit in the loadsubset context field to tell to not do ID/REFs registration. Used to initialize xmlLoadExtDtdDefaultValue in some special cases. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="156" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3" prot="public" static="no">
        <name>xmlParserInputState</name>
        <enumvalue id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3a584db31fc54d837120912dc2271a3f6a" prot="public">
          <name>XML_PARSER_EOF</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3acb1c3b82aa928337945636b3dea1693f" prot="public">
          <name>XML_PARSER_START</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3af8190c17322abceefc5ba8a3e3b6aec6" prot="public">
          <name>XML_PARSER_MISC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3a373db3d5751841cc3948fb159d3e8106" prot="public">
          <name>XML_PARSER_PI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3a53310f13fdbdbe119b8db7c9d61d16f6" prot="public">
          <name>XML_PARSER_DTD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3a12aea7130ff4e74f92abaddf08b847a7" prot="public">
          <name>XML_PARSER_PROLOG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3adad76cea01dd06be39a983dc5ca66a74" prot="public">
          <name>XML_PARSER_COMMENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3a629501460ef976955eb2554e5581948c" prot="public">
          <name>XML_PARSER_START_TAG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3a631411421586b7921fba0e8ecb02521e" prot="public">
          <name>XML_PARSER_CONTENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3ade8b876943b9de5283620914628fbbeb" prot="public">
          <name>XML_PARSER_CDATA_SECTION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3a023580f7c5a4109140e839afe9051c1a" prot="public">
          <name>XML_PARSER_END_TAG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3af990bdd4b20140b5c366e3813c18b0db" prot="public">
          <name>XML_PARSER_ENTITY_DECL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3a80c42db7b70487e012f4fd39a3cb9a6f" prot="public">
          <name>XML_PARSER_ENTITY_VALUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3a51df9a14b5f23e91d07eff72b48cbd04" prot="public">
          <name>XML_PARSER_ATTRIBUTE_VALUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3a4a1b0e06df4e0ad90a4c7f88e739de6a" prot="public">
          <name>XML_PARSER_SYSTEM_LITERAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3aaf16688fdd7e17ada30fd3987ed1033d" prot="public">
          <name>XML_PARSER_EPILOG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3a22f748c2dbfb6e7c835e99aeb155374c" prot="public">
          <name>XML_PARSER_IGNORE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a07708785b9cda3789de8d2f011ad1df3a24baee70259d9ac12ec0dd51ff57b954" prot="public">
          <name>XML_PARSER_PUBLIC_LITERAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>xmlParserInputState:</para><para>The parser is now working also as a state based parser. The recursive one use the state info for entities processing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="112" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="112" bodyend="131"/>
      </memberdef>
      <memberdef kind="enum" id="parser_8h_1af0aafd8a0ecdc41a8754ae57d2fc82c0" prot="public" static="no">
        <name>xmlParserMode</name>
        <enumvalue id="parser_8h_1af0aafd8a0ecdc41a8754ae57d2fc82c0afebcd87d53c65c109384d376490496b0" prot="public">
          <name>XML_PARSE_UNKNOWN</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1af0aafd8a0ecdc41a8754ae57d2fc82c0ad89541e957ffbd4a89975a99737153d3" prot="public">
          <name>XML_PARSE_DOM</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1af0aafd8a0ecdc41a8754ae57d2fc82c0aa116cbd0dadadbe01535ece0723b1a48" prot="public">
          <name>XML_PARSE_SAX</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1af0aafd8a0ecdc41a8754ae57d2fc82c0adba4efdd8521817e1d20b73d56050af1" prot="public">
          <name>XML_PARSE_PUSH_DOM</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1af0aafd8a0ecdc41a8754ae57d2fc82c0a5373137f869b93e56d7182c31cc38bc2" prot="public">
          <name>XML_PARSE_PUSH_SAX</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1af0aafd8a0ecdc41a8754ae57d2fc82c0a3909c7f41262eb248d6cc92fedf24751" prot="public">
          <name>XML_PARSE_READER</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>xmlParserMode:</para><para>A parser can operate in various modes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="163" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="163" bodyend="170"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="parser_8h_1a98c97112c9e0eecd64bce4c41e8e8b7a" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(*  xmlParserInputDeallocate) (xmlChar *str)</definition>
        <argsstring>)(xmlChar *str)</argsstring>
        <name>xmlParserInputDeallocate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>xmlParserInput:</para><para>An xmlParserInput is an input flow for the XML processor. Each entity parsed is associated an xmlParserInput (except the few predefined ones). This is the case both for internal entities<itemizedlist>
<listitem><para>in which case the flow is already completely in memory - or external entities - in which case we use the buf structure for progressive reading and I18N conversions to the internal UTF-8 format. xmlParserInputDeallocate: : the string to deallocate</para></listitem></itemizedlist>
</para><para>Callback for freeing some parser input allocations. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="52" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1a62f193864581f4f9d5c798d1f46cdb95" prot="public" static="no">
        <type>struct <ref refid="struct__xml_parser_node_info" kindref="compound">_xmlParserNodeInfo</ref></type>
        <definition>typedef struct _xmlParserNodeInfo xmlParserNodeInfo</definition>
        <argsstring></argsstring>
        <name>xmlParserNodeInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>xmlParserNodeInfo:</para><para>The parser can be asked to collect Node informations, i.e. at what place in the file they were detected. NOTE: This is off by default and not very well tested. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="52" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1ab61f388936f0533432ceba48e2629cae" prot="public" static="no">
        <type><ref refid="struct__xml_parser_node_info" kindref="compound">xmlParserNodeInfo</ref> *</type>
        <definition>typedef xmlParserNodeInfo* xmlParserNodeInfoPtr</definition>
        <argsstring></argsstring>
        <name>xmlParserNodeInfoPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="87" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1acd0475fc39dac89bce642c5f34bb923d" prot="public" static="no">
        <type>struct <ref refid="struct__xml_parser_node_info_seq" kindref="compound">_xmlParserNodeInfoSeq</ref></type>
        <definition>typedef struct _xmlParserNodeInfoSeq xmlParserNodeInfoSeq</definition>
        <argsstring></argsstring>
        <name>xmlParserNodeInfoSeq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="87" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1ae1c21b7750a5b8a41c74b66e2c0d231b" prot="public" static="no">
        <type><ref refid="struct__xml_parser_node_info_seq" kindref="compound">xmlParserNodeInfoSeq</ref> *</type>
        <definition>typedef xmlParserNodeInfoSeq* xmlParserNodeInfoSeqPtr</definition>
        <argsstring></argsstring>
        <name>xmlParserNodeInfoSeqPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="99" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="parser_8h_1a6d407c9500518de8de882a5a75900af5" prot="public" static="no">
        <type><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref>(*</type>
        <definition>typedef xmlParserInputPtr(* resolveEntitySAXFunc) (void *ctx, const xmlChar *publicId, const xmlChar *systemId)</definition>
        <argsstring>)(void *ctx, const xmlChar *publicId, const xmlChar *systemId)</argsstring>
        <name>resolveEntitySAXFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>xmlSAXHandler:</para><para>A SAX handler is bunch of callbacks called by the parser when processing of the input generate data or structure informations. resolveEntitySAXFunc: : the user data (XML parser context) : The public ID of the entity : The system ID of the entity</para><para>Callback: The entity loader, to control the loading of external entities, the application can either:<itemizedlist>
<listitem><para>override this resolveEntity() callback in the SAX block</para></listitem><listitem><para>or better use the xmlSetExternalEntityLoader() function to set up it&apos;s own entity resolution routine</para></listitem></itemizedlist>
</para><para>Returns the xmlParserInputPtr if inlined or NULL for DOM behaviour. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" line="350" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Summary:<sp/>the<sp/>core<sp/>parser<sp/>module</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Interfaces,<sp/>constants<sp/>and<sp/>types<sp/>related<sp/>to<sp/>the<sp/>XML<sp/>parser</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copy:<sp/>See<sp/>Copyright<sp/>for<sp/>the<sp/>status<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Daniel<sp/>Veillard</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__XML_PARSER_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__XML_PARSER_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/xmlversion.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/tree.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/dict.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/hash.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/valid.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/entities.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/xmlerror.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/xmlstring.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor">#define<sp/>XML_DEFAULT_VERSION<sp/>&quot;1.0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/>xmlParserInputDeallocate)(xmlChar<sp/>*str);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="struct__xml_parser_input" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__xml_parser_input" kindref="compound">_xmlParserInput</ref><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__xml_parser_input_buffer" kindref="compound">xmlParserInputBufferPtr</ref><sp/>buf;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UTF-8<sp/>encoded<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>file<sp/>analyzed,<sp/>if<sp/>any<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*directory;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>directory/base<sp/>of<sp/>the<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*base;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Base<sp/>of<sp/>the<sp/>array<sp/>to<sp/>parse<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*cur;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>char<sp/>being<sp/>parsed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*end;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>the<sp/>array<sp/>to<sp/>parse<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>length<sp/>if<sp/>known<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>NOTE:<sp/>consumed<sp/>is<sp/>only<sp/>tested<sp/>for<sp/>equality<sp/>in<sp/>the<sp/>parser<sp/>code,</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>so<sp/>even<sp/>if<sp/>there<sp/>is<sp/>an<sp/>overflow<sp/>this<sp/>should<sp/>not<sp/>give<sp/>troubles</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>parsing<sp/>very<sp/>large<sp/>instances.</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>consumed;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>How<sp/>many<sp/>xmlChars<sp/>already<sp/>consumed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlParserInputDeallocate<sp/>free;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>to<sp/>deallocate<sp/>the<sp/>base<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*encoding;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>encoding<sp/>string<sp/>for<sp/>entity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*version;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>version<sp/>string<sp/>for<sp/>entity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>standalone;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Was<sp/>that<sp/>entity<sp/>marked<sp/>standalone<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>an<sp/>unique<sp/>identifier<sp/>for<sp/>the<sp/>entity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__xml_parser_node_info" kindref="compound">_xmlParserNodeInfo</ref><sp/>xmlParserNodeInfo;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>xmlParserNodeInfo<sp/>*<ref refid="struct__xml_parser_node_info" kindref="compound">xmlParserNodeInfoPtr</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="struct__xml_parser_node_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__xml_parser_node_info" kindref="compound">_xmlParserNodeInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__xml_node" kindref="compound">_xmlNode</ref>*<sp/><ref refid="struct__node" kindref="compound">node</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Position<sp/>&amp;<sp/>line<sp/>#<sp/>that<sp/>text<sp/>that<sp/>created<sp/>the<sp/>node<sp/>begins<sp/>&amp;<sp/>ends<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>begin_pos;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>begin_line;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>end_pos;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>end_line;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__xml_parser_node_info_seq" kindref="compound">_xmlParserNodeInfoSeq</ref><sp/>xmlParserNodeInfoSeq;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>xmlParserNodeInfoSeq<sp/>*<ref refid="struct__xml_parser_node_info_seq" kindref="compound">xmlParserNodeInfoSeqPtr</ref>;</highlight></codeline>
<codeline lineno="100" refid="struct__xml_parser_node_info_seq" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__xml_parser_node_info_seq" kindref="compound">_xmlParserNodeInfoSeq</ref><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>maximum;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>xmlParserNodeInfo*<sp/>buffer;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSER_EOF<sp/>=<sp/>-1,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nothing<sp/>is<sp/>to<sp/>be<sp/>parsed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSER_START<sp/>=<sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nothing<sp/>has<sp/>been<sp/>parsed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSER_MISC,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Misc*<sp/>before<sp/>int<sp/>subset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSER_PI,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Within<sp/>a<sp/>processing<sp/>instruction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSER_DTD,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>within<sp/>some<sp/>DTD<sp/>content<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSER_PROLOG,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Misc*<sp/>after<sp/>internal<sp/>subset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSER_COMMENT,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>within<sp/>a<sp/>comment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSER_START_TAG,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>within<sp/>a<sp/>start<sp/>tag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSER_CONTENT,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>within<sp/>the<sp/>content<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSER_CDATA_SECTION,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>within<sp/>a<sp/>CDATA<sp/>section<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSER_END_TAG,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>within<sp/>a<sp/>closing<sp/>tag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSER_ENTITY_DECL,<sp/></highlight><highlight class="comment">/*<sp/>within<sp/>an<sp/>entity<sp/>declaration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSER_ENTITY_VALUE,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>within<sp/>an<sp/>entity<sp/>value<sp/>in<sp/>a<sp/>decl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSER_ATTRIBUTE_VALUE,<sp/></highlight><highlight class="comment">/*<sp/>within<sp/>an<sp/>attribute<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSER_SYSTEM_LITERAL,<sp/><sp/></highlight><highlight class="comment">/*<sp/>within<sp/>a<sp/>SYSTEM<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSER_EPILOG,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>Misc*<sp/>after<sp/>the<sp/>last<sp/>end<sp/>tag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSER_IGNORE,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>within<sp/>an<sp/>IGNORED<sp/>section<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSER_PUBLIC_LITERAL<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>within<sp/>a<sp/>PUBLIC<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">}<sp/>xmlParserInputState;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor">#define<sp/>XML_DETECT_IDS<sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor">#define<sp/>XML_COMPLETE_ATTRS<sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor">#define<sp/>XML_SKIP_IDS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_UNKNOWN<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_DOM<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_SAX<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_PUSH_DOM<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_PUSH_SAX<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_READER<sp/>=<sp/>5</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}<sp/>xmlParserMode;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="struct__xml_parser_ctxt" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__xml_parser_ctxt" kindref="compound">_xmlParserCtxt</ref><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__xml_s_a_x_handler" kindref="compound">_xmlSAXHandler</ref><sp/>*sax;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>SAX<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*userData;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>SAX<sp/>interface<sp/>only,<sp/>used<sp/>by<sp/>DOM<sp/>build<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>myDoc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>document<sp/>being<sp/>built<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wellFormed;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>is<sp/>the<sp/>document<sp/>well<sp/>formed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replaceEntities;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shall<sp/>we<sp/>replace<sp/>entities<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/><sp/><sp/><sp/>*version;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>XML<sp/>version<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/><sp/><sp/>*encoding;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>declared<sp/>encoding,<sp/>if<sp/>any<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>standalone;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>standalone<sp/>document<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>html;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>an<sp/>HTML(1)/Docbook(2)<sp/>document</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>3<sp/>is<sp/>HTML<sp/>after<sp/>&lt;head&gt;</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>10<sp/>is<sp/>HTML<sp/>after<sp/>&lt;body&gt;</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>stream<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/><sp/>input;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>input<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputNr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>current<sp/>input<sp/>streams<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputMax;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Max<sp/>number<sp/>of<sp/>input<sp/>streams<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/>*inputTab;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stack<sp/>of<sp/>inputs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Node<sp/>analysis<sp/>stack<sp/>only<sp/>used<sp/>for<sp/>DOM<sp/>building<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__node" kindref="compound">node</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>parsed<sp/>Node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeNr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Depth<sp/>of<sp/>the<sp/>parsing<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeMax;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Max<sp/>depth<sp/>of<sp/>the<sp/>parsing<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*nodeTab;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>array<sp/>of<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>record_info;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Whether<sp/>node<sp/>info<sp/>should<sp/>be<sp/>kept<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlParserNodeInfoSeq<sp/>node_seq;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>info<sp/>about<sp/>each<sp/>node<sp/>parsed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errNo;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>error<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hasExternalSubset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reference<sp/>and<sp/>external<sp/>subset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasPErefs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>internal<sp/>subset<sp/>has<sp/>PE<sp/>refs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>external;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>are<sp/>we<sp/>parsing<sp/>an<sp/>external<sp/>entity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>is<sp/>the<sp/>document<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validate;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shall<sp/>we<sp/>try<sp/>to<sp/>validate<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__xml_valid_ctxt" kindref="compound">xmlValidCtxt</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vctxt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>validity<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlParserInputState<sp/>instate;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>type<sp/>of<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>char<sp/>look-ahead<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*directory;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>data<sp/>directory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Node<sp/>name<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/><sp/><sp/><sp/><sp/>*name;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>parsed<sp/>Node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nameNr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Depth<sp/>of<sp/>the<sp/>parsing<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nameMax;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Max<sp/>depth<sp/>of<sp/>the<sp/>parsing<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*<sp/><sp/><sp/>*nameTab;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>array<sp/>of<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbChars;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>xmlChar<sp/>processed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkIndex;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>used<sp/>by<sp/>progressive<sp/>parsing<sp/>lookup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keepBlanks;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ugly<sp/>but<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disableSAX;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SAX<sp/>callbacks<sp/>are<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inSubset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parsing<sp/>is<sp/>in<sp/>int<sp/>1/ext<sp/>2<sp/>subset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*<sp/><sp/><sp/><sp/>intSubName;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>name<sp/>of<sp/>subset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlChar<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extSubURI;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>URI<sp/>of<sp/>external<sp/>subset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlChar<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extSubSystem;<sp/><sp/></highlight><highlight class="comment">/*<sp/>SYSTEM<sp/>ID<sp/>of<sp/>external<sp/>subset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xml:space<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>space;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Should<sp/>the<sp/>parser<sp/>preserve<sp/>spaces<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceNr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Depth<sp/>of<sp/>the<sp/>parsing<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceMax;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Max<sp/>depth<sp/>of<sp/>the<sp/>parsing<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceTab;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>array<sp/>of<sp/>space<sp/>infos<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depth;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>to<sp/>prevent<sp/>entity<sp/>substitution<sp/>loops<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/><sp/>entity;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>used<sp/>to<sp/>check<sp/>entities<sp/>boundaries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>encoding<sp/>of<sp/>the<sp/>in-memory<sp/>content</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actually<sp/>an<sp/>xmlCharEncoding<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodelen;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Those<sp/>two<sp/>fields<sp/>are<sp/>there<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodemem;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Speed<sp/>up<sp/>large<sp/>node<sp/>parsing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pedantic;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>signal<sp/>pedantic<sp/>warnings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*_private;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>user<sp/>data,<sp/>libxml<sp/>won&apos;t<sp/>touch<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadsubset;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>should<sp/>the<sp/>external<sp/>subset<sp/>be<sp/>loaded<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linenumbers;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>line<sp/>number<sp/>in<sp/>element<sp/>content<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*catalogs;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>document&apos;s<sp/>own<sp/>catalog<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recovery;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>run<sp/>in<sp/>recovery<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>progressive;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>is<sp/>this<sp/>a<sp/>progressive<sp/>parsing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlDictPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>dictionary<sp/>for<sp/>the<sp/>parser<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*<sp/><sp/><sp/>*atts;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>array<sp/>for<sp/>the<sp/>attributes<sp/>callbacks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxatts;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>size<sp/>of<sp/>the<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>docdict;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>strings<sp/>from<sp/>dict<sp/>to<sp/>build<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>pre-interned<sp/>strings</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*str_xml;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*str_xmlns;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*str_xml_ns;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Everything<sp/>below<sp/>is<sp/>used<sp/>only<sp/>by<sp/>the<sp/>new<sp/>SAX<sp/>mode</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sax2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>operating<sp/>in<sp/>the<sp/>new<sp/>SAX<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsNr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>number<sp/>of<sp/>inherited<sp/>namespaces<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsMax;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>size<sp/>of<sp/>the<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*<sp/><sp/><sp/>*nsTab;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>array<sp/>of<sp/>prefix/namespace<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*attallocs;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>which<sp/>attribute<sp/>were<sp/>allocated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pushTab;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>array<sp/>of<sp/>data<sp/>for<sp/>push<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlHashTablePtr<sp/><sp/><sp/><sp/>attsDefault;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>defaulted<sp/>attributes<sp/>if<sp/>any<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlHashTablePtr<sp/><sp/><sp/><sp/>attsSpecial;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>non-CDATA<sp/>attributes<sp/>if<sp/>any<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsWellFormed;<sp/><sp/></highlight><highlight class="comment">/*<sp/>is<sp/>the<sp/>document<sp/>XML<sp/>Nanespace<sp/>okay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Extra<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Those<sp/>fields<sp/>are<sp/>needed<sp/>only<sp/>for<sp/>treaming<sp/>parsing<sp/>so<sp/>far</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictNames;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>dictionary<sp/>names<sp/>for<sp/>the<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeElemsNr;<sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>freed<sp/>element<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeElems;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>List<sp/>of<sp/>freed<sp/>element<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeAttrsNr;<sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>freed<sp/>attributes<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__xml_attr" kindref="compound">xmlAttrPtr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeAttrs;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>List<sp/>of<sp/>freed<sp/>attributes<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>complete<sp/>error<sp/>informations<sp/>for<sp/>the<sp/>last<sp/>error.</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__xml_error" kindref="compound">xmlError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastError;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlParserMode<sp/><sp/><sp/><sp/><sp/>parseMode;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>parser<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>nbentities;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>entities<sp/>references<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/>sizeentities;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>size<sp/>of<sp/>parsed<sp/>entities<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>use<sp/>by<sp/>HTML<sp/>non-recursive<sp/>parser<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlParserNodeInfo<sp/>*nodeInfo;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>NodeInfo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeInfoNr;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Depth<sp/>of<sp/>the<sp/>parsing<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeInfoMax;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Max<sp/>depth<sp/>of<sp/>the<sp/>parsing<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlParserNodeInfo<sp/>*nodeInfoTab;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>array<sp/>of<sp/>nodeInfos<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_id;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>need<sp/>to<sp/>label<sp/>inputs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sizeentcopy;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>volume<sp/>of<sp/>entity<sp/>copy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal">};</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="struct__xml_s_a_x_locator" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__xml_s_a_x_locator" kindref="compound">_xmlSAXLocator</ref><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*(*getPublicId)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*(*getSystemId)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*getLineNumber)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*getColumnNumber)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">};</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/>(*resolveEntitySAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*publicId,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*systemId);</highlight></codeline>
<codeline lineno="362"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*internalSubsetSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*ExternalID,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*SystemID);</highlight></codeline>
<codeline lineno="375"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*externalSubsetSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*ExternalID,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*SystemID);</highlight></codeline>
<codeline lineno="388"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct__xml_entity" kindref="compound">xmlEntityPtr</ref><sp/>(*getEntitySAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name);</highlight></codeline>
<codeline lineno="399"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct__xml_entity" kindref="compound">xmlEntityPtr</ref><sp/>(*getParameterEntitySAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name);</highlight></codeline>
<codeline lineno="412"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*entityDeclSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*publicId,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*systemId,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar<sp/>*content);</highlight></codeline>
<codeline lineno="427"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*notationDeclSAXFunc)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*publicId,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*systemId);</highlight></codeline>
<codeline lineno="443"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*attributeDeclSAXFunc)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*elem,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*fullname,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>def,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*defaultValue,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_enumeration" kindref="compound">xmlEnumerationPtr</ref><sp/>tree);</highlight></codeline>
<codeline lineno="459"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*elementDeclSAXFunc)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref><sp/>content);</highlight></codeline>
<codeline lineno="473"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*unparsedEntityDeclSAXFunc)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*publicId,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*systemId,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*notationName);</highlight></codeline>
<codeline lineno="486"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*setDocumentLocatorSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_s_a_x_locator" kindref="compound">xmlSAXLocatorPtr</ref><sp/>loc);</highlight></codeline>
<codeline lineno="494"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*startDocumentSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx);</highlight></codeline>
<codeline lineno="501"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*endDocumentSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx);</highlight></codeline>
<codeline lineno="510"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*startElementSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>**atts);</highlight></codeline>
<codeline lineno="520"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*endElementSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name);</highlight></codeline>
<codeline lineno="533"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*attributeSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*value);</highlight></codeline>
<codeline lineno="543"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*referenceSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name);</highlight></codeline>
<codeline lineno="553"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*charactersSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*ch,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="565"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*ignorableWhitespaceSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*ch,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="576"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*processingInstructionSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*target,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*data);</highlight></codeline>
<codeline lineno="586"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*commentSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*value);</highlight></codeline>
<codeline lineno="596"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*cdataBlockSAXFunc)<sp/>(</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*value,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="608"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(XMLCDECL<sp/>*warningSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,<sp/>...)<sp/>LIBXML_ATTR_FORMAT(2,3);</highlight></codeline>
<codeline lineno="618"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(XMLCDECL<sp/>*errorSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,<sp/>...)<sp/>LIBXML_ATTR_FORMAT(2,3);</highlight></codeline>
<codeline lineno="630"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(XMLCDECL<sp/>*fatalErrorSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,<sp/>...)<sp/>LIBXML_ATTR_FORMAT(2,3);</highlight></codeline>
<codeline lineno="640"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*isStandaloneSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx);</highlight></codeline>
<codeline lineno="649"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*hasInternalSubsetSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*hasExternalSubsetSAXFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>SAX<sp/>version<sp/>2<sp/>API<sp/>extensions<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/>************************************************************************/</highlight></codeline>
<codeline lineno="671"><highlight class="preprocessor">#define<sp/>XML_SAX2_MAGIC<sp/>0xDEEDBEAF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*startElementNsSAX2Func)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*localname,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*prefix,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*URI,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_namespaces,</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>**namespaces,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_attributes,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_defaulted,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>**attributes);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*endElementNsSAX2Func)<sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*localname,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*prefix,</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*URI);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719" refid="struct__xml_s_a_x_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__xml_s_a_x_handler" kindref="compound">_xmlSAXHandler</ref><sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>internalSubsetSAXFunc<sp/>internalSubset;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>isStandaloneSAXFunc<sp/>isStandalone;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>hasInternalSubsetSAXFunc<sp/>hasInternalSubset;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>hasExternalSubsetSAXFunc<sp/>hasExternalSubset;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>resolveEntitySAXFunc<sp/>resolveEntity;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>getEntitySAXFunc<sp/>getEntity;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>entityDeclSAXFunc<sp/>entityDecl;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>notationDeclSAXFunc<sp/>notationDecl;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>attributeDeclSAXFunc<sp/>attributeDecl;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>elementDeclSAXFunc<sp/>elementDecl;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>unparsedEntityDeclSAXFunc<sp/>unparsedEntityDecl;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>setDocumentLocatorSAXFunc<sp/>setDocumentLocator;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>startDocumentSAXFunc<sp/>startDocument;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>endDocumentSAXFunc<sp/>endDocument;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>startElementSAXFunc<sp/>startElement;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>endElementSAXFunc<sp/>endElement;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>referenceSAXFunc<sp/>reference;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>charactersSAXFunc<sp/>characters;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>ignorableWhitespaceSAXFunc<sp/>ignorableWhitespace;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>processingInstructionSAXFunc<sp/>processingInstruction;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>commentSAXFunc<sp/>comment;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>warningSAXFunc<sp/>warning;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>errorSAXFunc<sp/>error;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>fatalErrorSAXFunc<sp/>fatalError;<sp/></highlight><highlight class="comment">/*<sp/>unused<sp/>error()<sp/>get<sp/>all<sp/>the<sp/>errors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>getParameterEntitySAXFunc<sp/>getParameterEntity;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>cdataBlockSAXFunc<sp/>cdataBlock;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>externalSubsetSAXFunc<sp/>externalSubset;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initialized;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>fields<sp/>are<sp/>extensions<sp/>available<sp/>only<sp/>on<sp/>version<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_private;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>startElementNsSAX2Func<sp/>startElementNs;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>endElementNsSAX2Func<sp/>endElementNs;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlStructuredErrorFunc<sp/>serror;</highlight></codeline>
<codeline lineno="753"><highlight class="normal">};</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/>*<sp/>SAX<sp/>Version<sp/>1</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__xml_s_a_x_handler_v1" kindref="compound">_xmlSAXHandlerV1</ref><sp/>xmlSAXHandlerV1;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>xmlSAXHandlerV1<sp/>*<ref refid="struct__xml_s_a_x_handler_v1" kindref="compound">xmlSAXHandlerV1Ptr</ref>;</highlight></codeline>
<codeline lineno="760" refid="struct__xml_s_a_x_handler_v1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__xml_s_a_x_handler_v1" kindref="compound">_xmlSAXHandlerV1</ref><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>internalSubsetSAXFunc<sp/>internalSubset;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>isStandaloneSAXFunc<sp/>isStandalone;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>hasInternalSubsetSAXFunc<sp/>hasInternalSubset;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>hasExternalSubsetSAXFunc<sp/>hasExternalSubset;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>resolveEntitySAXFunc<sp/>resolveEntity;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>getEntitySAXFunc<sp/>getEntity;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>entityDeclSAXFunc<sp/>entityDecl;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>notationDeclSAXFunc<sp/>notationDecl;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>attributeDeclSAXFunc<sp/>attributeDecl;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>elementDeclSAXFunc<sp/>elementDecl;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>unparsedEntityDeclSAXFunc<sp/>unparsedEntityDecl;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>setDocumentLocatorSAXFunc<sp/>setDocumentLocator;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>startDocumentSAXFunc<sp/>startDocument;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>endDocumentSAXFunc<sp/>endDocument;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>startElementSAXFunc<sp/>startElement;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>endElementSAXFunc<sp/>endElement;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>referenceSAXFunc<sp/>reference;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>charactersSAXFunc<sp/>characters;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>ignorableWhitespaceSAXFunc<sp/>ignorableWhitespace;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>processingInstructionSAXFunc<sp/>processingInstruction;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>commentSAXFunc<sp/>comment;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>warningSAXFunc<sp/>warning;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>errorSAXFunc<sp/>error;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>fatalErrorSAXFunc<sp/>fatalError;<sp/></highlight><highlight class="comment">/*<sp/>unused<sp/>error()<sp/>get<sp/>all<sp/>the<sp/>errors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>getParameterEntitySAXFunc<sp/>getParameterEntity;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>cdataBlockSAXFunc<sp/>cdataBlock;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>externalSubsetSAXFunc<sp/>externalSubset;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initialized;</highlight></codeline>
<codeline lineno="789"><highlight class="normal">};</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/>(*xmlExternalEntityLoader)<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*URL,</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ID,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>context);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/encoding.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/xmlIO.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/globals.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/>*<sp/>Init/Cleanup</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlInitParser<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="824"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCleanupParser<sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="828"><highlight class="comment"><sp/>*<sp/>Input<sp/>functions</highlight></codeline>
<codeline lineno="829"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParserInputRead<sp/><sp/>(<ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/>in,</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="833"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParserInputGrow<sp/><sp/>(<ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/>in,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="838"><highlight class="comment"><sp/>*<sp/>Basic<sp/>parsing<sp/>Interfaces</highlight></codeline>
<codeline lineno="839"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_SAX1_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseDoc<sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*cur);</highlight></codeline>
<codeline lineno="843"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseFile<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="845"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseMemory<sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_SAX1_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSubstituteEntitiesDefault(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="851"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlKeepBlanksDefault<sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="853"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlStopParser<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="855"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlPedanticParserDefault(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="857"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlLineNumbersDefault<sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_SAX1_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/>*<sp/>Recovery<sp/>mode</highlight></codeline>
<codeline lineno="863"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlRecoverDoc<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*cur);</highlight></codeline>
<codeline lineno="866"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlRecoverMemory<sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="869"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlRecoverFile<sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_SAX1_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/>*<sp/>Less<sp/>common<sp/>routines<sp/>and<sp/>SAX<sp/>interfaces</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseDocument<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="878"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseExtParsedEnt<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_SAX1_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSAXUserParseFile<sp/>(<ref refid="struct__xml_s_a_x_handler" kindref="compound">xmlSAXHandlerPtr</ref><sp/>sax,</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data,</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="885"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSAXUserParseMemory<sp/><sp/><sp/>(<ref refid="struct__xml_s_a_x_handler" kindref="compound">xmlSAXHandlerPtr</ref><sp/>sax,</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data,</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="890"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSAXParseDoc<sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_s_a_x_handler" kindref="compound">xmlSAXHandlerPtr</ref><sp/>sax,</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*cur,</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recovery);</highlight></codeline>
<codeline lineno="894"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSAXParseMemory<sp/><sp/><sp/>(<ref refid="struct__xml_s_a_x_handler" kindref="compound">xmlSAXHandlerPtr</ref><sp/>sax,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recovery);</highlight></codeline>
<codeline lineno="899"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSAXParseMemoryWithData<sp/>(<ref refid="struct__xml_s_a_x_handler" kindref="compound">xmlSAXHandlerPtr</ref><sp/>sax,</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recovery,</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="905"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSAXParseFile<sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_s_a_x_handler" kindref="compound">xmlSAXHandlerPtr</ref><sp/>sax,</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recovery);</highlight></codeline>
<codeline lineno="909"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSAXParseFileWithData<sp/>(<ref refid="struct__xml_s_a_x_handler" kindref="compound">xmlSAXHandlerPtr</ref><sp/>sax,</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recovery,</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="914"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSAXParseEntity<sp/><sp/><sp/>(<ref refid="struct__xml_s_a_x_handler" kindref="compound">xmlSAXHandlerPtr</ref><sp/>sax,</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="917"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseEntity<sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_SAX1_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_VALID_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSAXParseDTD<sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_s_a_x_handler" kindref="compound">xmlSAXHandlerPtr</ref><sp/>sax,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*ExternalID,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*SystemID);</highlight></codeline>
<codeline lineno="926"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseDTD<sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*ExternalID,</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*SystemID);</highlight></codeline>
<codeline lineno="929"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlIOParseDTD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_s_a_x_handler" kindref="compound">xmlSAXHandlerPtr</ref><sp/>sax,</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_parser_input_buffer" kindref="compound">xmlParserInputBufferPtr</ref><sp/>input,</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCharEncoding<sp/>enc);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_VALID_ENABLE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_SAX1_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseBalancedChunkMemory(<ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_s_a_x_handler" kindref="compound">xmlSAXHandlerPtr</ref><sp/>sax,</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data,</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth,</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>*lst);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_SAX1_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal">XMLPUBFUN<sp/>xmlParserErrors<sp/>XMLCALL</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseInNodeContext<sp/><sp/><sp/>(<ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/><ref refid="struct__node" kindref="compound">node</ref>,</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>datalen,</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options,</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>*lst);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_SAX1_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseBalancedChunkMemoryRecover(<ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_s_a_x_handler" kindref="compound">xmlSAXHandlerPtr</ref><sp/>sax,</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data,</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth,</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>*lst,</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recover);</highlight></codeline>
<codeline lineno="958"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseExternalEntity<sp/><sp/>(<ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_s_a_x_handler" kindref="compound">xmlSAXHandlerPtr</ref><sp/>sax,</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data,</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth,</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*URL,</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*ID,</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>*lst);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_SAX1_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseCtxtExternalEntity(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctx,</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*URL,</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*ID,</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>*lst);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="974"><highlight class="comment"><sp/>*<sp/>Parser<sp/>contexts<sp/>handling.</highlight></codeline>
<codeline lineno="975"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNewParserCtxt<sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="978"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlInitParserCtxt<sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="980"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlClearParserCtxt<sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="982"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFreeParserCtxt<sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_SAX1_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSetupParserForBuffer<sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar*<sp/>buffer,</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_SAX1_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCreateDocParserCtxt<sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*cur);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_LEGACY_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="995"><highlight class="comment"><sp/>*<sp/>Reading/setting<sp/>optional<sp/>parsing<sp/>features.</highlight></codeline>
<codeline lineno="996"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlGetFeaturesList<sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len,</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**result);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlGetFeature<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*result);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSetFeature<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_LEGACY_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_PUSH_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1012"><highlight class="comment"><sp/>*<sp/>Interfaces<sp/>for<sp/>the<sp/>Push<sp/>mode.</highlight></codeline>
<codeline lineno="1013"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCreatePushParserCtxt(<ref refid="struct__xml_s_a_x_handler" kindref="compound">xmlSAXHandlerPtr</ref><sp/>sax,</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data,</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*chunk,</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseChunk<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*chunk,</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>terminate);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_PUSH_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1028"><highlight class="comment"><sp/>*<sp/>Special<sp/>I/O<sp/>mode.</highlight></codeline>
<codeline lineno="1029"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCreateIOParserCtxt<sp/><sp/><sp/>(<ref refid="struct__xml_s_a_x_handler" kindref="compound">xmlSAXHandlerPtr</ref><sp/>sax,</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data,</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlInputReadCallback<sp/><sp/><sp/>ioread,</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlInputCloseCallback<sp/><sp/>ioclose,</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ioctx,</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCharEncoding<sp/>enc);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNewIOInputStream<sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_parser_input_buffer" kindref="compound">xmlParserInputBufferPtr</ref><sp/>input,</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCharEncoding<sp/>enc);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1045"><highlight class="comment"><sp/>*<sp/>Node<sp/>infos.</highlight></codeline>
<codeline lineno="1046"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__xml_parser_node_info" kindref="compound">xmlParserNodeInfo</ref>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParserFindNodeInfo<sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>node);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlInitNodeInfoSeq<sp/><sp/>(<ref refid="struct__xml_parser_node_info_seq" kindref="compound">xmlParserNodeInfoSeqPtr</ref><sp/>seq);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlClearNodeInfoSeq<sp/>(<ref refid="struct__xml_parser_node_info_seq" kindref="compound">xmlParserNodeInfoSeqPtr</ref><sp/>seq);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParserFindNodeInfoIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__xml_parser_node_info_seq" kindref="compound">xmlParserNodeInfoSeqPtr</ref><sp/>seq,</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>node);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParserAddNodeInfo<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__xml_parser_node_info" kindref="compound">xmlParserNodeInfoPtr</ref><sp/>info);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1062"><highlight class="comment"><sp/>*<sp/>External<sp/>entities<sp/>handling<sp/>actually<sp/>implemented<sp/>in<sp/>xmlIO.</highlight></codeline>
<codeline lineno="1063"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSetExternalEntityLoader(xmlExternalEntityLoader<sp/>f);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">XMLPUBFUN<sp/>xmlExternalEntityLoader<sp/>XMLCALL</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlGetExternalEntityLoader(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlLoadExternalEntity<sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*URL,</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ID,</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1075"><highlight class="comment"><sp/>*<sp/>Index<sp/>lookup,<sp/>actually<sp/>implemented<sp/>in<sp/>the<sp/>encoding<sp/>module</highlight></codeline>
<codeline lineno="1076"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlByteConsumed<sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1081"><highlight class="comment"><sp/>*<sp/>New<sp/>set<sp/>of<sp/>simpler/more<sp/>flexible<sp/>APIs</highlight></codeline>
<codeline lineno="1082"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="1089"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_RECOVER<sp/><sp/><sp/>=<sp/>1&lt;&lt;0,<sp/></highlight><highlight class="comment">/*<sp/>recover<sp/>on<sp/>errors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_NOENT<sp/>=<sp/>1&lt;&lt;1,<sp/></highlight><highlight class="comment">/*<sp/>substitute<sp/>entities<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_DTDLOAD<sp/><sp/><sp/>=<sp/>1&lt;&lt;2,<sp/></highlight><highlight class="comment">/*<sp/>load<sp/>the<sp/>external<sp/>subset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_DTDATTR<sp/><sp/><sp/>=<sp/>1&lt;&lt;3,<sp/></highlight><highlight class="comment">/*<sp/>default<sp/>DTD<sp/>attributes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_DTDVALID<sp/><sp/>=<sp/>1&lt;&lt;4,<sp/></highlight><highlight class="comment">/*<sp/>validate<sp/>with<sp/>the<sp/>DTD<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_NOERROR<sp/><sp/><sp/>=<sp/>1&lt;&lt;5,<sp/></highlight><highlight class="comment">/*<sp/>suppress<sp/>error<sp/>reports<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_NOWARNING<sp/>=<sp/>1&lt;&lt;6,<sp/></highlight><highlight class="comment">/*<sp/>suppress<sp/>warning<sp/>reports<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_PEDANTIC<sp/><sp/>=<sp/>1&lt;&lt;7,<sp/></highlight><highlight class="comment">/*<sp/>pedantic<sp/>error<sp/>reporting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_NOBLANKS<sp/><sp/>=<sp/>1&lt;&lt;8,<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>blank<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_SAX1<sp/><sp/>=<sp/>1&lt;&lt;9,<sp/></highlight><highlight class="comment">/*<sp/>use<sp/>the<sp/>SAX1<sp/>interface<sp/>internally<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_XINCLUDE<sp/><sp/>=<sp/>1&lt;&lt;10,</highlight><highlight class="comment">/*<sp/>Implement<sp/>XInclude<sp/>substitition<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_NONET<sp/>=<sp/>1&lt;&lt;11,</highlight><highlight class="comment">/*<sp/>Forbid<sp/>network<sp/>access<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_NODICT<sp/><sp/><sp/><sp/>=<sp/>1&lt;&lt;12,</highlight><highlight class="comment">/*<sp/>Do<sp/>not<sp/>reuse<sp/>the<sp/>context<sp/>dictionary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_NSCLEAN<sp/><sp/><sp/>=<sp/>1&lt;&lt;13,</highlight><highlight class="comment">/*<sp/>remove<sp/>redundant<sp/>namespaces<sp/>declarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_NOCDATA<sp/><sp/><sp/>=<sp/>1&lt;&lt;14,</highlight><highlight class="comment">/*<sp/>merge<sp/>CDATA<sp/>as<sp/>text<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_NOXINCNODE=<sp/>1&lt;&lt;15,</highlight><highlight class="comment">/*<sp/>do<sp/>not<sp/>generate<sp/>XINCLUDE<sp/>START/END<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_COMPACT<sp/><sp/><sp/>=<sp/>1&lt;&lt;16,</highlight><highlight class="comment">/*<sp/>compact<sp/>small<sp/>text<sp/>nodes;<sp/>no<sp/>modification<sp/>of</highlight></codeline>
<codeline lineno="1107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>tree<sp/>allowed<sp/>afterwards<sp/>(will<sp/>possibly</highlight></codeline>
<codeline lineno="1108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crash<sp/>if<sp/>you<sp/>try<sp/>to<sp/>modify<sp/>the<sp/>tree)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_OLD10<sp/>=<sp/>1&lt;&lt;17,</highlight><highlight class="comment">/*<sp/>parse<sp/>using<sp/>XML-1.0<sp/>before<sp/>update<sp/>5<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_NOBASEFIX<sp/>=<sp/>1&lt;&lt;18,</highlight><highlight class="comment">/*<sp/>do<sp/>not<sp/>fixup<sp/>XINCLUDE<sp/>xml:base<sp/>uris<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_HUGE<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1&lt;&lt;19,</highlight><highlight class="comment">/*<sp/>relax<sp/>any<sp/>hardcoded<sp/>limit<sp/>from<sp/>the<sp/>parser<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_OLDSAX<sp/><sp/><sp/><sp/>=<sp/>1&lt;&lt;20,</highlight><highlight class="comment">/*<sp/>parse<sp/>using<sp/>SAX2<sp/>interface<sp/>before<sp/>2.7.0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_IGNORE_ENC=<sp/>1&lt;&lt;21,</highlight><highlight class="comment">/*<sp/>ignore<sp/>internal<sp/>document<sp/>encoding<sp/>hint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_PARSE_BIG_LINES<sp/>=<sp/>1&lt;&lt;22<sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>big<sp/>lines<sp/>numbers<sp/>in<sp/>text<sp/>PSVI<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal">}<sp/>xmlParserOption;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCtxtReset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCtxtResetPush<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*chunk,</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encoding);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCtxtUseOptions<sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlReadDoc<sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*cur,</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*URL,</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encoding,</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlReadFile<sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*URL,</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encoding,</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlReadMemory<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*URL,</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encoding,</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlReadFd<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*URL,</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encoding,</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlReadIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(xmlInputReadCallback<sp/>ioread,</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlInputCloseCallback<sp/>ioclose,</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ioctx,</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*URL,</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encoding,</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCtxtReadDoc<sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*cur,</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*URL,</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encoding,</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCtxtReadFile<sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encoding,</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCtxtReadMemory<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*URL,</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encoding,</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCtxtReadFd<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*URL,</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encoding,</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCtxtReadIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlInputReadCallback<sp/>ioread,</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlInputCloseCallback<sp/>ioclose,</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ioctx,</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*URL,</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encoding,</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1189"><highlight class="comment"><sp/>*<sp/>Library<sp/>wide<sp/>options</highlight></codeline>
<codeline lineno="1190"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="1198"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_THREAD<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_TREE<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_OUTPUT<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_PUSH<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_READER<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_PATTERN<sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_WRITER<sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_SAX1<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_FTP<sp/>=<sp/>9,</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_HTTP<sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_VALID<sp/>=<sp/>11,</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_HTML<sp/>=<sp/>12,</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_LEGACY<sp/>=<sp/>13,</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_C14N<sp/>=<sp/>14,</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_CATALOG<sp/>=<sp/>15,</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_XPATH<sp/>=<sp/>16,</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_XPTR<sp/>=<sp/>17,</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_XINCLUDE<sp/>=<sp/>18,</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_ICONV<sp/>=<sp/>19,</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_ISO8859X<sp/>=<sp/>20,</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_UNICODE<sp/>=<sp/>21,</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_REGEXP<sp/>=<sp/>22,</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_AUTOMATA<sp/>=<sp/>23,</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_EXPR<sp/>=<sp/>24,</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_SCHEMAS<sp/>=<sp/>25,</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_SCHEMATRON<sp/>=<sp/>26,</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_MODULES<sp/>=<sp/>27,</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_DEBUG<sp/>=<sp/>28,</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_DEBUG_MEM<sp/>=<sp/>29,</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_DEBUG_RUN<sp/>=<sp/>30,</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_ZLIB<sp/>=<sp/>31,</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_ICU<sp/>=<sp/>32,</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_LZMA<sp/>=<sp/>33,</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>XML_WITH_NONE<sp/>=<sp/>99999<sp/></highlight><highlight class="comment">/*<sp/>just<sp/>to<sp/>be<sp/>sure<sp/>of<sp/>allocation<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal">}<sp/>xmlFeature;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlHasFeature<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(xmlFeature<sp/>feature);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__XML_PARSER_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h"/>
  </compounddef>
</doxygen>
