<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="valid_8h" kind="file" language="C++">
    <compoundname>valid.h</compoundname>
    <includes refid="xmlversion_8h" local="no">libxml/xmlversion.h</includes>
    <includes refid="xmlerror_8h" local="no">libxml/xmlerror.h</includes>
    <includes refid="tree_8h" local="no">libxml/tree.h</includes>
    <includes refid="list_8h" local="no">libxml/list.h</includes>
    <includes refid="xmlautomata_8h" local="no">libxml/xmlautomata.h</includes>
    <includes refid="xmlregexp_8h" local="no">libxml/xmlregexp.h</includes>
    <includedby refid="parser_8h" local="no">venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h</includedby>
    <incdepgraph>
      <node id="1235">
        <label>stdarg.h</label>
      </node>
      <node id="1240">
        <label>libxml/xmlregexp.h</label>
        <link refid="xmlregexp_8h_source"/>
        <childnode refid="1231" relation="include">
        </childnode>
      </node>
      <node id="1246">
        <label>libxml/xlink.h</label>
        <link refid="xlink_8h_source"/>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1236" relation="include">
        </childnode>
      </node>
      <node id="1245">
        <label>stdlib.h</label>
      </node>
      <node id="1249">
        <label>libxml/entities.h</label>
        <link refid="entities_8h_source"/>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1236" relation="include">
        </childnode>
      </node>
      <node id="1248">
        <label>libxml/hash.h</label>
        <link refid="hash_8h_source"/>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1234" relation="include">
        </childnode>
        <childnode refid="1247" relation="include">
        </childnode>
      </node>
      <node id="1251">
        <label>libxml/xmlIO.h</label>
        <link refid="xml_i_o_8h_source"/>
        <childnode refid="1237" relation="include">
        </childnode>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1243" relation="include">
        </childnode>
        <childnode refid="1236" relation="include">
        </childnode>
        <childnode refid="1234" relation="include">
        </childnode>
        <childnode refid="1250" relation="include">
        </childnode>
      </node>
      <node id="1247">
        <label>libxml/dict.h</label>
        <link refid="dict_8h_source"/>
        <childnode refid="1238" relation="include">
        </childnode>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1236" relation="include">
        </childnode>
      </node>
      <node id="1238">
        <label>limits.h</label>
      </node>
      <node id="1252">
        <label>libxml/list.h</label>
        <link refid="list_8h_source"/>
        <childnode refid="1231" relation="include">
        </childnode>
      </node>
      <node id="1243">
        <label>libxml/globals.h</label>
        <link refid="globals_8h_source"/>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1234" relation="include">
        </childnode>
        <childnode refid="1233" relation="include">
        </childnode>
        <childnode refid="1244" relation="include">
        </childnode>
        <childnode refid="1241" relation="include">
        </childnode>
        <childnode refid="1242" relation="include">
        </childnode>
      </node>
      <node id="1241">
        <label>libxml/xmlmemory.h</label>
        <link refid="xmlmemory_8h_source"/>
        <childnode refid="1237" relation="include">
        </childnode>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1242" relation="include">
        </childnode>
        <childnode refid="1243" relation="include">
        </childnode>
      </node>
      <node id="1231">
        <label>libxml/xmlversion.h</label>
        <link refid="xmlversion_8h_source"/>
        <childnode refid="1232" relation="include">
        </childnode>
      </node>
      <node id="1239">
        <label>libxml/xmlstring.h</label>
        <link refid="xmlstring_8h_source"/>
        <childnode refid="1235" relation="include">
        </childnode>
        <childnode refid="1231" relation="include">
        </childnode>
      </node>
      <node id="1234">
        <label>libxml/parser.h</label>
        <link refid="parser_8h_source"/>
        <childnode refid="1235" relation="include">
        </childnode>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1236" relation="include">
        </childnode>
        <childnode refid="1247" relation="include">
        </childnode>
        <childnode refid="1248" relation="include">
        </childnode>
        <childnode refid="1230" relation="include">
        </childnode>
        <childnode refid="1249" relation="include">
        </childnode>
        <childnode refid="1233" relation="include">
        </childnode>
        <childnode refid="1239" relation="include">
        </childnode>
        <childnode refid="1250" relation="include">
        </childnode>
        <childnode refid="1251" relation="include">
        </childnode>
        <childnode refid="1243" relation="include">
        </childnode>
      </node>
      <node id="1236">
        <label>libxml/tree.h</label>
        <link refid="tree_8h_source"/>
        <childnode refid="1237" relation="include">
        </childnode>
        <childnode refid="1238" relation="include">
        </childnode>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1239" relation="include">
        </childnode>
        <childnode refid="1240" relation="include">
        </childnode>
        <childnode refid="1241" relation="include">
        </childnode>
      </node>
      <node id="1250">
        <label>libxml/encoding.h</label>
        <link refid="encoding_8h_source"/>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1236" relation="include">
        </childnode>
      </node>
      <node id="1230">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h</label>
        <link refid="valid_8h"/>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1233" relation="include">
        </childnode>
        <childnode refid="1236" relation="include">
        </childnode>
        <childnode refid="1252" relation="include">
        </childnode>
        <childnode refid="1253" relation="include">
        </childnode>
        <childnode refid="1240" relation="include">
        </childnode>
      </node>
      <node id="1244">
        <label>libxml/SAX2.h</label>
        <link refid="_s_a_x2_8h_source"/>
        <childnode refid="1237" relation="include">
        </childnode>
        <childnode refid="1245" relation="include">
        </childnode>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1234" relation="include">
        </childnode>
        <childnode refid="1246" relation="include">
        </childnode>
      </node>
      <node id="1242">
        <label>libxml/threads.h</label>
        <link refid="threads_8h_source"/>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1243" relation="include">
        </childnode>
      </node>
      <node id="1253">
        <label>libxml/xmlautomata.h</label>
        <link refid="xmlautomata_8h_source"/>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1236" relation="include">
        </childnode>
      </node>
      <node id="1232">
        <label>libxml/xmlexports.h</label>
        <link refid="xmlexports_8h_source"/>
      </node>
      <node id="1237">
        <label>stdio.h</label>
      </node>
      <node id="1233">
        <label>libxml/xmlerror.h</label>
        <link refid="xmlerror_8h_source"/>
        <childnode refid="1234" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1295">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/namespaces.h</label>
        <link refid="namespaces_8h_source"/>
      </node>
      <node id="1296">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/xslt.h</label>
        <link refid="xslt_8h_source"/>
        <childnode refid="1267" relation="include">
        </childnode>
      </node>
      <node id="1263">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/debugXML.h</label>
        <link refid="debug_x_m_l_8h_source"/>
      </node>
      <node id="1289">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xlink.h</label>
        <link refid="xlink_8h_source"/>
        <childnode refid="1290" relation="include">
        </childnode>
        <childnode refid="1291" relation="include">
        </childnode>
      </node>
      <node id="1283">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlreader.h</label>
        <link refid="xmlreader_8h_source"/>
      </node>
      <node id="1277">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/security.h</label>
        <link refid="security_8h_source"/>
      </node>
      <node id="1271">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/functions.h</label>
        <link refid="functions_8h_source"/>
        <childnode refid="1272" relation="include">
        </childnode>
      </node>
      <node id="1297">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/HTMLparser.h</label>
        <link refid="_h_t_m_lparser_8h_source"/>
        <childnode refid="1286" relation="include">
        </childnode>
        <childnode refid="1298" relation="include">
        </childnode>
      </node>
      <node id="1270">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/extra.h</label>
        <link refid="extra_8h_source"/>
      </node>
      <node id="1285">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/entities.h</label>
        <link refid="entities_8h_source"/>
        <childnode refid="1255" relation="include">
        </childnode>
      </node>
      <node id="1265">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/hash.h</label>
        <link refid="hash_8h_source"/>
        <childnode refid="1255" relation="include">
        </childnode>
        <childnode refid="1266" relation="include">
        </childnode>
        <childnode refid="1267" relation="include">
        </childnode>
      </node>
      <node id="1282">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlIO.h</label>
        <link refid="xml_i_o_8h_source"/>
        <childnode refid="1255" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
        <childnode refid="1284" relation="include">
        </childnode>
        <childnode refid="1279" relation="include">
        </childnode>
      </node>
      <node id="1294">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/numbersInternals.h</label>
        <link refid="numbers_internals_8h_source"/>
        <childnode refid="1267" relation="include">
        </childnode>
      </node>
      <node id="1293">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/attributes.h</label>
        <link refid="attributes_8h_source"/>
      </node>
      <node id="1276">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/preproc.h</label>
        <link refid="preproc_8h_source"/>
      </node>
      <node id="1288">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xinclude.h</label>
        <link refid="xinclude_8h_source"/>
      </node>
      <node id="1279">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/transform.h</label>
        <link refid="transform_8h_source"/>
      </node>
      <node id="1284">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlsave.h</label>
        <link refid="xmlsave_8h_source"/>
      </node>
      <node id="1275">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/pattern.h</label>
        <link refid="pattern_8h_source"/>
      </node>
      <node id="1260">
        <label>venv/lib/python3.6/site-packages/lxml/includes/etree_defs.h</label>
        <link refid="etree__defs_8h_source"/>
      </node>
      <node id="1262">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/catalog.h</label>
        <link refid="catalog_8h_source"/>
      </node>
      <node id="1264">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/dict.h</label>
        <link refid="dict_8h_source"/>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1255" relation="include">
        </childnode>
        <childnode refid="1267" relation="include">
        </childnode>
        <childnode refid="1280" relation="include">
        </childnode>
      </node>
      <node id="1256">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/globals.h</label>
        <link refid="globals_8h_source"/>
        <childnode refid="1255" relation="include">
        </childnode>
        <childnode refid="1257" relation="include">
        </childnode>
        <childnode refid="1282" relation="include">
        </childnode>
        <childnode refid="1258" relation="include">
        </childnode>
      </node>
      <node id="1266">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/relaxng.h</label>
        <link refid="relaxng_8h_source"/>
      </node>
      <node id="1258">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlmemory.h</label>
        <link refid="xmlmemory_8h_source"/>
        <childnode refid="1259" relation="include">
        </childnode>
        <childnode refid="1256" relation="include">
        </childnode>
      </node>
      <node id="1255">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/parser.h</label>
        <link refid="parser_8h_source"/>
        <childnode refid="1256" relation="include">
        </childnode>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1297" relation="include">
        </childnode>
        <childnode refid="1298" relation="include">
        </childnode>
        <childnode refid="1290" relation="include">
        </childnode>
        <childnode refid="1291" relation="include">
        </childnode>
        <childnode refid="1299" relation="include">
        </childnode>
        <childnode refid="1282" relation="include">
        </childnode>
        <childnode refid="1279" relation="include">
        </childnode>
      </node>
      <node id="1286">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/HTMLtree.h</label>
        <link refid="_h_t_m_ltree_8h_source"/>
      </node>
      <node id="1278">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/templates.h</label>
        <link refid="templates_8h_source"/>
      </node>
      <node id="1259">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/tree.h</label>
        <link refid="tree_8h_source"/>
        <childnode refid="1260" relation="include">
        </childnode>
        <childnode refid="1261" relation="include">
        </childnode>
        <childnode refid="1262" relation="include">
        </childnode>
        <childnode refid="1263" relation="include">
        </childnode>
        <childnode refid="1264" relation="include">
        </childnode>
        <childnode refid="1281" relation="include">
        </childnode>
        <childnode refid="1285" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
        <childnode refid="1255" relation="include">
        </childnode>
        <childnode refid="1287" relation="include">
        </childnode>
        <childnode refid="1254" relation="include">
        </childnode>
        <childnode refid="1288" relation="include">
        </childnode>
        <childnode refid="1289" relation="include">
        </childnode>
        <childnode refid="1292" relation="include">
        </childnode>
        <childnode refid="1282" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
        <childnode refid="1284" relation="include">
        </childnode>
        <childnode refid="1293" relation="include">
        </childnode>
        <childnode refid="1268" relation="include">
        </childnode>
        <childnode refid="1267" relation="include">
        </childnode>
        <childnode refid="1294" relation="include">
        </childnode>
        <childnode refid="1273" relation="include">
        </childnode>
        <childnode refid="1295" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
        <childnode refid="1277" relation="include">
        </childnode>
        <childnode refid="1296" relation="include">
        </childnode>
      </node>
      <node id="1281">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/encoding.h</label>
        <link refid="encoding_8h_source"/>
        <childnode refid="1255" relation="include">
        </childnode>
        <childnode refid="1282" relation="include">
        </childnode>
        <childnode refid="1284" relation="include">
        </childnode>
      </node>
      <node id="1261">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libexslt/exslt.h</label>
        <link refid="exslt_8h_source"/>
      </node>
      <node id="1254">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h</label>
        <link refid="valid_8h"/>
        <childnode refid="1255" relation="include">
        </childnode>
      </node>
      <node id="1291">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/SAX2.h</label>
        <link refid="_s_a_x2_8h_source"/>
        <childnode refid="1256" relation="include">
        </childnode>
      </node>
      <node id="1298">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h</label>
        <link refid="parser_internals_8h_source"/>
      </node>
      <node id="1268">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/documents.h</label>
        <link refid="documents_8h_source"/>
      </node>
      <node id="1273">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/imports.h</label>
        <link refid="imports_8h_source"/>
      </node>
      <node id="1267">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/xsltInternals.h</label>
        <link refid="xslt_internals_8h_source"/>
        <childnode refid="1268" relation="include">
        </childnode>
        <childnode refid="1269" relation="include">
        </childnode>
        <childnode refid="1270" relation="include">
        </childnode>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1273" relation="include">
        </childnode>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
        <childnode refid="1277" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1279" relation="include">
        </childnode>
        <childnode refid="1272" relation="include">
        </childnode>
        <childnode refid="1280" relation="include">
        </childnode>
      </node>
      <node id="1269">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/extensions.h</label>
        <link refid="extensions_8h_source"/>
      </node>
      <node id="1257">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/threads.h</label>
        <link refid="threads_8h_source"/>
        <childnode refid="1256" relation="include">
        </childnode>
        <childnode refid="1258" relation="include">
        </childnode>
      </node>
      <node id="1290">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/SAX.h</label>
        <link refid="_s_a_x_8h_source"/>
      </node>
      <node id="1272">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/variables.h</label>
        <link refid="variables_8h_source"/>
      </node>
      <node id="1292">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlautomata.h</label>
        <link refid="xmlautomata_8h_source"/>
        <childnode refid="1254" relation="include">
        </childnode>
      </node>
      <node id="1280">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/xsltutils.h</label>
        <link refid="xsltutils_8h_source"/>
      </node>
      <node id="1274">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxslt/keys.h</label>
        <link refid="keys_8h_source"/>
      </node>
      <node id="1287">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/uri.h</label>
        <link refid="uri_8h_source"/>
      </node>
      <node id="1299">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/xmlerror.h</label>
        <link refid="xmlerror_8h_source"/>
        <childnode refid="1256" relation="include">
        </childnode>
        <childnode refid="1255" relation="include">
        </childnode>
        <childnode refid="1254" relation="include">
        </childnode>
        <childnode refid="1267" relation="include">
        </childnode>
        <childnode refid="1280" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct__xml_valid_ctxt" prot="public">_xmlValidCtxt</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="valid_8h_1ad8696113d88fbd3d5b5746ed5dfcfaab" prot="public" static="no">
        <type>struct _xmlValidState</type>
        <definition>typedef struct _xmlValidState xmlValidState</definition>
        <argsstring></argsstring>
        <name>xmlValidState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="44" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="valid_8h_1acab25484bcb03669239bee95adcb9507" prot="public" static="no">
        <type>xmlValidState *</type>
        <definition>typedef xmlValidState* xmlValidStatePtr</definition>
        <argsstring></argsstring>
        <name>xmlValidStatePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="29" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="valid_8h_1a7a1627b2f86626cdc76a31e58e09dc6e" prot="public" static="no">
        <type>void(XMLCDECL *</type>
        <definition>typedef void(XMLCDECL * xmlValidityErrorFunc) (void *ctx, const char *msg,...) LIBXML_ATTR_FORMAT(2</definition>
        <argsstring>)(void *ctx, const char *msg,...) LIBXML_ATTR_FORMAT(2</argsstring>
        <name>xmlValidityErrorFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>xmlValidityErrorFunc: : usually an xmlValidCtxtPtr to a validity error context, but comes from ctxt-&gt;userData (which normally contains such a pointer); ctxt-&gt;userData can be changed by the user. : the string to format *printf like vararg ...: remaining arguments to the format</para><para>Callback called when a validity error is found. This is a message oriented function similar to an *printf function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="42" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="valid_8h_1a29252a407ccd41e09f964a17a4cbb321" prot="public" static="no">
        <type>void(XMLCDECL *) typede</type>
        <definition>typedef void(XMLCDECL *) typede void) (XMLCDECL *xmlValidityWarningFunc)(void *ctx</definition>
        <argsstring>)(XMLCDECL *xmlValidityWarningFunc)(void *ctx</argsstring>
        <name>void</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>xmlValidityWarningFunc: : usually an xmlValidCtxtPtr to a validity error context, but comes from ctxt-&gt;userData (which normally contains such a pointer); ctxt-&gt;userData can be changed by the user. : the string to format *printf like vararg ...: remaining arguments to the format</para><para>Callback called when a validity warning is found. This is a message oriented function similar to an *printf function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="57" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="valid_8h_1ae6ce52968b4b221237181dbdea400320" prot="public" static="no">
        <type>void(XMLCDECL *) typedef const char</type>
        <definition>typedef void(XMLCDECL *) typedef const char msg) </definition>
        <argsstring>)</argsstring>
        <name>msg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="58" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="valid_8h_1ac738b3bb35101a9a1fed010fa8533b07" prot="public" static="no">
        <type>void(XMLCDECL *) typedef const cha</type>
        <definition>typedef void(XMLCDECL *) typedef const cha LIBXML_ATTR_FORMAT) (2, 3)</definition>
        <argsstring>)(2, 3)</argsstring>
        <name>LIBXML_ATTR_FORMAT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="59" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="valid_8h_1a493f4e0e9f1ec45d5db9e8ae86e900eb" prot="public" static="no">
        <type>struct <ref refid="struct__xml_valid_ctxt" kindref="compound">_xmlValidCtxt</ref></type>
        <definition>typedef struct _xmlValidCtxt xmlValidCtxt</definition>
        <argsstring></argsstring>
        <name>xmlValidCtxt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="59" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="valid_8h_1ad37630b3503b95072ba0abda6869ed2f" prot="public" static="no">
        <type><ref refid="struct__xml_valid_ctxt" kindref="compound">xmlValidCtxt</ref> *</type>
        <definition>typedef xmlValidCtxt* xmlValidCtxtPtr</definition>
        <argsstring></argsstring>
        <name>xmlValidCtxtPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="81" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="valid_8h_1a0e7d03efcb215b59b68c02a47af70d16" prot="public" static="no">
        <type>struct _xmlHashTable</type>
        <definition>typedef struct _xmlHashTable xmlNotationTable</definition>
        <argsstring></argsstring>
        <name>xmlNotationTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="81" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="valid_8h_1ad50ec4fbb4207225f424f1164ad4fbde" prot="public" static="no">
        <type>xmlNotationTable *</type>
        <definition>typedef xmlNotationTable* xmlNotationTablePtr</definition>
        <argsstring></argsstring>
        <name>xmlNotationTablePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="118" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="valid_8h_1a590fd3819c4a17445379a7a70257e5ea" prot="public" static="no">
        <type>struct _xmlHashTable</type>
        <definition>typedef struct _xmlHashTable xmlElementTable</definition>
        <argsstring></argsstring>
        <name>xmlElementTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="118" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="valid_8h_1a63216af1beec60c6eb254d6a7f205afa" prot="public" static="no">
        <type>xmlElementTable *</type>
        <definition>typedef xmlElementTable* xmlElementTablePtr</definition>
        <argsstring></argsstring>
        <name>xmlElementTablePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="126" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="valid_8h_1ad410205d414f44cda05c33b434b6c4a2" prot="public" static="no">
        <type>struct _xmlHashTable</type>
        <definition>typedef struct _xmlHashTable xmlAttributeTable</definition>
        <argsstring></argsstring>
        <name>xmlAttributeTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="126" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="valid_8h_1a6046fc9960dc258eb7fa5a1b5549a163" prot="public" static="no">
        <type>xmlAttributeTable *</type>
        <definition>typedef xmlAttributeTable* xmlAttributeTablePtr</definition>
        <argsstring></argsstring>
        <name>xmlAttributeTablePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="134" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="valid_8h_1a433e856f76c0ad23ffa0eeb1dbaca98c" prot="public" static="no">
        <type>struct _xmlHashTable</type>
        <definition>typedef struct _xmlHashTable xmlIDTable</definition>
        <argsstring></argsstring>
        <name>xmlIDTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="134" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="valid_8h_1a2dfab0c8813a454065c056b4e1ca1dbd" prot="public" static="no">
        <type>xmlIDTable *</type>
        <definition>typedef xmlIDTable* xmlIDTablePtr</definition>
        <argsstring></argsstring>
        <name>xmlIDTablePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="142" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="valid_8h_1afa46e75b7bbf654db1229ea047911e6b" prot="public" static="no">
        <type>struct _xmlHashTable</type>
        <definition>typedef struct _xmlHashTable xmlRefTable</definition>
        <argsstring></argsstring>
        <name>xmlRefTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="142" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="valid_8h_1a061bf9521d52da7ed5c671234c9f2a09" prot="public" static="no">
        <type>xmlRefTable *</type>
        <definition>typedef xmlRefTable* xmlRefTablePtr</definition>
        <argsstring></argsstring>
        <name>xmlRefTablePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="150" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="valid_8h_1a2659cc359f5726584fa8a1765a89cd08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_notation" kindref="compound">xmlNotationPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlNotationPtr XMLCALL xmlAddNotationDecl</definition>
        <argsstring>(xmlValidCtxtPtr ctxt, xmlDtdPtr dtd, const xmlChar *name, const xmlChar *PublicID, const xmlChar *SystemID)</argsstring>
        <name>xmlAddNotationDecl</name>
        <param>
          <type><ref refid="struct__xml_valid_ctxt" kindref="compound">xmlValidCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref></type>
          <declname>dtd</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>PublicID</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>SystemID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1abd820339126553222d8ba12a742b419c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlFreeNotationTable</definition>
        <argsstring>(xmlNotationTablePtr table)</argsstring>
        <name>xmlFreeNotationTable</name>
        <param>
          <type>xmlNotationTablePtr</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1a190592730f3cf9c583c99154cb2c9b5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlElementContentPtr XMLCALL xmlNewElementContent</definition>
        <argsstring>(const xmlChar *name, xmlElementContentType type)</argsstring>
        <name>xmlNewElementContent</name>
        <param>
          <type>const xmlChar *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>xmlElementContentType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1a3d187d39b3412b30a5b419023df0d7be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlElementContentPtr XMLCALL xmlCopyElementContent</definition>
        <argsstring>(xmlElementContentPtr content)</argsstring>
        <name>xmlCopyElementContent</name>
        <param>
          <type><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref></type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1af328b3cbc4e45d2cad233e3f50aa2367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlFreeElementContent</definition>
        <argsstring>(xmlElementContentPtr cur)</argsstring>
        <name>xmlFreeElementContent</name>
        <param>
          <type><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref></type>
          <declname>cur</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1a1195c063eab75938bd9b697e223c87e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlElementContentPtr XMLCALL xmlNewDocElementContent</definition>
        <argsstring>(xmlDocPtr doc, const xmlChar *name, xmlElementContentType type)</argsstring>
        <name>xmlNewDocElementContent</name>
        <param>
          <type><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref></type>
          <declname>doc</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>xmlElementContentType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1a0d9a9f00486b324a07b64be63fb3d121" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlElementContentPtr XMLCALL xmlCopyDocElementContent</definition>
        <argsstring>(xmlDocPtr doc, xmlElementContentPtr content)</argsstring>
        <name>xmlCopyDocElementContent</name>
        <param>
          <type><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref></type>
          <declname>doc</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref></type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1a521c99bf1fca7d1afa2c4b9fd0e45388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlFreeDocElementContent</definition>
        <argsstring>(xmlDocPtr doc, xmlElementContentPtr cur)</argsstring>
        <name>xmlFreeDocElementContent</name>
        <param>
          <type><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref></type>
          <declname>doc</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref></type>
          <declname>cur</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1a129a8103dfa54eaf5dd32c0f172dc63e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlSnprintfElementContent</definition>
        <argsstring>(char *buf, int size, xmlElementContentPtr content, int englob)</argsstring>
        <name>xmlSnprintfElementContent</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref></type>
          <declname>content</declname>
        </param>
        <param>
          <type>int</type>
          <declname>englob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1ac96f13083d2d17ec73800527e11a42ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_element" kindref="compound">xmlElementPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlElementPtr XMLCALL xmlAddElementDecl</definition>
        <argsstring>(xmlValidCtxtPtr ctxt, xmlDtdPtr dtd, const xmlChar *name, xmlElementTypeVal type, xmlElementContentPtr content)</argsstring>
        <name>xmlAddElementDecl</name>
        <param>
          <type><ref refid="struct__xml_valid_ctxt" kindref="compound">xmlValidCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref></type>
          <declname>dtd</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>xmlElementTypeVal</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref></type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1adc13615014c5b152f4f26ed05820e5bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlFreeElementTable</definition>
        <argsstring>(xmlElementTablePtr table)</argsstring>
        <name>xmlFreeElementTable</name>
        <param>
          <type>xmlElementTablePtr</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1a01dd9b4f64fc2bdccca55fca96e8b1f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_enumeration" kindref="compound">xmlEnumerationPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlEnumerationPtr XMLCALL xmlCreateEnumeration</definition>
        <argsstring>(const xmlChar *name)</argsstring>
        <name>xmlCreateEnumeration</name>
        <param>
          <type>const xmlChar *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="232" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1a7697714bee65cd47c554e08517f0b439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlFreeEnumeration</definition>
        <argsstring>(xmlEnumerationPtr cur)</argsstring>
        <name>xmlFreeEnumeration</name>
        <param>
          <type><ref refid="struct__xml_enumeration" kindref="compound">xmlEnumerationPtr</ref></type>
          <declname>cur</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1ae6807311e07928b2480c75b96dbac4e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_attribute" kindref="compound">xmlAttributePtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlAttributePtr XMLCALL xmlAddAttributeDecl</definition>
        <argsstring>(xmlValidCtxtPtr ctxt, xmlDtdPtr dtd, const xmlChar *elem, const xmlChar *name, const xmlChar *ns, xmlAttributeType type, xmlAttributeDefault def, const xmlChar *defaultValue, xmlEnumerationPtr tree)</argsstring>
        <name>xmlAddAttributeDecl</name>
        <param>
          <type><ref refid="struct__xml_valid_ctxt" kindref="compound">xmlValidCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref></type>
          <declname>dtd</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>ns</declname>
        </param>
        <param>
          <type>xmlAttributeType</type>
          <declname>type</declname>
        </param>
        <param>
          <type>xmlAttributeDefault</type>
          <declname>def</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>defaultValue</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_enumeration" kindref="compound">xmlEnumerationPtr</ref></type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="242" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1afcc5468f4bffe9d7cfa3fe448bc184c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlFreeAttributeTable</definition>
        <argsstring>(xmlAttributeTablePtr table)</argsstring>
        <name>xmlFreeAttributeTable</name>
        <param>
          <type>xmlAttributeTablePtr</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1a0e53b13f58d6b31e4e0de89dd677798d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_i_d" kindref="compound">xmlIDPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlIDPtr XMLCALL xmlAddID</definition>
        <argsstring>(xmlValidCtxtPtr ctxt, xmlDocPtr doc, const xmlChar *value, xmlAttrPtr attr)</argsstring>
        <name>xmlAddID</name>
        <param>
          <type><ref refid="struct__xml_valid_ctxt" kindref="compound">xmlValidCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref></type>
          <declname>doc</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_attr" kindref="compound">xmlAttrPtr</ref></type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1a51c9e6ade1c11f9161d3f6c08ea1bb81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlFreeIDTable</definition>
        <argsstring>(xmlIDTablePtr table)</argsstring>
        <name>xmlFreeIDTable</name>
        <param>
          <type>xmlIDTablePtr</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1a43212530b083f70a0fbf6838088ab615" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_attr" kindref="compound">xmlAttrPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlAttrPtr XMLCALL xmlGetID</definition>
        <argsstring>(xmlDocPtr doc, const xmlChar *ID)</argsstring>
        <name>xmlGetID</name>
        <param>
          <type><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref></type>
          <declname>doc</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>ID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1ad271979aa790d78ee952a366063384ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlIsID</definition>
        <argsstring>(xmlDocPtr doc, xmlNodePtr elem, xmlAttrPtr attr)</argsstring>
        <name>xmlIsID</name>
        <param>
          <type><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref></type>
          <declname>doc</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref></type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_attr" kindref="compound">xmlAttrPtr</ref></type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="278" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1aa953d54ba28172e78cff2b6d67cd9338" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlRemoveID</definition>
        <argsstring>(xmlDocPtr doc, xmlAttrPtr attr)</argsstring>
        <name>xmlRemoveID</name>
        <param>
          <type><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref></type>
          <declname>doc</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_attr" kindref="compound">xmlAttrPtr</ref></type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="282" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1ad3a1d87672e3f5747d6e99a6a58cf494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_ref" kindref="compound">xmlRefPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlRefPtr XMLCALL xmlAddRef</definition>
        <argsstring>(xmlValidCtxtPtr ctxt, xmlDocPtr doc, const xmlChar *value, xmlAttrPtr attr)</argsstring>
        <name>xmlAddRef</name>
        <param>
          <type><ref refid="struct__xml_valid_ctxt" kindref="compound">xmlValidCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref></type>
          <declname>doc</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_attr" kindref="compound">xmlAttrPtr</ref></type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="287" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1a94dbe4d8bf29716abfbe5e8c5515e75c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlFreeRefTable</definition>
        <argsstring>(xmlRefTablePtr table)</argsstring>
        <name>xmlFreeRefTable</name>
        <param>
          <type>xmlRefTablePtr</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="292" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1a3d241ed52ab2f699c6f8e174ecd559e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlIsRef</definition>
        <argsstring>(xmlDocPtr doc, xmlNodePtr elem, xmlAttrPtr attr)</argsstring>
        <name>xmlIsRef</name>
        <param>
          <type><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref></type>
          <declname>doc</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref></type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_attr" kindref="compound">xmlAttrPtr</ref></type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="294" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1ab2b9dd2235ae02038483de0107bea1ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlRemoveRef</definition>
        <argsstring>(xmlDocPtr doc, xmlAttrPtr attr)</argsstring>
        <name>xmlRemoveRef</name>
        <param>
          <type><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref></type>
          <declname>doc</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_attr" kindref="compound">xmlAttrPtr</ref></type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="298" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1a407d4c2031807ab5ff241074093f03cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN xmlListPtr XMLCALL</type>
        <definition>XMLPUBFUN xmlListPtr XMLCALL xmlGetRefs</definition>
        <argsstring>(xmlDocPtr doc, const xmlChar *ID)</argsstring>
        <name>xmlGetRefs</name>
        <param>
          <type><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref></type>
          <declname>doc</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>ID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="301" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1a44954d7642856ffc80d37aded335abd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlIsMixedElement</definition>
        <argsstring>(xmlDocPtr doc, const xmlChar *name)</argsstring>
        <name>xmlIsMixedElement</name>
        <param>
          <type><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref></type>
          <declname>doc</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The public function calls related to validity checking. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="387" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1af529b59aa40181034d1629664e981ee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_attribute" kindref="compound">xmlAttributePtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlAttributePtr XMLCALL xmlGetDtdAttrDesc</definition>
        <argsstring>(xmlDtdPtr dtd, const xmlChar *elem, const xmlChar *name)</argsstring>
        <name>xmlGetDtdAttrDesc</name>
        <param>
          <type><ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref></type>
          <declname>dtd</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="390" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1aa680befa9a98afa295981b44eaffc1c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_attribute" kindref="compound">xmlAttributePtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlAttributePtr XMLCALL xmlGetDtdQAttrDesc</definition>
        <argsstring>(xmlDtdPtr dtd, const xmlChar *elem, const xmlChar *name, const xmlChar *prefix)</argsstring>
        <name>xmlGetDtdQAttrDesc</name>
        <param>
          <type><ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref></type>
          <declname>dtd</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="394" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1acfd07815401ca3fa473b3fbb51555b26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_notation" kindref="compound">xmlNotationPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlNotationPtr XMLCALL xmlGetDtdNotationDesc</definition>
        <argsstring>(xmlDtdPtr dtd, const xmlChar *name)</argsstring>
        <name>xmlGetDtdNotationDesc</name>
        <param>
          <type><ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref></type>
          <declname>dtd</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="399" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1a18839a7f1c42343f5d62ab4b271e9957" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_element" kindref="compound">xmlElementPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlElementPtr XMLCALL xmlGetDtdQElementDesc</definition>
        <argsstring>(xmlDtdPtr dtd, const xmlChar *name, const xmlChar *prefix)</argsstring>
        <name>xmlGetDtdQElementDesc</name>
        <param>
          <type><ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref></type>
          <declname>dtd</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="402" column="1"/>
      </memberdef>
      <memberdef kind="function" id="valid_8h_1a2fb6314f22bbe36bb71261b16c5b4e7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_element" kindref="compound">xmlElementPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlElementPtr XMLCALL xmlGetDtdElementDesc</definition>
        <argsstring>(xmlDtdPtr dtd, const xmlChar *name)</argsstring>
        <name>xmlGetDtdElementDesc</name>
        <param>
          <type><ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref></type>
          <declname>dtd</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h" line="406" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Summary:<sp/>The<sp/>DTD<sp/>validation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>API<sp/>for<sp/>the<sp/>DTD<sp/>handling<sp/>and<sp/>the<sp/>validity<sp/>checking</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copy:<sp/>See<sp/>Copyright<sp/>for<sp/>the<sp/>status<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Daniel<sp/>Veillard</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__XML_VALID_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__XML_VALID_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/xmlversion.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/xmlerror.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/tree.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/list.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/xmlautomata.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/xmlregexp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>Validation<sp/>state<sp/>added<sp/>for<sp/>non-determinist<sp/>content<sp/>model.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_xmlValidState<sp/>xmlValidState;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>xmlValidState<sp/>*xmlValidStatePtr;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(XMLCDECL<sp/>*xmlValidityErrorFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...)<sp/>LIBXML_ATTR_FORMAT(2,3);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(XMLCDECL<sp/>*xmlValidityWarningFunc)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...)<sp/>LIBXML_ATTR_FORMAT(2,3);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IN_LIBXML</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor">#define<sp/>XML_CTXT_FINISH_DTD_0<sp/>0xabcd1234</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor">#define<sp/>XML_CTXT_FINISH_DTD_1<sp/>0xabcd1235</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>xmlValidCtxt:</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>An<sp/>xmlValidCtxt<sp/>is<sp/>used<sp/>for<sp/>error<sp/>reporting<sp/>when<sp/>validating.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__xml_valid_ctxt" kindref="compound">_xmlValidCtxt</ref><sp/><ref refid="struct__xml_valid_ctxt" kindref="compound">xmlValidCtxt</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct__xml_valid_ctxt" kindref="compound">xmlValidCtxt</ref><sp/>*<ref refid="struct__xml_valid_ctxt" kindref="compound">xmlValidCtxtPtr</ref>;</highlight></codeline>
<codeline lineno="82" refid="struct__xml_valid_ctxt" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__xml_valid_ctxt" kindref="compound">_xmlValidCtxt</ref><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userData;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>user<sp/>specific<sp/>data<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlValidityErrorFunc<sp/>error;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>callback<sp/>in<sp/>case<sp/>of<sp/>errors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlValidityWarningFunc<sp/>warning;<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>callback<sp/>in<sp/>case<sp/>of<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Node<sp/>analysis<sp/>stack<sp/>used<sp/>when<sp/>validating<sp/>within<sp/>entities<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__node" kindref="compound">node</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>parsed<sp/>Node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeNr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Depth<sp/>of<sp/>the<sp/>parsing<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeMax;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Max<sp/>depth<sp/>of<sp/>the<sp/>parsing<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*nodeTab;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>array<sp/>of<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>finishDtd;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>finished<sp/>validating<sp/>the<sp/>Dtd<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>document<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>temporary<sp/>validity<sp/>check<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>state<sp/>state<sp/>used<sp/>for<sp/>non-determinist<sp/>content<sp/>validation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlValidState<sp/><sp/><sp/><sp/><sp/>*vstate;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vstateNr;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Depth<sp/>of<sp/>the<sp/>validation<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vstateMax;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Max<sp/>depth<sp/>of<sp/>the<sp/>validation<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlValidState<sp/><sp/><sp/><sp/><sp/>*vstateTab;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>array<sp/>of<sp/>validation<sp/>states<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_REGEXP_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlAutomataPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>am;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>automata<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlAutomataStatePtr<sp/><sp/><sp/><sp/><ref refid="structstate" kindref="compound">state</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>used<sp/>to<sp/>build<sp/>the<sp/>automata<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*am;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*state;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>ALL<sp/>notation<sp/>declarations<sp/>are<sp/>stored<sp/>in<sp/>a<sp/>table.</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>There<sp/>is<sp/>one<sp/>table<sp/>per<sp/>DTD.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_xmlHashTable<sp/>xmlNotationTable;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>xmlNotationTable<sp/>*xmlNotationTablePtr;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/>ALL<sp/>element<sp/>declarations<sp/>are<sp/>stored<sp/>in<sp/>a<sp/>table.</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>There<sp/>is<sp/>one<sp/>table<sp/>per<sp/>DTD.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_xmlHashTable<sp/>xmlElementTable;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>xmlElementTable<sp/>*xmlElementTablePtr;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/>ALL<sp/>attribute<sp/>declarations<sp/>are<sp/>stored<sp/>in<sp/>a<sp/>table.</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>There<sp/>is<sp/>one<sp/>table<sp/>per<sp/>DTD.</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_xmlHashTable<sp/>xmlAttributeTable;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>xmlAttributeTable<sp/>*xmlAttributeTablePtr;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>ALL<sp/>IDs<sp/>attributes<sp/>are<sp/>stored<sp/>in<sp/>a<sp/>table.</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>There<sp/>is<sp/>one<sp/>table<sp/>per<sp/>document.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_xmlHashTable<sp/>xmlIDTable;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>xmlIDTable<sp/>*xmlIDTablePtr;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/>ALL<sp/>Refs<sp/>attributes<sp/>are<sp/>stored<sp/>in<sp/>a<sp/>table.</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/>There<sp/>is<sp/>one<sp/>table<sp/>per<sp/>document.</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_xmlHashTable<sp/>xmlRefTable;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>xmlRefTable<sp/>*xmlRefTablePtr;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Notation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_notation" kindref="compound">xmlNotationPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAddNotationDecl<sp/><sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref><sp/>dtd,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*PublicID,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*SystemID);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_TREE_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">XMLPUBFUN<sp/>xmlNotationTablePtr<sp/>XMLCALL</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCopyNotationTable<sp/><sp/><sp/><sp/>(xmlNotationTablePtr<sp/>table);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_TREE_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFreeNotationTable<sp/><sp/><sp/><sp/>(xmlNotationTablePtr<sp/>table);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_OUTPUT_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlDumpNotationDecl<sp/>(<ref refid="struct__xml_buffer" kindref="compound">xmlBufferPtr</ref><sp/>buf,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_notation" kindref="compound">xmlNotationPtr</ref><sp/>nota);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlDumpNotationTable<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_buffer" kindref="compound">xmlBufferPtr</ref><sp/>buf,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNotationTablePtr<sp/>table);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_OUTPUT_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Element<sp/>Content<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>the<sp/>non<sp/>Doc<sp/>version<sp/>are<sp/>being<sp/>deprecated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNewElementContent<sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlElementContentType<sp/>type);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCopyElementContent<sp/><sp/><sp/>(<ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref><sp/>content);</highlight></codeline>
<codeline lineno="181"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFreeElementContent<sp/><sp/><sp/>(<ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref><sp/>cur);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>the<sp/>new<sp/>versions<sp/>with<sp/>doc<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNewDocElementContent<sp/>(<ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlElementContentType<sp/>type);</highlight></codeline>
<codeline lineno="188"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCopyDocElementContent(<ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref><sp/>content);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFreeDocElementContent(<ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref><sp/>cur);</highlight></codeline>
<codeline lineno="194"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSnprintfElementContent(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref><sp/>content,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>englob);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_OUTPUT_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>DEPRECATED<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSprintfElementContent(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref><sp/>content,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>englob);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_OUTPUT_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>DEPRECATED<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_element" kindref="compound">xmlElementPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAddElementDecl<sp/><sp/><sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref><sp/>dtd,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlElementTypeVal<sp/>type,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref><sp/>content);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_TREE_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">XMLPUBFUN<sp/>xmlElementTablePtr<sp/>XMLCALL</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCopyElementTable<sp/>(xmlElementTablePtr<sp/>table);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_TREE_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFreeElementTable<sp/>(xmlElementTablePtr<sp/>table);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_OUTPUT_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlDumpElementTable<sp/>(<ref refid="struct__xml_buffer" kindref="compound">xmlBufferPtr</ref><sp/>buf,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlElementTablePtr<sp/>table);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlDumpElementDecl<sp/><sp/>(<ref refid="struct__xml_buffer" kindref="compound">xmlBufferPtr</ref><sp/>buf,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_element" kindref="compound">xmlElementPtr</ref><sp/>elem);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_OUTPUT_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Enumeration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_enumeration" kindref="compound">xmlEnumerationPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCreateEnumeration<sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name);</highlight></codeline>
<codeline lineno="233"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFreeEnumeration<sp/><sp/>(<ref refid="struct__xml_enumeration" kindref="compound">xmlEnumerationPtr</ref><sp/>cur);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_TREE_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_enumeration" kindref="compound">xmlEnumerationPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCopyEnumeration<sp/><sp/>(<ref refid="struct__xml_enumeration" kindref="compound">xmlEnumerationPtr</ref><sp/>cur);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_TREE_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Attribute<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_attribute" kindref="compound">xmlAttributePtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAddAttributeDecl<sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref><sp/>dtd,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*elem,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*ns,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttributeType<sp/>type,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttributeDefault<sp/>def,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*defaultValue,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_enumeration" kindref="compound">xmlEnumerationPtr</ref><sp/>tree);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_TREE_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">XMLPUBFUN<sp/>xmlAttributeTablePtr<sp/>XMLCALL</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCopyAttributeTable<sp/><sp/>(xmlAttributeTablePtr<sp/>table);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_TREE_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFreeAttributeTable<sp/><sp/>(xmlAttributeTablePtr<sp/>table);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_OUTPUT_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlDumpAttributeTable<sp/><sp/>(<ref refid="struct__xml_buffer" kindref="compound">xmlBufferPtr</ref><sp/>buf,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAttributeTablePtr<sp/>table);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlDumpAttributeDecl<sp/><sp/><sp/>(<ref refid="struct__xml_buffer" kindref="compound">xmlBufferPtr</ref><sp/>buf,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_attribute" kindref="compound">xmlAttributePtr</ref><sp/>attr);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_OUTPUT_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>IDs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_i_d" kindref="compound">xmlIDPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAddID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*value,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_attr" kindref="compound">xmlAttrPtr</ref><sp/>attr);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFreeIDTable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(xmlIDTablePtr<sp/>table);</highlight></codeline>
<codeline lineno="274"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_attr" kindref="compound">xmlAttrPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlGetID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*ID);</highlight></codeline>
<codeline lineno="277"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlIsID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>elem,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_attr" kindref="compound">xmlAttrPtr</ref><sp/>attr);</highlight></codeline>
<codeline lineno="281"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlRemoveID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_attr" kindref="compound">xmlAttrPtr</ref><sp/>attr);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>IDREFs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_ref" kindref="compound">xmlRefPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlAddRef<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*value,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_attr" kindref="compound">xmlAttrPtr</ref><sp/>attr);</highlight></codeline>
<codeline lineno="291"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFreeRefTable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(xmlRefTablePtr<sp/>table);</highlight></codeline>
<codeline lineno="293"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlIsRef<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>elem,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_attr" kindref="compound">xmlAttrPtr</ref><sp/>attr);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlRemoveRef<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_attr" kindref="compound">xmlAttrPtr</ref><sp/>attr);</highlight></codeline>
<codeline lineno="300"><highlight class="normal">XMLPUBFUN<sp/>xmlListPtr<sp/>XMLCALL</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlGetRefs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*ID);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor">#ifdef<sp/>LIBXML_VALID_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Allocate/Release<sp/>Validation<sp/>Contexts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal">XMLPUBFUN<sp/>xmlValidCtxtPtr<sp/>XMLCALL</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNewValidCtxt(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFreeValidCtxt(xmlValidCtxtPtr);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidateRoot<sp/><sp/><sp/><sp/><sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc);</highlight></codeline>
<codeline lineno="317"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidateElementDecl<sp/><sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_element" kindref="compound">xmlElementPtr</ref><sp/>elem);</highlight></codeline>
<codeline lineno="321"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidNormalizeAttributeValue(<ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>elem,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*value);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidCtxtNormalizeAttributeValue(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>elem,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*value);</highlight></codeline>
<codeline lineno="332"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidateAttributeDecl(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_attribute" kindref="compound">xmlAttributePtr</ref><sp/>attr);</highlight></codeline>
<codeline lineno="336"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidateAttributeValue(xmlAttributeType<sp/>type,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*value);</highlight></codeline>
<codeline lineno="339"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidateNotationDecl<sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_notation" kindref="compound">xmlNotationPtr</ref><sp/>nota);</highlight></codeline>
<codeline lineno="343"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidateDtd<sp/><sp/><sp/><sp/><sp/><sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref><sp/>dtd);</highlight></codeline>
<codeline lineno="347"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidateDtdFinal<sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc);</highlight></codeline>
<codeline lineno="350"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidateDocument<sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc);</highlight></codeline>
<codeline lineno="353"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidateElement<sp/><sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>elem);</highlight></codeline>
<codeline lineno="357"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidateOneElement<sp/><sp/><sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>elem);</highlight></codeline>
<codeline lineno="361"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidateOneAttribute<sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>elem,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_attr" kindref="compound">xmlAttrPtr</ref><sp/>attr,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*value);</highlight></codeline>
<codeline lineno="367"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidateOneNamespace<sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>elem,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*prefix,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_ns" kindref="compound">xmlNsPtr</ref><sp/>ns,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*value);</highlight></codeline>
<codeline lineno="374"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidateDocumentFinal(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_VALID_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LIBXML_VALID_ENABLED)<sp/>||<sp/>defined(LIBXML_SCHEMAS_ENABLED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidateNotationUse<sp/><sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*notationName);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_VALID_ENABLED<sp/>or<sp/>LIBXML_SCHEMAS_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlIsMixedElement<sp/><sp/><sp/>(<ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name);</highlight></codeline>
<codeline lineno="389"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_attribute" kindref="compound">xmlAttributePtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlGetDtdAttrDesc<sp/><sp/><sp/>(<ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref><sp/>dtd,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*elem,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name);</highlight></codeline>
<codeline lineno="393"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_attribute" kindref="compound">xmlAttributePtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlGetDtdQAttrDesc<sp/><sp/>(<ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref><sp/>dtd,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*elem,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*prefix);</highlight></codeline>
<codeline lineno="398"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_notation" kindref="compound">xmlNotationPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlGetDtdNotationDesc<sp/><sp/><sp/>(<ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref><sp/>dtd,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name);</highlight></codeline>
<codeline lineno="401"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_element" kindref="compound">xmlElementPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlGetDtdQElementDesc<sp/><sp/><sp/>(<ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref><sp/>dtd,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*prefix);</highlight></codeline>
<codeline lineno="405"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_element" kindref="compound">xmlElementPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlGetDtdElementDesc<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_dtd" kindref="compound">xmlDtdPtr</ref><sp/>dtd,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_VALID_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidGetPotentialChildren(<ref refid="struct__xml_element_content" kindref="compound">xmlElementContent</ref><sp/>*ctree,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>**names,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidGetValidElements(<ref refid="struct__xml_node" kindref="compound">xmlNode</ref><sp/>*prev,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNode</ref><sp/>*next,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>**names,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max);</highlight></codeline>
<codeline lineno="422"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidateNameValue<sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*value);</highlight></codeline>
<codeline lineno="424"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidateNamesValue<sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*value);</highlight></codeline>
<codeline lineno="426"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidateNmtokenValue<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*value);</highlight></codeline>
<codeline lineno="428"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidateNmtokensValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*value);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_REGEXP_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*<sp/>Validation<sp/>based<sp/>on<sp/>the<sp/>regexp<sp/>support</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidBuildContentModel(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_element" kindref="compound">xmlElementPtr</ref><sp/>elem);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidatePushElement<sp/><sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>elem,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*qname);</highlight></codeline>
<codeline lineno="444"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidatePushCData<sp/><sp/><sp/><sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*data,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="448"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlValidatePopElement<sp/><sp/><sp/>(xmlValidCtxtPtr<sp/>ctxt,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_doc" kindref="compound">xmlDocPtr</ref><sp/>doc,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>elem,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*qname);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_REGEXP_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_VALID_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__XML_VALID_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/valid.h"/>
  </compounddef>
</doxygen>
