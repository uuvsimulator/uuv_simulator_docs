<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="parser_internals_8h" kind="file" language="C++">
    <compoundname>parserInternals.h</compoundname>
    <includes refid="xmlversion_8h" local="no">libxml/xmlversion.h</includes>
    <includes refid="parser_8h" local="no">libxml/parser.h</includes>
    <includes refid="_h_t_m_lparser_8h" local="no">libxml/HTMLparser.h</includes>
    <includes refid="chvalid_8h" local="no">libxml/chvalid.h</includes>
    <incdepgraph>
      <node id="910">
        <label>stdarg.h</label>
      </node>
      <node id="915">
        <label>libxml/xmlregexp.h</label>
        <link refid="xmlregexp_8h_source"/>
        <childnode refid="907" relation="include">
        </childnode>
      </node>
      <node id="922">
        <label>libxml/xlink.h</label>
        <link refid="xlink_8h_source"/>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="911" relation="include">
        </childnode>
      </node>
      <node id="921">
        <label>stdlib.h</label>
      </node>
      <node id="931">
        <label>libxml/HTMLparser.h</label>
        <link refid="_h_t_m_lparser_8h_source"/>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="909" relation="include">
        </childnode>
      </node>
      <node id="928">
        <label>libxml/entities.h</label>
        <link refid="entities_8h_source"/>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="911" relation="include">
        </childnode>
      </node>
      <node id="924">
        <label>libxml/hash.h</label>
        <link refid="hash_8h_source"/>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="909" relation="include">
        </childnode>
        <childnode refid="923" relation="include">
        </childnode>
      </node>
      <node id="930">
        <label>libxml/xmlIO.h</label>
        <link refid="xml_i_o_8h_source"/>
        <childnode refid="912" relation="include">
        </childnode>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="918" relation="include">
        </childnode>
        <childnode refid="911" relation="include">
        </childnode>
        <childnode refid="909" relation="include">
        </childnode>
        <childnode refid="929" relation="include">
        </childnode>
      </node>
      <node id="932">
        <label>libxml/chvalid.h</label>
        <link refid="chvalid_8h_source"/>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="914" relation="include">
        </childnode>
      </node>
      <node id="923">
        <label>libxml/dict.h</label>
        <link refid="dict_8h_source"/>
        <childnode refid="913" relation="include">
        </childnode>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="911" relation="include">
        </childnode>
      </node>
      <node id="913">
        <label>limits.h</label>
      </node>
      <node id="926">
        <label>libxml/list.h</label>
        <link refid="list_8h_source"/>
        <childnode refid="907" relation="include">
        </childnode>
      </node>
      <node id="918">
        <label>libxml/globals.h</label>
        <link refid="globals_8h_source"/>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="909" relation="include">
        </childnode>
        <childnode refid="919" relation="include">
        </childnode>
        <childnode refid="920" relation="include">
        </childnode>
        <childnode refid="916" relation="include">
        </childnode>
        <childnode refid="917" relation="include">
        </childnode>
      </node>
      <node id="916">
        <label>libxml/xmlmemory.h</label>
        <link refid="xmlmemory_8h_source"/>
        <childnode refid="912" relation="include">
        </childnode>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="917" relation="include">
        </childnode>
        <childnode refid="918" relation="include">
        </childnode>
      </node>
      <node id="907">
        <label>libxml/xmlversion.h</label>
        <link refid="xmlversion_8h_source"/>
        <childnode refid="908" relation="include">
        </childnode>
      </node>
      <node id="914">
        <label>libxml/xmlstring.h</label>
        <link refid="xmlstring_8h_source"/>
        <childnode refid="910" relation="include">
        </childnode>
        <childnode refid="907" relation="include">
        </childnode>
      </node>
      <node id="909">
        <label>libxml/parser.h</label>
        <link refid="parser_8h_source"/>
        <childnode refid="910" relation="include">
        </childnode>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="911" relation="include">
        </childnode>
        <childnode refid="923" relation="include">
        </childnode>
        <childnode refid="924" relation="include">
        </childnode>
        <childnode refid="925" relation="include">
        </childnode>
        <childnode refid="928" relation="include">
        </childnode>
        <childnode refid="919" relation="include">
        </childnode>
        <childnode refid="914" relation="include">
        </childnode>
        <childnode refid="929" relation="include">
        </childnode>
        <childnode refid="930" relation="include">
        </childnode>
        <childnode refid="918" relation="include">
        </childnode>
      </node>
      <node id="911">
        <label>libxml/tree.h</label>
        <link refid="tree_8h_source"/>
        <childnode refid="912" relation="include">
        </childnode>
        <childnode refid="913" relation="include">
        </childnode>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="914" relation="include">
        </childnode>
        <childnode refid="915" relation="include">
        </childnode>
        <childnode refid="916" relation="include">
        </childnode>
      </node>
      <node id="929">
        <label>libxml/encoding.h</label>
        <link refid="encoding_8h_source"/>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="911" relation="include">
        </childnode>
      </node>
      <node id="925">
        <label>libxml/valid.h</label>
        <link refid="valid_8h_source"/>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="919" relation="include">
        </childnode>
        <childnode refid="911" relation="include">
        </childnode>
        <childnode refid="926" relation="include">
        </childnode>
        <childnode refid="927" relation="include">
        </childnode>
        <childnode refid="915" relation="include">
        </childnode>
      </node>
      <node id="920">
        <label>libxml/SAX2.h</label>
        <link refid="_s_a_x2_8h_source"/>
        <childnode refid="912" relation="include">
        </childnode>
        <childnode refid="921" relation="include">
        </childnode>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="909" relation="include">
        </childnode>
        <childnode refid="922" relation="include">
        </childnode>
      </node>
      <node id="906">
        <label>venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h</label>
        <link refid="parser_internals_8h"/>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="909" relation="include">
        </childnode>
        <childnode refid="931" relation="include">
        </childnode>
        <childnode refid="932" relation="include">
        </childnode>
      </node>
      <node id="917">
        <label>libxml/threads.h</label>
        <link refid="threads_8h_source"/>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="918" relation="include">
        </childnode>
      </node>
      <node id="927">
        <label>libxml/xmlautomata.h</label>
        <link refid="xmlautomata_8h_source"/>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="911" relation="include">
        </childnode>
      </node>
      <node id="908">
        <label>libxml/xmlexports.h</label>
        <link refid="xmlexports_8h_source"/>
      </node>
      <node id="912">
        <label>stdio.h</label>
      </node>
      <node id="919">
        <label>libxml/xmlerror.h</label>
        <link refid="xmlerror_8h_source"/>
        <childnode refid="909" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="parser_internals_8h_1a0c064bce364a9a6ca3d838e9c1e2f6a1" prot="public" static="no">
        <name>XML_MAX_TEXT_LENGTH</name>
        <initializer>10000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XML_MAX_TEXT_LENGTH:</para><para>Maximum size allowed for a single text node when building a tree. This is not a limitation of the parser but a safety boundary feature, use XML_PARSE_HUGE option to override it. Introduced in 2.9.0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="41" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a1efc62664d303d1ffa8a77ecc8c92ece" prot="public" static="no">
        <name>XML_MAX_NAME_LENGTH</name>
        <initializer>50000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XML_MAX_NAME_LENGTH:</para><para>Maximum size allowed for a markup identitier This is not a limitation of the parser but a safety boundary feature, use XML_PARSE_HUGE option to override it. Note that with the use of parsing dictionaries overriding the limit may result in more runtime memory usage in face of "unfriendly&apos; content Introduced in 2.9.0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="53" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1ab07c3163d8fd766683ef3183acbca00e" prot="public" static="no">
        <name>XML_MAX_DICTIONARY_LIMIT</name>
        <initializer>10000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XML_MAX_DICTIONARY_LIMIT:</para><para>Maximum size allowed by the parser for a dictionary by default This is not a limitation of the parser but a safety boundary feature, use XML_PARSE_HUGE option to override it. Introduced in 2.9.0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="63" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a8aa102b16afa66ca3bdcd68cb8a916eb" prot="public" static="no">
        <name>XML_MAX_LOOKUP_LIMIT</name>
        <initializer>10000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XML_MAX_LOOKUP_LIMIT:</para><para>Maximum size allowed by the parser for ahead lookup This is an upper boundary enforced by the parser to avoid bad behaviour on "unfriendly&apos; content Introduced in 2.9.0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="73" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a2defc865652d80bef86a33c7c4f79b33" prot="public" static="no">
        <name>XML_MAX_NAMELEN</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XML_MAX_NAMELEN:</para><para>Identifiers can be longer, but this will be more costly at runtime. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="81" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1adc18aee534e88c332e9e7a6c75d42192" prot="public" static="no">
        <name>INPUT_CHUNK</name>
        <initializer>250</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>INPUT_CHUNK:</para><para>The parser tries to always have that amount of input ready. One of the point is providing context when reporting errors. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="89" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a80edf6541517fb9400990104abca70de" prot="public" static="no">
        <name>IS_BYTE_CHAR</name>
        <param><defname>c</defname></param>
        <initializer>xmlIsChar_ch(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_BYTE_CHAR: <computeroutput></computeroutput>: an byte value (int)</para><para>Macro to check the following production in the XML spec:</para><para>[2] Char ::= #x9 | #xA | #xD | [#x20...] any byte character in the accepted range </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="105" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a38795b111f9b9a22362bd8dab83db1a3" prot="public" static="no">
        <name>IS_CHAR</name>
        <param><defname>c</defname></param>
        <initializer>xmlIsCharQ(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_CHAR: <computeroutput></computeroutput>: an UNICODE value (int)</para><para>Macro to check the following production in the XML spec:</para><para>[2] Char ::= #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF] any Unicode character, excluding the surrogate blocks, FFFE, and FFFF. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="117" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1af8273a7c34a1a2a7176c8121202f8052" prot="public" static="no">
        <name>IS_CHAR_CH</name>
        <param><defname>c</defname></param>
        <initializer>xmlIsChar_ch(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_CHAR_CH: <computeroutput></computeroutput>: an xmlChar (usually an unsigned char)</para><para>Behaves like IS_CHAR on single-byte value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="125" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1acb214bdab1e9d34e07c42e3334a0d7cb" prot="public" static="no">
        <name>IS_BLANK</name>
        <param><defname>c</defname></param>
        <initializer>xmlIsBlankQ(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_BLANK: <computeroutput></computeroutput>: an UNICODE value (int)</para><para>Macro to check the following production in the XML spec:</para><para>[3] S ::= (#x20 | #x9 | #xD | #xA)+ </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="135" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1afdafd786dd8925a841d972b71acc4c5c" prot="public" static="no">
        <name>IS_BLANK_CH</name>
        <param><defname>c</defname></param>
        <initializer>xmlIsBlank_ch(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_BLANK_CH: <computeroutput></computeroutput>: an xmlChar value (normally unsigned char)</para><para>Behaviour same as IS_BLANK </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="143" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1aee4f51e55b289d44e5c6b089a064b525" prot="public" static="no">
        <name>IS_BASECHAR</name>
        <param><defname>c</defname></param>
        <initializer>xmlIsBaseCharQ(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_BASECHAR: <computeroutput></computeroutput>: an UNICODE value (int)</para><para>Macro to check the following production in the XML spec:</para><para>[85] BaseChar ::= ... long list see REC ... </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="153" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a307c9de47db5ab41e0731cfd21c51e1d" prot="public" static="no">
        <name>IS_DIGIT</name>
        <param><defname>c</defname></param>
        <initializer>xmlIsDigitQ(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_DIGIT: <computeroutput></computeroutput>: an UNICODE value (int)</para><para>Macro to check the following production in the XML spec:</para><para>[88] Digit ::= ... long list see REC ... </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="163" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1ab5e0526f69defe25d3b59d85a75c4322" prot="public" static="no">
        <name>IS_DIGIT_CH</name>
        <param><defname>c</defname></param>
        <initializer>xmlIsDigit_ch(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_DIGIT_CH: <computeroutput></computeroutput>: an xmlChar value (usually an unsigned char)</para><para>Behaves like IS_DIGIT but with a single byte argument </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="171" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a0b07fb0afe317f869bc7fe377ece0dda" prot="public" static="no">
        <name>IS_COMBINING</name>
        <param><defname>c</defname></param>
        <initializer>xmlIsCombiningQ(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_COMBINING: <computeroutput></computeroutput>: an UNICODE value (int)</para><para>Macro to check the following production in the XML spec:</para><para>[87] CombiningChar ::= ... long list see REC ... </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="181" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1af50b89e958660751c017f9e941cb8554" prot="public" static="no">
        <name>IS_COMBINING_CH</name>
        <param><defname>c</defname></param>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_COMBINING_CH: <computeroutput></computeroutput>: an xmlChar (usually an unsigned char)</para><para>Always false (all combining chars &gt; 0xff) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="189" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a9099556f6e6b0a57540ca9847123a647" prot="public" static="no">
        <name>IS_EXTENDER</name>
        <param><defname>c</defname></param>
        <initializer>xmlIsExtenderQ(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_EXTENDER: <computeroutput></computeroutput>: an UNICODE value (int)</para><para>Macro to check the following production in the XML spec:</para><para>[89] Extender ::= #x00B7 | #x02D0 | #x02D1 | #x0387 | #x0640 | #x0E46 | #x0EC6 | #x3005 | [#x3031-#x3035] | [#x309D-#x309E] | [#x30FC-#x30FE] </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="202" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1adfb75989552b31c626e7c26396a05430" prot="public" static="no">
        <name>IS_EXTENDER_CH</name>
        <param><defname>c</defname></param>
        <initializer>xmlIsExtender_ch(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_EXTENDER_CH: <computeroutput></computeroutput>: an xmlChar value (usually an unsigned char)</para><para>Behaves like IS_EXTENDER but with a single-byte argument </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="210" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a53d6c21fe1807cd08ed23ba7c30e1a2a" prot="public" static="no">
        <name>IS_IDEOGRAPHIC</name>
        <param><defname>c</defname></param>
        <initializer>xmlIsIdeographicQ(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_IDEOGRAPHIC: <computeroutput></computeroutput>: an UNICODE value (int)</para><para>Macro to check the following production in the XML spec:</para><para>[86] Ideographic ::= [#x4E00-#x9FA5] | #x3007 | [#x3021-#x3029] </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="221" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a98738fe58345b8b124a6b1065e0bbd06" prot="public" static="no">
        <name>IS_LETTER</name>
        <param><defname>c</defname></param>
        <initializer>(IS_BASECHAR(c) || IS_IDEOGRAPHIC(c))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_LETTER: <computeroutput></computeroutput>: an UNICODE value (int)</para><para>Macro to check the following production in the XML spec:</para><para>[84] Letter ::= BaseChar | Ideographic </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="232" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a29da8c15ad23f392d927d456f9586b0e" prot="public" static="no">
        <name>IS_LETTER_CH</name>
        <param><defname>c</defname></param>
        <initializer>xmlIsBaseChar_ch(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_LETTER_CH: <computeroutput></computeroutput>: an xmlChar value (normally unsigned char)</para><para>Macro behaves like IS_LETTER, but only check base chars </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="241" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1ae32cbd6af263ea78fdcc949c17542acb" prot="public" static="no">
        <name>IS_ASCII_LETTER</name>
        <param><defname>c</defname></param>
        <initializer>(((0x41 &lt;= (c)) &amp;&amp; ((c) &lt;= 0x5a)) || \
				 ((0x61 &lt;= (c)) &amp;&amp; ((c) &lt;= 0x7a)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_ASCII_LETTER: <computeroutput></computeroutput>: an xmlChar value</para><para>Macro to check [a-zA-Z] </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="250" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a6091ee62c38b7941890146c27e2766a9" prot="public" static="no">
        <name>IS_ASCII_DIGIT</name>
        <param><defname>c</defname></param>
        <initializer>((0x30 &lt;= (c)) &amp;&amp; ((c) &lt;= 0x39))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_ASCII_DIGIT: <computeroutput></computeroutput>: an xmlChar value</para><para>Macro to check [0-9] </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="260" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a7bba79eecb50ef2dab76dd06a6f95f56" prot="public" static="no">
        <name>IS_PUBIDCHAR</name>
        <param><defname>c</defname></param>
        <initializer>xmlIsPubidCharQ(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_PUBIDCHAR: <computeroutput></computeroutput>: an UNICODE value (int)</para><para>Macro to check the following production in the XML spec:</para><para>[13] PubidChar ::= #x20 | #xD | #xA | [a-zA-Z0-9] | [-&apos;()+,./:=?;!*#$_%] </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="271" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a565a6765d0c5b10b11c1fbc56284e748" prot="public" static="no">
        <name>IS_PUBIDCHAR_CH</name>
        <param><defname>c</defname></param>
        <initializer>xmlIsPubidChar_ch(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IS_PUBIDCHAR_CH: <computeroutput></computeroutput>: an xmlChar value (normally unsigned char)</para><para>Same as IS_PUBIDCHAR but for single-byte value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="279" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1addb5dbb688c429a1be8f2cb5c5b7c936" prot="public" static="no">
        <name>SKIP_EOL</name>
        <param><defname>p</defname></param>
        <initializer>if (*(p) == 0x13) { p++ ; if (*(p) == 0x10) p++; }			\
    if (*(p) == 0x10) { p++ ; if (*(p) == 0x13) p++; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SKIP_EOL: <computeroutput></computeroutput>: and UTF8 string pointer</para><para>Skips the end of line chars. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="287" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a3b2d7f97d3052ca52e0ed662331b805f" prot="public" static="no">
        <name>MOVETO_ENDTAG</name>
        <param><defname>p</defname></param>
        <initializer>while ((*p) &amp;&amp; (*(p) != &apos;&gt;&apos;)) (p)++</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MOVETO_ENDTAG: <computeroutput></computeroutput>: and UTF8 string pointer</para><para>Skips to the next &apos;&gt;&apos; char. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="297" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a810c655c6388c2b32d842a2b9997fee4" prot="public" static="no">
        <name>MOVETO_STARTTAG</name>
        <param><defname>p</defname></param>
        <initializer>while ((*p) &amp;&amp; (*(p) != &apos;&lt;&apos;)) (p)++</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MOVETO_STARTTAG: <computeroutput></computeroutput>: and UTF8 string pointer</para><para>Skips to the next &apos;&lt;&apos; char. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="306" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1ac2a949fa905713acc31cdc13b3d8dc89" prot="public" static="no">
        <name>XML_SUBSTITUTE_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XML_SUBSTITUTE_NONE:</para><para>If no entities need to be substituted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="501" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a1be60c977e38fa0fc69b28e98c587197" prot="public" static="no">
        <name>XML_SUBSTITUTE_REF</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XML_SUBSTITUTE_REF:</para><para>Whether general entities need to be substituted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="507" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a17518f75a806f3475699dce6eb92d2d5" prot="public" static="no">
        <name>XML_SUBSTITUTE_PEREF</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XML_SUBSTITUTE_PEREF:</para><para>Whether parameter entities need to be substituted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="513" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="parser_internals_8h_1a95ab0d16d7f5a0cc8a74b757b49a6e2f" prot="public" static="no">
        <name>XML_SUBSTITUTE_BOTH</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XML_SUBSTITUTE_BOTH:</para><para>Both general and parameter entities need to be substituted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="519" column="9" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="519" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="parser_internals_8h_1a17755aed6ebd03ae9136b717812947eb" prot="public" static="no" mutable="no">
        <type>XMLPUBVAR unsigned int</type>
        <definition>XMLPUBVAR unsigned int xmlParserMaxDepth</definition>
        <argsstring></argsstring>
        <name>xmlParserMaxDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>xmlParserMaxDepth:</para><para>arbitrary depth limit for the XML documents that we allow to process. This is not a limitation of the parser but a safety boundary feature, use XML_PARSE_HUGE option to override it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="31" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="parser_internals_8h_1af3d6d0ee4a691514b8370897b4c67c95" prot="public" static="no" mutable="no">
        <type>XMLPUBVAR const xmlChar</type>
        <definition>XMLPUBVAR const xmlChar xmlStringText[]</definition>
        <argsstring>[]</argsstring>
        <name>xmlStringText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Global variables used for predefined strings. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="312" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="parser_internals_8h_1a7bf9b51d1b37ff9983d98e4bbf707495" prot="public" static="no" mutable="no">
        <type>XMLPUBVAR const xmlChar</type>
        <definition>XMLPUBVAR const xmlChar xmlStringTextNoenc[]</definition>
        <argsstring>[]</argsstring>
        <name>xmlStringTextNoenc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="313" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="parser_internals_8h_1a13420b9699bc083cdf8fb64453bb3a7f" prot="public" static="no" mutable="no">
        <type>XMLPUBVAR const xmlChar</type>
        <definition>XMLPUBVAR const xmlChar xmlStringComment[]</definition>
        <argsstring>[]</argsstring>
        <name>xmlStringComment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="314" column="1" bodyfile="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="parser_internals_8h_1ad18eafcd54cea9ca22efd5a4050e7b1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlIsLetter</definition>
        <argsstring>(int c)</argsstring>
        <name>xmlIsLetter</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="319" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ab5cf2decec33221c7448264e69797395" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlParserCtxtPtr XMLCALL xmlCreateFileParserCtxt</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>xmlCreateFileParserCtxt</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parser context. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="325" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ae390ef9ef8ff75dbb879c86f85958104" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlParserCtxtPtr XMLCALL xmlCreateURLParserCtxt</definition>
        <argsstring>(const char *filename, int options)</argsstring>
        <name>xmlCreateURLParserCtxt</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="327" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1af5d840f0b84a8328853716a83caf314e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlParserCtxtPtr XMLCALL xmlCreateMemoryParserCtxt</definition>
        <argsstring>(const char *buffer, int size)</argsstring>
        <name>xmlCreateMemoryParserCtxt</name>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="330" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a3822e86c8c8ff58e388afcc4592d8426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlParserCtxtPtr XMLCALL xmlCreateEntityParserCtxt</definition>
        <argsstring>(const xmlChar *URL, const xmlChar *ID, const xmlChar *base)</argsstring>
        <name>xmlCreateEntityParserCtxt</name>
        <param>
          <type>const xmlChar *</type>
          <declname>URL</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>ID</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="333" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a6cc56e38d8625d1317c483a67b28fb83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlSwitchEncoding</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, xmlCharEncoding enc)</argsstring>
        <name>xmlSwitchEncoding</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>xmlCharEncoding</type>
          <declname>enc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1aa93a86bd76db8bd07140e2521bc544a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlSwitchToEncoding</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, xmlCharEncodingHandlerPtr handler)</argsstring>
        <name>xmlSwitchToEncoding</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_char_encoding_handler" kindref="compound">xmlCharEncodingHandlerPtr</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="340" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ad5d9b4d27d95fbdfde8c5e13ae8c8143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlSwitchInputEncoding</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, xmlParserInputPtr input, xmlCharEncodingHandlerPtr handler)</argsstring>
        <name>xmlSwitchInputEncoding</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref></type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_char_encoding_handler" kindref="compound">xmlCharEncodingHandlerPtr</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="343" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a4767ddd9e487f4604587bc6690b3ecdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlParserInputPtr XMLCALL xmlNewStringInputStream</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, const xmlChar *buffer)</argsstring>
        <name>xmlNewStringInputStream</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Input Streams. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a8e270f58ec33e9c8d23060e48e5a6e54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlParserInputPtr XMLCALL xmlNewEntityInputStream</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, xmlEntityPtr entity)</argsstring>
        <name>xmlNewEntityInputStream</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_entity" kindref="compound">xmlEntityPtr</ref></type>
          <declname>entity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="364" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a8139727b995d3a39d6ff6edb6b74fb9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlPushInput</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, xmlParserInputPtr input)</argsstring>
        <name>xmlPushInput</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="367" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a64f1717a2460afa0b0db0a26f21179fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN xmlChar XMLCALL</type>
        <definition>XMLPUBFUN xmlChar XMLCALL xmlPopInput</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlPopInput</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="370" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1af89f69c7ebd1e26b3dc3caa83b4cf404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlFreeInputStream</definition>
        <argsstring>(xmlParserInputPtr input)</argsstring>
        <name>xmlFreeInputStream</name>
        <param>
          <type><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="372" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1aa812e373908d2bde1d4efac4b9c21f3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlParserInputPtr XMLCALL xmlNewInputFromFile</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, const char *filename)</argsstring>
        <name>xmlNewInputFromFile</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a2b3bbb60603f7473cecda04ce4df1120" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlParserInputPtr XMLCALL xmlNewInputStream</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlNewInputStream</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="377" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a7bc0792f7aacc14d23ac26371e9aa771" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN xmlChar *XMLCALL</type>
        <definition>XMLPUBFUN xmlChar* XMLCALL xmlSplitQName</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, const xmlChar *name, xmlChar **prefix)</argsstring>
        <name>xmlSplitQName</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>xmlChar **</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Namespaces. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="383" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1afb2888137a86c3c8a9814a9dea64c80a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN const xmlChar *XMLCALL</type>
        <definition>XMLPUBFUN const xmlChar* XMLCALL xmlParseName</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseName</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generic production rules. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="391" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1acb0f1144562b776b8db69ba2d2d7ccc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN xmlChar *XMLCALL</type>
        <definition>XMLPUBFUN xmlChar* XMLCALL xmlParseNmtoken</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseNmtoken</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="393" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a8341b4ceb9535ec2263242b3961d4aa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN xmlChar *XMLCALL</type>
        <definition>XMLPUBFUN xmlChar* XMLCALL xmlParseEntityValue</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, xmlChar **orig)</argsstring>
        <name>xmlParseEntityValue</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>xmlChar **</type>
          <declname>orig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="395" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a17d6fcce80467b640dd554e0219f3c79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN xmlChar *XMLCALL</type>
        <definition>XMLPUBFUN xmlChar* XMLCALL xmlParseAttValue</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseAttValue</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="398" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1afa48ff6223e2252188c1318c94f92731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN xmlChar *XMLCALL</type>
        <definition>XMLPUBFUN xmlChar* XMLCALL xmlParseSystemLiteral</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseSystemLiteral</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="400" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1adc8579e63ec6db087ee7781c9aa9dbd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN xmlChar *XMLCALL</type>
        <definition>XMLPUBFUN xmlChar* XMLCALL xmlParsePubidLiteral</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParsePubidLiteral</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="402" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a677850eab9c84bf2b4fad7fb0a42b725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParseCharData</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, int cdata)</argsstring>
        <name>xmlParseCharData</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="404" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a70c15ccba6908efe53c6f0168255ad97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN xmlChar *XMLCALL</type>
        <definition>XMLPUBFUN xmlChar* XMLCALL xmlParseExternalID</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, xmlChar **publicID, int strict)</argsstring>
        <name>xmlParseExternalID</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>xmlChar **</type>
          <declname>publicID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>strict</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="407" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ac5c619bf5c7cf0c05c7f70250248803c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParseComment</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseComment</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="411" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1aa7cf233a2a5f724b0232b424b1401301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN const xmlChar *XMLCALL</type>
        <definition>XMLPUBFUN const xmlChar* XMLCALL xmlParsePITarget</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParsePITarget</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="413" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ad602bc27564ac130ef66fb4d0f7e38f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParsePI</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParsePI</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="415" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ae6a4823c81e221834777df258a40558a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParseNotationDecl</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseNotationDecl</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1aaa660f37c8d1c437b1bf6f8a1899f790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParseEntityDecl</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseEntityDecl</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="419" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a234a54338d4736660c34e8663097e028" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlParseDefaultDecl</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, xmlChar **value)</argsstring>
        <name>xmlParseDefaultDecl</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>xmlChar **</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="421" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a47bb047486e79be9388243288260dee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_enumeration" kindref="compound">xmlEnumerationPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlEnumerationPtr XMLCALL xmlParseNotationType</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseNotationType</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="424" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ac37f918ffd3422cb070d29aa6f8ec77b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_enumeration" kindref="compound">xmlEnumerationPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlEnumerationPtr XMLCALL xmlParseEnumerationType</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseEnumerationType</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="426" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a69e9d93f290ebc2e095586afb91ebe03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlParseEnumeratedType</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, xmlEnumerationPtr *tree)</argsstring>
        <name>xmlParseEnumeratedType</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_enumeration" kindref="compound">xmlEnumerationPtr</ref> *</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="428" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a2f385104b752333b53090afd455fb382" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlParseAttributeType</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, xmlEnumerationPtr *tree)</argsstring>
        <name>xmlParseAttributeType</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_enumeration" kindref="compound">xmlEnumerationPtr</ref> *</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="431" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a00f883316313d4de5046ed2a44c1ccdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParseAttributeListDecl</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseAttributeListDecl</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="434" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a92226fcebdb0144b5616d423d65ae032" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlElementContentPtr XMLCALL xmlParseElementMixedContentDecl</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, int inputchk)</argsstring>
        <name>xmlParseElementMixedContentDecl</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputchk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="436" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a1e6cdabdb4ce7141993af4f219224f02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlElementContentPtr XMLCALL xmlParseElementChildrenContentDecl</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, int inputchk)</argsstring>
        <name>xmlParseElementChildrenContentDecl</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputchk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="440" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1afaf0441d8c06270a462c4205b8cb868b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlParseElementContentDecl</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, const xmlChar *name, xmlElementContentPtr *result)</argsstring>
        <name>xmlParseElementContentDecl</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="444" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a3a182d6324b77daac3c75715db1be66f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlParseElementDecl</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseElementDecl</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="448" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a62d5f4d86feb129e071423d84a869728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParseMarkupDecl</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseMarkupDecl</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="450" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a9da48f4adfc97230acf3cc5e571bd592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlParseCharRef</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseCharRef</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="452" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a6558fc8d725c158a6108c32908f8e0a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_entity" kindref="compound">xmlEntityPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlEntityPtr XMLCALL xmlParseEntityRef</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseEntityRef</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="454" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ad8c5084064f449bf1d79f42806ee1720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParseReference</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseReference</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="456" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a2774a6a27fdcd1df7fe026f845e5d7cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParsePEReference</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParsePEReference</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="458" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ab0086cf817a4eb9feeecd948619f7021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParseDocTypeDecl</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseDocTypeDecl</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="460" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ad5511cd988daac1264a5b91d6e8ed92f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParseCDSect</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseCDSect</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="471" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ad321e4b0ed70ed3a2ddcbe63fef11410" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParseContent</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseContent</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="473" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1aa3fba12781055f6165a084f0fa49f710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParseElement</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseElement</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="475" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a5b4b9372a0f7d6b1e4308b84369b5ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN xmlChar *XMLCALL</type>
        <definition>XMLPUBFUN xmlChar* XMLCALL xmlParseVersionNum</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseVersionNum</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="477" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a1ec83afffa11155e34ff5cdfb00d8453" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN xmlChar *XMLCALL</type>
        <definition>XMLPUBFUN xmlChar* XMLCALL xmlParseVersionInfo</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseVersionInfo</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="479" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a32cb3cc0480ffe01160f394748e15440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN xmlChar *XMLCALL</type>
        <definition>XMLPUBFUN xmlChar* XMLCALL xmlParseEncName</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseEncName</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="481" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a3575e9f21f27312dea2c57de1b18d046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN const xmlChar *XMLCALL</type>
        <definition>XMLPUBFUN const xmlChar* XMLCALL xmlParseEncodingDecl</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseEncodingDecl</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="483" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1af71e21b910c571fe0745e45eada87727" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlParseSDDecl</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseSDDecl</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="485" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ad76d667d0520c7c75fa7a2b18e27ac6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParseXMLDecl</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseXMLDecl</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="487" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ab3c0bccd133b282db478f2195fe97d69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParseTextDecl</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseTextDecl</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="489" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ad1634c53615a09ba1f150e6920320a8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParseMisc</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParseMisc</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="491" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a59274147437b87a232b60859ee0d6a00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParseExternalSubset</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, const xmlChar *ExternalID, const xmlChar *SystemID)</argsstring>
        <name>xmlParseExternalSubset</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>ExternalID</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>SystemID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="493" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a3aec6ea2b1cf6a97a626489293bc7e66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN xmlChar *XMLCALL</type>
        <definition>XMLPUBFUN xmlChar* XMLCALL xmlStringDecodeEntities</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, const xmlChar *str, int what, xmlChar end, xmlChar end2, xmlChar end3)</argsstring>
        <name>xmlStringDecodeEntities</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>what</declname>
        </param>
        <param>
          <type>xmlChar</type>
          <declname>end</declname>
        </param>
        <param>
          <type>xmlChar</type>
          <declname>end2</declname>
        </param>
        <param>
          <type>xmlChar</type>
          <declname>end3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="522" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a15b1b5df5be139f0205eaf7ed3fbe5cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN xmlChar *XMLCALL</type>
        <definition>XMLPUBFUN xmlChar* XMLCALL xmlStringLenDecodeEntities</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, const xmlChar *str, int len, int what, xmlChar end, xmlChar end2, xmlChar end3)</argsstring>
        <name>xmlStringLenDecodeEntities</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>what</declname>
        </param>
        <param>
          <type>xmlChar</type>
          <declname>end</declname>
        </param>
        <param>
          <type>xmlChar</type>
          <declname>end2</declname>
        </param>
        <param>
          <type>xmlChar</type>
          <declname>end3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a3bbc0b227c30a127f2cd45be48d66b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL nodePush</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, xmlNodePtr value)</argsstring>
        <name>nodePush</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="540" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ad389675e861393f66f1721c7bb4f8827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlNodePtr XMLCALL nodePop</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>nodePop</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="542" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a765f00817b28ad7b90619336a6a9edc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL inputPush</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, xmlParserInputPtr value)</argsstring>
        <name>inputPush</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="543" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ad1ec97411e37be4cac77bef5ed66c276" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN <ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref> XMLCALL</type>
        <definition>XMLPUBFUN xmlParserInputPtr XMLCALL inputPop</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>inputPop</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="545" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a5c2560c6d02ff23a360b131dd51589d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN const xmlChar *XMLCALL</type>
        <definition>XMLPUBFUN const xmlChar* XMLCALL namePop</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>namePop</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="546" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ab0183c9689bdbbd75c6d671116448de9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL namePush</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, const xmlChar *value)</argsstring>
        <name>namePush</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="547" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a6108a6df2b771e6fedb44dbf441bee86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlSkipBlankChars</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlSkipBlankChars</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="553" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a1963eecf86be8a11640fbad20f2d5998" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlStringCurrentChar</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, const xmlChar *cur, int *len)</argsstring>
        <name>xmlStringCurrentChar</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>cur</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="554" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1abf2c013a1ee8c9778d67923153eb48c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParserHandlePEReference</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlParserHandlePEReference</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="557" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a41952e5df0e0d263bac2b269e7dfe907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlCheckLanguageID</definition>
        <argsstring>(const xmlChar *lang)</argsstring>
        <name>xmlCheckLanguageID</name>
        <param>
          <type>const xmlChar *</type>
          <declname>lang</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="558" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ad0baefb6b12919f87b01b03e5666ff28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlCurrentChar</definition>
        <argsstring>(xmlParserCtxtPtr ctxt, int *len)</argsstring>
        <name>xmlCurrentChar</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="563" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ad96a3d2e8ba901cc784e36040641e355" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlCopyCharMultiByte</definition>
        <argsstring>(xmlChar *out, int val)</argsstring>
        <name>xmlCopyCharMultiByte</name>
        <param>
          <type>xmlChar *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="565" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1ae27112ff005b6b708e5a686fc66d397a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN int XMLCALL</type>
        <definition>XMLPUBFUN int XMLCALL xmlCopyChar</definition>
        <argsstring>(int len, xmlChar *out, int val)</argsstring>
        <name>xmlCopyChar</name>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>xmlChar *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="567" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1a48b607c797b55b74ac51efe760bc34d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlNextChar</definition>
        <argsstring>(xmlParserCtxtPtr ctxt)</argsstring>
        <name>xmlNextChar</name>
        <param>
          <type><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref></type>
          <declname>ctxt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="570" column="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_internals_8h_1aab55963dd52f2dffa33b6bda8333d175" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>XMLPUBFUN void XMLCALL</type>
        <definition>XMLPUBFUN void XMLCALL xmlParserInputShrink</definition>
        <argsstring>(xmlParserInputPtr in)</argsstring>
        <name>xmlParserInputShrink</name>
        <param>
          <type><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref></type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h" line="571" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Summary:<sp/>internals<sp/>routines<sp/>and<sp/>limits<sp/>exported<sp/>by<sp/>the<sp/>parser.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>this<sp/>module<sp/>exports<sp/>a<sp/>number<sp/>of<sp/>internal<sp/>parsing<sp/>routines</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>they<sp/>are<sp/>not<sp/>really<sp/>all<sp/>intended<sp/>for<sp/>applications<sp/>but</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>prove<sp/>useful<sp/>doing<sp/>low<sp/>level<sp/>processing.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Copy:<sp/>See<sp/>Copyright<sp/>for<sp/>the<sp/>status<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Daniel<sp/>Veillard</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__XML_PARSER_INTERNALS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__XML_PARSER_INTERNALS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/xmlversion.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/parser.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/HTMLparser.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/chvalid.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">XMLPUBVAR<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xmlParserMaxDepth;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor">#define<sp/>XML_MAX_TEXT_LENGTH<sp/>10000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor">#define<sp/>XML_MAX_NAME_LENGTH<sp/>50000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor">#define<sp/>XML_MAX_DICTIONARY_LIMIT<sp/>10000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor">#define<sp/>XML_MAX_LOOKUP_LIMIT<sp/>10000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor">#define<sp/>XML_MAX_NAMELEN<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor">#define<sp/>INPUT_CHUNK<sp/>250</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>UNICODE<sp/>version<sp/>of<sp/>the<sp/>macros.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>************************************************************************/</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor">#define<sp/>IS_BYTE_CHAR(c)<sp/><sp/>xmlIsChar_ch(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor">#define<sp/>IS_CHAR(c)<sp/><sp/><sp/>xmlIsCharQ(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor">#define<sp/>IS_CHAR_CH(c)<sp/><sp/>xmlIsChar_ch(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor">#define<sp/>IS_BLANK(c)<sp/><sp/>xmlIsBlankQ(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor">#define<sp/>IS_BLANK_CH(c)<sp/><sp/>xmlIsBlank_ch(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor">#define<sp/>IS_BASECHAR(c)<sp/>xmlIsBaseCharQ(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor">#define<sp/>IS_DIGIT(c)<sp/>xmlIsDigitQ(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor">#define<sp/>IS_DIGIT_CH(c)<sp/><sp/>xmlIsDigit_ch(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor">#define<sp/>IS_COMBINING(c)<sp/>xmlIsCombiningQ(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor">#define<sp/>IS_COMBINING_CH(c)<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor">#define<sp/>IS_EXTENDER(c)<sp/>xmlIsExtenderQ(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor">#define<sp/>IS_EXTENDER_CH(c)<sp/><sp/>xmlIsExtender_ch(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor">#define<sp/>IS_IDEOGRAPHIC(c)<sp/>xmlIsIdeographicQ(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor">#define<sp/>IS_LETTER(c)<sp/>(IS_BASECHAR(c)<sp/>||<sp/>IS_IDEOGRAPHIC(c))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor">#define<sp/>IS_LETTER_CH(c)<sp/>xmlIsBaseChar_ch(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor">#define<sp/>IS_ASCII_LETTER(c)<sp/><sp/>(((0x41<sp/>&lt;=<sp/>(c))<sp/>&amp;&amp;<sp/>((c)<sp/>&lt;=<sp/>0x5a))<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x61<sp/>&lt;=<sp/>(c))<sp/>&amp;&amp;<sp/>((c)<sp/>&lt;=<sp/>0x7a)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor">#define<sp/>IS_ASCII_DIGIT(c)<sp/><sp/><sp/>((0x30<sp/>&lt;=<sp/>(c))<sp/>&amp;&amp;<sp/>((c)<sp/>&lt;=<sp/>0x39))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor">#define<sp/>IS_PUBIDCHAR(c)<sp/>xmlIsPubidCharQ(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="preprocessor">#define<sp/>IS_PUBIDCHAR_CH(c)<sp/>xmlIsPubidChar_ch(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor">#define<sp/>SKIP_EOL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(*(p)<sp/>==<sp/>0x13)<sp/>{<sp/>p++<sp/>;<sp/>if<sp/>(*(p)<sp/>==<sp/>0x10)<sp/>p++;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="289"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(*(p)<sp/>==<sp/>0x10)<sp/>{<sp/>p++<sp/>;<sp/>if<sp/>(*(p)<sp/>==<sp/>0x13)<sp/>p++;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor">#define<sp/>MOVETO_ENDTAG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>while<sp/>((*p)<sp/>&amp;&amp;<sp/>(*(p)<sp/>!=<sp/>&apos;&gt;&apos;))<sp/>(p)++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor">#define<sp/>MOVETO_STARTTAG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>while<sp/>((*p)<sp/>&amp;&amp;<sp/>(*(p)<sp/>!=<sp/>&apos;&lt;&apos;))<sp/>(p)++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal">XMLPUBVAR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>xmlStringText[];</highlight></codeline>
<codeline lineno="313"><highlight class="normal">XMLPUBVAR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>xmlStringTextNoenc[];</highlight></codeline>
<codeline lineno="314"><highlight class="normal">XMLPUBVAR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>xmlStringComment[];</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>Function<sp/>to<sp/>finish<sp/>the<sp/>work<sp/>of<sp/>the<sp/>macros<sp/>where<sp/>needed.</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlIsLetter<sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCreateFileParserCtxt<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCreateURLParserCtxt<sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options);</highlight></codeline>
<codeline lineno="329"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCreateMemoryParserCtxt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="332"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCreateEntityParserCtxt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*URL,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*ID,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*base);</highlight></codeline>
<codeline lineno="336"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSwitchEncoding<sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCharEncoding<sp/>enc);</highlight></codeline>
<codeline lineno="339"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSwitchToEncoding<sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_char_encoding_handler" kindref="compound">xmlCharEncodingHandlerPtr</ref><sp/>handler);</highlight></codeline>
<codeline lineno="342"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSwitchInputEncoding<sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/>input,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_char_encoding_handler" kindref="compound">xmlCharEncodingHandlerPtr</ref><sp/>handler);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IN_LIBXML</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>internal<sp/>error<sp/>reporting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__xmlErrEncoding<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParserErrors<sp/>xmlerr,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*<sp/>str1,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*<sp/>str2)<sp/>LIBXML_ATTR_FORMAT(3,0);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNewStringInputStream<sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*buffer);</highlight></codeline>
<codeline lineno="363"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNewEntityInputStream<sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_entity" kindref="compound">xmlEntityPtr</ref><sp/>entity);</highlight></codeline>
<codeline lineno="366"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlPushInput<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/>input);</highlight></codeline>
<codeline lineno="369"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>XMLCALL</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlPopInput<sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="371"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFreeInputStream<sp/><sp/>(<ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/>input);</highlight></codeline>
<codeline lineno="373"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNewInputFromFile<sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="376"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNewInputStream<sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSplitQName<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar<sp/>**prefix);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseName<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="392"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseNmtoken<sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="394"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseEntityValue<sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar<sp/>**orig);</highlight></codeline>
<codeline lineno="397"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseAttValue<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="399"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseSystemLiteral<sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="401"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParsePubidLiteral<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="403"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseCharData<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cdata);</highlight></codeline>
<codeline lineno="406"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseExternalID<sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar<sp/>**publicID,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strict);</highlight></codeline>
<codeline lineno="410"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseComment<sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="412"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParsePITarget<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="414"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParsePI<sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="416"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseNotationDecl<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="418"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseEntityDecl<sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="420"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseDefaultDecl<sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar<sp/>**value);</highlight></codeline>
<codeline lineno="423"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_enumeration" kindref="compound">xmlEnumerationPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseNotationType<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="425"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_enumeration" kindref="compound">xmlEnumerationPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseEnumerationType<sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="427"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseEnumeratedType<sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_enumeration" kindref="compound">xmlEnumerationPtr</ref><sp/>*tree);</highlight></codeline>
<codeline lineno="430"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseAttributeType<sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_enumeration" kindref="compound">xmlEnumerationPtr</ref><sp/>*tree);</highlight></codeline>
<codeline lineno="433"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseAttributeListDecl(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="435"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseElementMixedContentDecl</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputchk);</highlight></codeline>
<codeline lineno="439"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseElementChildrenContentDecl</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputchk);</highlight></codeline>
<codeline lineno="443"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseElementContentDecl(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*name,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_element_content" kindref="compound">xmlElementContentPtr</ref><sp/>*result);</highlight></codeline>
<codeline lineno="447"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseElementDecl<sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="449"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseMarkupDecl<sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="451"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseCharRef<sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="453"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_entity" kindref="compound">xmlEntityPtr</ref><sp/>XMLCALL</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseEntityRef<sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="455"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseReference<sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="457"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParsePEReference<sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="459"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseDocTypeDecl<sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_SAX1_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseAttribute<sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar<sp/>**value);</highlight></codeline>
<codeline lineno="465"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseStartTag<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="467"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseEndTag<sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_SAX1_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseCDSect<sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="472"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseContent<sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="474"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseElement<sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="476"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseVersionNum<sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="478"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseVersionInfo<sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="480"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseEncName<sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="482"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseEncodingDecl<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="484"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseSDDecl<sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="486"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseXMLDecl<sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="488"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseTextDecl<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="490"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseMisc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="492"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseExternalSubset<sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*ExternalID,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*SystemID);</highlight></codeline>
<codeline lineno="501"><highlight class="preprocessor">#define<sp/>XML_SUBSTITUTE_NONE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="preprocessor">#define<sp/>XML_SUBSTITUTE_REF<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="preprocessor">#define<sp/>XML_SUBSTITUTE_PEREF<sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="preprocessor">#define<sp/>XML_SUBSTITUTE_BOTH<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlStringDecodeEntities<sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*str,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>what,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar<sp/>end,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar<sp/><sp/>end2,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar<sp/>end3);</highlight></codeline>
<codeline lineno="528"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlStringLenDecodeEntities<sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*str,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>what,</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar<sp/>end,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar<sp/><sp/>end2,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar<sp/>end3);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/>*<sp/>Generated<sp/>by<sp/>MACROS<sp/>on<sp/>top<sp/>of<sp/>parser.c<sp/>c.f.<sp/>PUSH_AND_POP.</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodePush<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>value);</highlight></codeline>
<codeline lineno="542"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>XMLCALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodePop<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="543"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputPush<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/>value);</highlight></codeline>
<codeline lineno="545"><highlight class="normal">XMLPUBFUN<sp/><ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/>XMLCALL<sp/>inputPop<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="546"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*<sp/>XMLCALL<sp/><sp/><sp/>namePop<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="547"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namePush<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*value);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/>*<sp/>other<sp/>commodities<sp/>shared<sp/>between<sp/>parser.c<sp/>and<sp/>parserInternals.</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlSkipBlankChars<sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="554"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlStringCurrentChar<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*cur,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len);</highlight></codeline>
<codeline lineno="557"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParserHandlePEReference(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="558"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCheckLanguageID<sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xmlChar<sp/>*lang);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>*<sp/>Really<sp/>core<sp/>function<sp/>shared<sp/>with<sp/>HTML<sp/>parser.</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCurrentChar<sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len);</highlight></codeline>
<codeline lineno="565"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCopyCharMultiByte<sp/><sp/><sp/><sp/>(xmlChar<sp/>*out,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="567"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XMLCALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlCopyChar<sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar<sp/>*out,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="570"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNextChar<sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="571"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParserInputShrink<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_input" kindref="compound">xmlParserInputPtr</ref><sp/>in);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_HTML_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/>*<sp/>Actually<sp/>comes<sp/>from<sp/>the<sp/>HTML<sp/>parser<sp/>but<sp/>launched<sp/>from<sp/>the<sp/>init<sp/>stuff.</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>htmlInitAutoClose<sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="578"><highlight class="normal">XMLPUBFUN<sp/>htmlParserCtxtPtr<sp/>XMLCALL<sp/>htmlCreateFileParserCtxt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encoding);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/>*<sp/>Specific<sp/>function<sp/>to<sp/>keep<sp/>track<sp/>of<sp/>entities<sp/>references</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/>*<sp/>and<sp/>used<sp/>by<sp/>the<sp/>XSLT<sp/>debugger.</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBXML_LEGACY_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/><sp/><sp/><sp/>(*xmlEntityReferenceFunc)<sp/><sp/><sp/>(<ref refid="struct__xml_entity" kindref="compound">xmlEntityPtr</ref><sp/>ent,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>firstNode,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_node" kindref="compound">xmlNodePtr</ref><sp/>lastNode);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL<sp/><sp/><sp/><sp/><sp/><sp/>xmlSetEntityReferenceFunc<sp/><sp/><sp/>(xmlEntityReferenceFunc<sp/>func);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseQuotedString<sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="604"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlParseNamespace<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="606"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNamespaceParseNSDef<sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="608"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlScanName<sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="610"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNamespaceParseNCName<sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="612"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL<sp/><sp/>xmlParserHandleReference(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt);</highlight></codeline>
<codeline lineno="613"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNamespaceParseQName<sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar<sp/>**prefix);</highlight></codeline>
<codeline lineno="619"><highlight class="normal">XMLPUBFUN<sp/>xmlChar<sp/>*<sp/>XMLCALL</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlDecodeEntities<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>what,</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar<sp/>end,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar<sp/><sp/>end2,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar<sp/>end3);</highlight></codeline>
<codeline lineno="626"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlHandleEntity<sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__xml_entity" kindref="compound">xmlEntityPtr</ref><sp/>entity);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBXML_LEGACY_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IN_LIBXML</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/>*<sp/>internal<sp/>only</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal">XMLPUBFUN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMLCALL</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlErrMemory<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__xml_parser_ctxt" kindref="compound">xmlParserCtxtPtr</ref><sp/>ctxt,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*extra);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__XML_PARSER_INTERNALS_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="venv/lib/python3.6/site-packages/lxml/includes/libxml/parserInternals.h"/>
  </compounddef>
</doxygen>
