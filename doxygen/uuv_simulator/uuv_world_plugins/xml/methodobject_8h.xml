<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="methodobject_8h" kind="file" language="C++">
    <compoundname>methodobject.h</compoundname>
    <includedby refid="_python_8h" local="yes">/usr/include/python3.6m/Python.h</includedby>
    <invincdepgraph>
      <node id="3225">
        <label>/usr/include/python3.6m/Imaging.h</label>
        <link refid="_imaging_8h_source"/>
      </node>
      <node id="3226">
        <label>/usr/include/python3.6m/pgenheaders.h</label>
        <link refid="pgenheaders_8h_source"/>
      </node>
      <node id="3228">
        <label>venv/lib/python3.6/site-packages/lxml/includes/etree_defs.h</label>
        <link refid="etree__defs_8h_source"/>
      </node>
      <node id="3223">
        <label>/usr/include/python3.6m/Python.h</label>
        <link refid="_python_8h_source"/>
        <childnode refid="3224" relation="include">
        </childnode>
        <childnode refid="3226" relation="include">
        </childnode>
        <childnode refid="3227" relation="include">
        </childnode>
        <childnode refid="3228" relation="include">
        </childnode>
        <childnode refid="3229" relation="include">
        </childnode>
      </node>
      <node id="3229">
        <label>venv/lib/python3.6/site-packages/lxml/lxml.etree_api.h</label>
        <link refid="lxml_8etree__api_8h_source"/>
      </node>
      <node id="3224">
        <label>/usr/include/python3.6m/ImPlatform.h</label>
        <link refid="_im_platform_8h_source"/>
        <childnode refid="3225" relation="include">
        </childnode>
      </node>
      <node id="3222">
        <label>/usr/include/python3.6m/methodobject.h</label>
        <link refid="methodobject_8h"/>
        <childnode refid="3223" relation="include">
        </childnode>
      </node>
      <node id="3227">
        <label>venv/lib/python3.6/site-packages/lxml/etree_api.h</label>
        <link refid="etree__api_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_py_method_def" prot="public">PyMethodDef</innerclass>
    <innerclass refid="struct_py_c_function_object" prot="public">PyCFunctionObject</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="methodobject_8h_1a6d39dd5426c1d11d64b8c04a8b6d550e" prot="public" static="no">
        <name>PyCFunction_Check</name>
        <param><defname>op</defname></param>
        <initializer>(Py_TYPE(op) == &amp;PyCFunction_Type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="16" column="9" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="methodobject_8h_1a91f4e55f86188bc21e014f1bb8ff3692" prot="public" static="no">
        <name>PyCFunction_GET_FUNCTION</name>
        <param><defname>func</defname></param>
        <initializer>(((<ref refid="struct_py_c_function_object" kindref="compound">PyCFunctionObject</ref> *)func) -&gt; m_ml -&gt; ml_meth)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="32" column="9" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="methodobject_8h_1ae870b1a8c502453a48c61ee893bda576" prot="public" static="no">
        <name>PyCFunction_GET_SELF</name>
        <param><defname>func</defname></param>
        <initializer>(((<ref refid="struct_py_c_function_object" kindref="compound">PyCFunctionObject</ref> *)func) -&gt; m_ml -&gt; ml_flags &amp; METH_STATIC ? \
         NULL : ((<ref refid="struct_py_c_function_object" kindref="compound">PyCFunctionObject</ref> *)func) -&gt; m_self)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="34" column="9" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="methodobject_8h_1a40b73485cd3a09eebe4fc9ab12718449" prot="public" static="no">
        <name>PyCFunction_GET_FLAGS</name>
        <param><defname>func</defname></param>
        <initializer>(((<ref refid="struct_py_c_function_object" kindref="compound">PyCFunctionObject</ref> *)func) -&gt; m_ml -&gt; ml_flags)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="37" column="9" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="methodobject_8h_1a34c74178db052af6bcba2e388ad1def1" prot="public" static="no">
        <name>PyCFunction_New</name>
        <param><defname>ML</defname></param>
        <param><defname>SELF</defname></param>
        <initializer>PyCFunction_NewEx((ML), (SELF), NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="63" column="9" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="methodobject_8h_1afaf9b6eff112ee295a578d2aaa72b3dc" prot="public" static="no">
        <name>METH_VARARGS</name>
        <initializer>0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="69" column="9" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="methodobject_8h_1a24bcef5ec3749c8987b30e77f3c7528d" prot="public" static="no">
        <name>METH_KEYWORDS</name>
        <initializer>0x0002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="70" column="9" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="methodobject_8h_1acc040d2060f59a5fe19dfbcc26df2629" prot="public" static="no">
        <name>METH_NOARGS</name>
        <initializer>0x0004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="72" column="9" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="methodobject_8h_1a7eda94090eff0409107444b0973570da" prot="public" static="no">
        <name>METH_O</name>
        <initializer>0x0008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="73" column="9" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="methodobject_8h_1a7b25057329168b11ff234dc42d3c4fe0" prot="public" static="no">
        <name>METH_CLASS</name>
        <initializer>0x0010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="78" column="9" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="methodobject_8h_1a15971999e8cecb2b3169d485908bf78f" prot="public" static="no">
        <name>METH_STATIC</name>
        <initializer>0x0020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="79" column="9" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="methodobject_8h_1af1096f0a899e6894666570a6753de2d6" prot="public" static="no">
        <name>METH_COEXIST</name>
        <initializer>0x0040</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="86" column="9" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="methodobject_8h_1ad0a34d8f50f5782c18d241f62f8e88df" prot="public" static="no">
        <name>METH_FASTCALL</name>
        <initializer>0x0080</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="89" column="9" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="methodobject_8h_1af268178dccdbfeb92ee45524b69d5674" prot="public" static="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *(*</type>
        <definition>typedef PyObject*(* PyCFunction) (PyObject *, PyObject *)</definition>
        <argsstring>)(PyObject *, PyObject *)</argsstring>
        <name>PyCFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="18" column="1" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="methodobject_8h_1a55aa0ecc0e733e126b23e09c39e21850" prot="public" static="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *(*</type>
        <definition>typedef PyObject*(* _PyCFunctionFast) (PyObject *self, PyObject **args, Py_ssize_t nargs, PyObject *kwnames)</definition>
        <argsstring>)(PyObject *self, PyObject **args, Py_ssize_t nargs, PyObject *kwnames)</argsstring>
        <name>_PyCFunctionFast</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="19" column="1" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="methodobject_8h_1a95bd42c02ad819eb68355267b8c5b491" prot="public" static="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *(*</type>
        <definition>typedef PyObject*(* PyCFunctionWithKeywords) (PyObject *, PyObject *, PyObject *)</definition>
        <argsstring>)(PyObject *, PyObject *, PyObject *)</argsstring>
        <name>PyCFunctionWithKeywords</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="21" column="1" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="methodobject_8h_1a7275fa6c360b7c8e041b58127e758e05" prot="public" static="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *(*</type>
        <definition>typedef PyObject*(* PyNoArgsFunction) (PyObject *)</definition>
        <argsstring>)(PyObject *)</argsstring>
        <name>PyNoArgsFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="23" column="1" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="methodobject_8h_1a0c0fdbf8ed80219bbf8fd03b4a5b876f" prot="public" static="no">
        <type>struct <ref refid="struct_py_method_def" kindref="compound">PyMethodDef</ref></type>
        <definition>typedef struct PyMethodDef PyMethodDef</definition>
        <argsstring></argsstring>
        <name>PyMethodDef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="51" column="1" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="methodobject_8h_1ab01984e1cdee5ff85a54766f49f53c59" prot="public" static="no" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> <ref refid="struct__object" kindref="compound">PyObject</ref> <ref refid="struct__object" kindref="compound">PyObject</ref> **</type>
        <definition>PyObject PyObject PyObject** args</definition>
        <argsstring></argsstring>
        <name>args</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="44" column="1" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="methodobject_8h_1ae41a7f26a057e9cc3ebebb8a9cf5c1ab" prot="public" static="no" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> <ref refid="struct__object" kindref="compound">PyObject</ref> <ref refid="struct__object" kindref="compound">PyObject</ref> Py_ssize_t</type>
        <definition>PyObject Py_ssize_t nargs</definition>
        <argsstring></argsstring>
        <name>nargs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="45" column="1" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="methodobject_8h_1a41a82e48d3ebb28ef444f9ae27ec9e2e" prot="public" static="no" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> <ref refid="struct__object" kindref="compound">PyObject</ref> <ref refid="struct__object" kindref="compound">PyObject</ref> Py_ssize_t <ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>PyObject PyObject PyObject Py_ssize_t PyObject* kwargs</definition>
        <argsstring></argsstring>
        <name>kwargs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="46" column="1" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="methodobject_8h_1a3ea7b58e96ec5abff8193cf9373d7137" prot="public" static="no" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> **</type>
        <definition>PyObject** stack</definition>
        <argsstring></argsstring>
        <name>stack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="49" column="1" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="methodobject_8h_1aa3b7466a9a0f1d69413895abd54297d2" prot="public" static="no" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> Py_ssize_t <ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>PyObject Py_ssize_t PyObject* kwnames</definition>
        <argsstring></argsstring>
        <name>kwnames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="51" column="1" bodyfile="/usr/include/python3.6m/methodobject.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="methodobject_8h_1ab3b37f879a039a12ba0f4056b0c216a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_DATA</definition>
        <argsstring>(PyTypeObject) PyCFunction_Type</argsstring>
        <name>PyAPI_DATA</name>
        <param>
          <type><ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="methodobject_8h_1a05acf5a178dc6169316c310ddcf2fdc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(PyCFunction) PyCFunction_GetFunction(PyObject *)</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type>PyCFunction</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="methodobject_8h_1a68031318d33d5b78ecc90aa37229cbb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(PyObject *) PyCFunction_GetSelf(PyObject *)</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="methodobject_8h_1a98093f80d7f499db20864faa06ea4ca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(int) PyCFunction_GetFlags(PyObject *)</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="methodobject_8h_1ae6c35f96d2b870f86debec5226c28a22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(void) _PyCFunction_DebugMallocStats(FILE *out)</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/methodobject.h" line="103" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Method<sp/>object<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_METHODOBJECT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_METHODOBJECT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>about<sp/>the<sp/>type<sp/>&apos;builtin_function_or_method&apos;,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/>not<sp/>Python<sp/>methods<sp/>in<sp/>user-defined<sp/>classes.<sp/><sp/>See<sp/>classobject.h</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/>for<sp/>the<sp/>latter.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">PyAPI_DATA(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref>)<sp/>PyCFunction_Type;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyCFunction_Check(op)<sp/>(Py_TYPE(op)<sp/>==<sp/>&amp;PyCFunction_Type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*(*PyCFunction)(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*,<sp/>PyObject<sp/>*);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PyObject<sp/>*(*_PyCFunctionFast)<sp/>(PyObject<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>PyObject<sp/>**args,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>nargs,<sp/>PyObject<sp/>*kwnames);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PyObject<sp/>*(*PyCFunctionWithKeywords)(PyObject<sp/>*,<sp/>PyObject<sp/>*,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PyObject<sp/>*(*PyNoArgsFunction)(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">PyAPI_FUNC(PyCFunction)<sp/>PyCFunction_GetFunction(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">PyAPI_FUNC(PyObject<sp/>*)<sp/>PyCFunction_GetSelf(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>PyCFunction_GetFlags(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macros<sp/>for<sp/>direct<sp/>access<sp/>to<sp/>these<sp/>values.<sp/>Type<sp/>checks<sp/>are<sp/>*not*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/>done,<sp/>so<sp/>use<sp/>with<sp/>care.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyCFunction_GET_FUNCTION(func)<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((PyCFunctionObject<sp/>*)func)<sp/>-&gt;<sp/>m_ml<sp/>-&gt;<sp/>ml_meth)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyCFunction_GET_SELF(func)<sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((PyCFunctionObject<sp/>*)func)<sp/>-&gt;<sp/>m_ml<sp/>-&gt;<sp/>ml_flags<sp/>&amp;<sp/>METH_STATIC<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL<sp/>:<sp/>((PyCFunctionObject<sp/>*)func)<sp/>-&gt;<sp/>m_self)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyCFunction_GET_FLAGS(func)<sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((PyCFunctionObject<sp/>*)func)<sp/>-&gt;<sp/>m_ml<sp/>-&gt;<sp/>ml_flags)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">PyAPI_FUNC(PyObject<sp/>*)<sp/>PyCFunction_Call(PyObject<sp/>*,<sp/>PyObject<sp/>*,<sp/>PyObject<sp/>*);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">PyAPI_FUNC(PyObject<sp/>*)<sp/>_PyCFunction_FastCallDict(PyObject<sp/>*func,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>**args,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>nargs,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*kwargs);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">PyAPI_FUNC(PyObject<sp/>*)<sp/>_PyCFunction_FastCallKeywords(PyObject<sp/>*func,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>**stack,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>nargs,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*kwnames);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="struct_py_method_def" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_py_method_def" kindref="compound">PyMethodDef</ref><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*ml_name;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>name<sp/>of<sp/>the<sp/>built-in<sp/>function/method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>PyCFunction<sp/>ml_meth;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>C<sp/>function<sp/>that<sp/>implements<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_flags;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Combination<sp/>of<sp/>METH_xxx<sp/>flags,<sp/>which<sp/>mostly</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>describe<sp/>the<sp/>args<sp/>expected<sp/>by<sp/>the<sp/>C<sp/>func<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*ml_doc;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>__doc__<sp/>attribute,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_py_method_def" kindref="compound">PyMethodDef</ref><sp/>PyMethodDef;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyCFunction_New(ML,<sp/>SELF)<sp/>PyCFunction_NewEx((ML),<sp/>(SELF),<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">PyAPI_FUNC(PyObject<sp/>*)<sp/>PyCFunction_NewEx(PyMethodDef<sp/>*,<sp/>PyObject<sp/>*,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Flag<sp/>passed<sp/>to<sp/>newmethodobject<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>METH_OLDARGS<sp/><sp/>0x0000<sp/><sp/><sp/>--<sp/>unsupported<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>METH_VARARGS<sp/><sp/>0x0001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>METH_KEYWORDS<sp/>0x0002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>METH_NOARGS<sp/>and<sp/>METH_O<sp/>must<sp/>not<sp/>be<sp/>combined<sp/>with<sp/>the<sp/>flags<sp/>above.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>METH_NOARGS<sp/><sp/><sp/>0x0004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>METH_O<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>METH_CLASS<sp/>and<sp/>METH_STATIC<sp/>are<sp/>a<sp/>little<sp/>different;<sp/>these<sp/>control</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/>the<sp/>construction<sp/>of<sp/>methods<sp/>for<sp/>a<sp/>class.<sp/><sp/>These<sp/>cannot<sp/>be<sp/>used<sp/>for</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/>functions<sp/>in<sp/>modules.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>METH_CLASS<sp/><sp/><sp/><sp/>0x0010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>METH_STATIC<sp/><sp/><sp/>0x0020</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>METH_COEXIST<sp/>allows<sp/>a<sp/>method<sp/>to<sp/>be<sp/>entered<sp/>even<sp/>though<sp/>a<sp/>slot<sp/>has</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/>already<sp/>filled<sp/>the<sp/>entry.<sp/><sp/>When<sp/>defined,<sp/>the<sp/>flag<sp/>allows<sp/>a<sp/>separate</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/>method,<sp/>&quot;__contains__&quot;<sp/>for<sp/>example,<sp/>to<sp/>coexist<sp/>with<sp/>a<sp/>defined</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/>slot<sp/>like<sp/>sq_contains.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>METH_COEXIST<sp/><sp/><sp/>0x0040</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>METH_FASTCALL<sp/><sp/>0x0080</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="struct_py_c_function_object" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject_HEAD</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>PyMethodDef<sp/>*m_ml;<sp/></highlight><highlight class="comment">/*<sp/>Description<sp/>of<sp/>the<sp/>C<sp/>function<sp/>to<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/><sp/><sp/><sp/>*m_self;<sp/></highlight><highlight class="comment">/*<sp/>Passed<sp/>as<sp/>&apos;self&apos;<sp/>arg<sp/>to<sp/>the<sp/>C<sp/>func,<sp/>can<sp/>be<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/><sp/><sp/><sp/>*m_module;<sp/></highlight><highlight class="comment">/*<sp/>The<sp/>__module__<sp/>attribute,<sp/>can<sp/>be<sp/>anything<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/><sp/><sp/><sp/>*m_weakreflist;<sp/></highlight><highlight class="comment">/*<sp/>List<sp/>of<sp/>weak<sp/>references<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">}<sp/><ref refid="struct_py_c_function_object" kindref="compound">PyCFunctionObject</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>PyCFunction_ClearFreeList(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>_PyCFunction_DebugMallocStats(FILE<sp/>*out);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>_PyMethod_DebugMallocStats(FILE<sp/>*out);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!Py_METHODOBJECT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/usr/include/python3.6m/methodobject.h"/>
  </compounddef>
</doxygen>
