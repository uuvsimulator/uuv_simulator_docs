<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="cext_8c" kind="file" language="C++">
    <compoundname>cext.c</compoundname>
    <includes refid="_python_8h" local="yes">Python.h</includes>
    <includes refid="structmember_8h" local="yes">structmember.h</includes>
    <incdepgraph>
      <node id="48">
        <label>traceback.h</label>
        <link refid="traceback_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>typeslots.h</label>
        <link refid="typeslots_8h_source"/>
      </node>
      <node id="70">
        <label>abstract.h</label>
        <link refid="abstract_8h_source"/>
      </node>
      <node id="25">
        <label>stdarg.h</label>
      </node>
      <node id="80">
        <label>pyfpe.h</label>
        <link refid="pyfpe_8h_source"/>
      </node>
      <node id="61">
        <label>pyarena.h</label>
        <link refid="pyarena_8h_source"/>
      </node>
      <node id="52">
        <label>iterobject.h</label>
        <link refid="iterobject_8h_source"/>
      </node>
      <node id="63">
        <label>pythonrun.h</label>
        <link refid="pythonrun_8h_source"/>
      </node>
      <node id="36">
        <label>tupleobject.h</label>
        <link refid="tupleobject_8h_source"/>
      </node>
      <node id="18">
        <label>object.h</label>
        <link refid="object_8h_source"/>
      </node>
      <node id="53">
        <label>genobject.h</label>
        <link refid="genobject_8h_source"/>
      </node>
      <node id="9">
        <label>assert.h</label>
      </node>
      <node id="50">
        <label>sliceobject.h</label>
        <link refid="sliceobject_8h_source"/>
      </node>
      <node id="30">
        <label>longintrepr.h</label>
        <link refid="longintrepr_8h_source"/>
      </node>
      <node id="54">
        <label>descrobject.h</label>
        <link refid="descrobject_8h_source"/>
      </node>
      <node id="59">
        <label>codecs.h</label>
        <link refid="codecs_8h_source"/>
      </node>
      <node id="66">
        <label>sysmodule.h</label>
        <link refid="sysmodule_8h_source"/>
      </node>
      <node id="41">
        <label>setobject.h</label>
        <link refid="setobject_8h_source"/>
      </node>
      <node id="37">
        <label>listobject.h</label>
        <link refid="listobject_8h_source"/>
      </node>
      <node id="67">
        <label>osmodule.h</label>
        <link refid="osmodule_8h_source"/>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="57">
        <label>structseq.h</label>
        <link refid="structseq_8h_source"/>
      </node>
      <node id="27">
        <label>unicodeobject.h</label>
        <link refid="unicodeobject_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>compile.h</label>
        <link refid="compile_8h_source"/>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>pymem.h</label>
        <link refid="pymem_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>weakrefobject.h</label>
        <link refid="weakrefobject_8h_source"/>
      </node>
      <node id="73">
        <label>code.h</label>
        <link refid="code_8h_source"/>
      </node>
      <node id="17">
        <label>pytime.h</label>
        <link refid="pytime_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>pystrcmp.h</label>
        <link refid="pystrcmp_8h_source"/>
      </node>
      <node id="74">
        <label>eval.h</label>
        <link refid="eval_8h_source"/>
      </node>
      <node id="76">
        <label>pystrtod.h</label>
        <link refid="pystrtod_8h_source"/>
      </node>
      <node id="16">
        <label>pymath.h</label>
        <link refid="pymath_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>stddef.h</label>
      </node>
      <node id="24">
        <label>bytearrayobject.h</label>
        <link refid="bytearrayobject_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>limits.h</label>
      </node>
      <node id="47">
        <label>pycapsule.h</label>
        <link refid="pycapsule_8h_source"/>
      </node>
      <node id="69">
        <label>import.h</label>
        <link refid="import_8h_source"/>
      </node>
      <node id="15">
        <label>pyatomic.h</label>
        <link refid="pyatomic_8h_source"/>
      </node>
      <node id="20">
        <label>objimpl.h</label>
        <link refid="objimpl_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>cellobject.h</label>
        <link refid="cellobject_8h_source"/>
      </node>
      <node id="79">
        <label>fileutils.h</label>
        <link refid="fileutils_8h_source"/>
      </node>
      <node id="1">
        <label>Python.h</label>
        <link refid="_python_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="33">
        <label>complexobject.h</label>
        <link refid="complexobject_8h_source"/>
      </node>
      <node id="45">
        <label>classobject.h</label>
        <link refid="classobject_8h_source"/>
      </node>
      <node id="0">
        <label>venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c</label>
        <link refid="cext_8c"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>fileobject.h</label>
        <link refid="fileobject_8h_source"/>
      </node>
      <node id="26">
        <label>bytesobject.h</label>
        <link refid="bytesobject_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>warnings.h</label>
        <link refid="warnings_8h_source"/>
      </node>
      <node id="31">
        <label>boolobject.h</label>
        <link refid="boolobject_8h_source"/>
      </node>
      <node id="3">
        <label>pyconfig.h</label>
        <link refid="pyconfig_8h_source"/>
      </node>
      <node id="40">
        <label>enumobject.h</label>
        <link refid="enumobject_8h_source"/>
      </node>
      <node id="44">
        <label>funcobject.h</label>
        <link refid="funcobject_8h_source"/>
      </node>
      <node id="39">
        <label>odictobject.h</label>
        <link refid="odictobject_8h_source"/>
      </node>
      <node id="78">
        <label>dtoa.h</label>
        <link refid="dtoa_8h_source"/>
      </node>
      <node id="32">
        <label>floatobject.h</label>
        <link refid="floatobject_8h_source"/>
      </node>
      <node id="29">
        <label>longobject.h</label>
        <link refid="longobject_8h_source"/>
      </node>
      <node id="23">
        <label>pydebug.h</label>
        <link refid="pydebug_8h_source"/>
      </node>
      <node id="2">
        <label>patchlevel.h</label>
        <link refid="patchlevel_8h_source"/>
      </node>
      <node id="62">
        <label>modsupport.h</label>
        <link refid="modsupport_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>methodobject.h</label>
        <link refid="methodobject_8h_source"/>
      </node>
      <node id="13">
        <label>time.h</label>
      </node>
      <node id="38">
        <label>dictobject.h</label>
        <link refid="dictobject_8h_source"/>
      </node>
      <node id="12">
        <label>math.h</label>
      </node>
      <node id="35">
        <label>memoryobject.h</label>
        <link refid="memoryobject_8h_source"/>
      </node>
      <node id="14">
        <label>pymacro.h</label>
        <link refid="pymacro_8h_source"/>
      </node>
      <node id="4">
        <label>pymacconfig.h</label>
        <link refid="pymacconfig_8h_source"/>
      </node>
      <node id="28">
        <label>ctype.h</label>
      </node>
      <node id="10">
        <label>pyport.h</label>
        <link refid="pyport_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>pyctype.h</label>
        <link refid="pyctype_8h_source"/>
      </node>
      <node id="60">
        <label>pyerrors.h</label>
        <link refid="pyerrors_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>pylifecycle.h</label>
        <link refid="pylifecycle_8h_source"/>
      </node>
      <node id="43">
        <label>moduleobject.h</label>
        <link refid="moduleobject_8h_source"/>
      </node>
      <node id="22">
        <label>pyhash.h</label>
        <link refid="pyhash_8h_source"/>
      </node>
      <node id="71">
        <label>bltinmodule.h</label>
        <link refid="bltinmodule_8h_source"/>
      </node>
      <node id="81">
        <label>structmember.h</label>
        <link refid="structmember_8h_source"/>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>ceval.h</label>
        <link refid="ceval_8h_source"/>
      </node>
      <node id="58">
        <label>namespaceobject.h</label>
        <link refid="namespaceobject_8h_source"/>
      </node>
      <node id="34">
        <label>rangeobject.h</label>
        <link refid="rangeobject_8h_source"/>
      </node>
      <node id="49">
        <label>pystate.h</label>
        <link refid="pystate_8h_source"/>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="11">
        <label>inttypes.h</label>
      </node>
      <node id="68">
        <label>intrcheck.h</label>
        <link refid="intrcheck_8h_source"/>
      </node>
    </incdepgraph>
    <innerclass refid="struct_proxy_object" prot="public">ProxyObject</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="cext_8c_1af7bf798fd1fb10467244bfb9d0dc12d5" prot="public" static="no">
        <name>PyVarObject_HEAD_INIT</name>
        <param><defname>type</defname></param>
        <param><defname>size</defname></param>
        <initializer>PyObject_HEAD_INIT(type) size,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="8" column="9" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cext_8c_1a1b8e57dfcd665a648f2c179b9d320a99" prot="public" static="no">
        <name>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL</name>
        <param><defname>object</defname></param>
        <initializer>if (PyObject_TypeCheck(<ref refid="struct__object" kindref="compound">object</ref>, &amp;Proxy_Type)) { \
        <ref refid="struct__object" kindref="compound">object</ref> = Proxy__ensure_wrapped((<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *)<ref refid="struct__object" kindref="compound">object</ref>); \
        if (!<ref refid="struct__object" kindref="compound">object</ref>) return NULL; \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="11" column="9" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cext_8c_1a3722895691d1538235a3d7dec3d81e20" prot="public" static="no">
        <name>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL</name>
        <param><defname>self</defname></param>
        <initializer>if (!Proxy__ensure_wrapped(self)) return NULL;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="17" column="9" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cext_8c_1a74b9ac5d0d8c79e915b2ee8f8f5cb683" prot="public" static="no">
        <name>Proxy__ENSURE_WRAPPED_OR_RETURN_MINUS1</name>
        <param><defname>self</defname></param>
        <initializer>if (!Proxy__ensure_wrapped(self)) return -1;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="18" column="9" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cext_8c_1a361689e69dc1560a9e9ee88193814ddd" prot="public" static="no">
        <name>Py_hash_t</name>
        <initializer>long</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="21" column="9" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cext_8c_1ad1f90b6572dfa051f99d2b7dddf9ed93" prot="public" static="no" mutable="no">
        <type><ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref></type>
        <definition>PyTypeObject Proxy_Type</definition>
        <argsstring></argsstring>
        <name>Proxy_Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="34" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cext_8c_1a58357b7836f333c8f68b99113dae1552" prot="public" static="yes" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>PyObject* identity_ref</definition>
        <argsstring></argsstring>
        <name>identity_ref</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="39" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cext_8c_1a6322e13637eb76e3e58e53ce77493052" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="struct_py_method_def" kindref="compound">PyMethodDef</ref></type>
        <definition>struct PyMethodDef module_functions[]</definition>
        <argsstring>[]</argsstring>
        <name>module_functions</name>
        <initializer>= {
    {&quot;identity&quot;, identity, METH_O, identity_doc},
    {NULL,       NULL}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="49" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cext_8c_1adba91b8933c4d53b8ccfb7334a8c6f4c" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_py_number_methods" kindref="compound">PyNumberMethods</ref></type>
        <definition>PyNumberMethods Proxy_as_number</definition>
        <argsstring></argsstring>
        <name>Proxy_as_number</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1201" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cext_8c_1ab25ba329553dd0d956a61e7bf2caa4de" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_py_sequence_methods" kindref="compound">PySequenceMethods</ref></type>
        <definition>PySequenceMethods Proxy_as_sequence</definition>
        <argsstring></argsstring>
        <name>Proxy_as_sequence</name>
        <initializer>= {
    (lenfunc)Proxy_length,      
    0,                          
    0,                          
    0,                          
    0,                          
    0,                          
    0,                          
    (objobjproc)Proxy_contains, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1256" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cext_8c_1a84ce113827766d6ee7496428d952e37b" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_py_mapping_methods" kindref="compound">PyMappingMethods</ref></type>
        <definition>PyMappingMethods Proxy_as_mapping</definition>
        <argsstring></argsstring>
        <name>Proxy_as_mapping</name>
        <initializer>= {
    (lenfunc)Proxy_length,        
    (binaryfunc)Proxy_getitem,    
    (objobjargproc)Proxy_setitem, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1267" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cext_8c_1a6efa97a28f00f3cb24bebe829f665170" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_py_method_def" kindref="compound">PyMethodDef</ref></type>
        <definition>PyMethodDef Proxy_methods[]</definition>
        <argsstring>[]</argsstring>
        <name>Proxy_methods</name>
        <initializer>= {
    { &quot;__dir__&quot;,    (PyCFunction)Proxy_dir, METH_NOARGS, 0 },
    { &quot;__enter__&quot;,  (PyCFunction)Proxy_enter,
                    METH_VARARGS | METH_KEYWORDS, 0 },
    { &quot;__exit__&quot;,   (PyCFunction)Proxy_exit,
                    METH_VARARGS | METH_KEYWORDS, 0 },
    { &quot;__getattr__&quot;, (PyCFunction)Proxy_getattr,
                    METH_VARARGS , 0 },
    { &quot;__bytes__&quot;,  (PyCFunction)Proxy_bytes, METH_NOARGS, 0 },
    { &quot;__reversed__&quot;, (PyCFunction)Proxy_reversed, METH_NOARGS, 0 },
    { &quot;__reduce__&quot;, (PyCFunction)Proxy_reduce, METH_NOARGS, 0 },
    { &quot;__reduce_ex__&quot;, (PyCFunction)Proxy_reduce, METH_O, 0 },



    { NULL, NULL },
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1273" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cext_8c_1a32911d85db15389a82e5c83b7a766051" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_py_get_set_def" kindref="compound">PyGetSetDef</ref></type>
        <definition>PyGetSetDef Proxy_getset[]</definition>
        <argsstring>[]</argsstring>
        <name>Proxy_getset</name>
        <initializer>= {
    { &quot;__name__&quot;,           (getter)Proxy_get_name,
                            (setter)Proxy_set_name, 0 },
    { &quot;__qualname__&quot;,       (getter)Proxy_get_qualname,
                            (setter)Proxy_set_qualname, 0 },
    { &quot;__module__&quot;,         (getter)Proxy_get_module,
                            (setter)Proxy_set_module, 0 },
    { &quot;__doc__&quot;,            (getter)Proxy_get_doc,
                            (setter)Proxy_set_doc, 0 },
    { &quot;__class__&quot;,          (getter)Proxy_get_class,
                            NULL, 0 },
    { &quot;__annotations__&quot;,    (getter)Proxy_get_annotations,
                            (setter)Proxy_set_annotations, 0 },
    { &quot;__wrapped__&quot;,        (getter)Proxy_get_wrapped,
                            (setter)Proxy_set_wrapped, 0 },
    { &quot;__factory__&quot;,        (getter)Proxy_get_factory,
                            (setter)Proxy_set_factory, 0 },
    { NULL },
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1291" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1291" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cext_8c_1abee999d91a53c62f273f2ddcd067ed93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* identity</definition>
        <argsstring>(PyObject *self, PyObject *value)</argsstring>
        <name>identity</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="41" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="41" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1af719fdac2d9b7cb64b2f6fab576e0111" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyDoc_STRVAR</definition>
        <argsstring>(identity_doc, &quot;Indentity function: returns the single argument.&quot;)</argsstring>
        <name>PyDoc_STRVAR</name>
        <param>
          <type>identity_doc</type>
        </param>
        <param>
          <type>&quot;Indentity function: returns the single argument.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1aaa3df3f37df8e900572fb44fdef3cc7c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy__ensure_wrapped</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy__ensure_wrapped</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="58" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="58" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a025f24862fe792e970f0a3f32c40bc35" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_new</definition>
        <argsstring>(PyTypeObject *type, PyObject *args, PyObject *kwds)</argsstring>
        <name>Proxy_new</name>
        <param>
          <type><ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>kwds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="82" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="82" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a115ffbf65bae1165799ff0b80a6f39e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Proxy_raw_init</definition>
        <argsstring>(ProxyObject *self, PyObject *factory)</argsstring>
        <name>Proxy_raw_init</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>factory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="101" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="101" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1ab8670a080a7a2cf99e6690fa67f01bf0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Proxy_init</definition>
        <argsstring>(ProxyObject *self, PyObject *args, PyObject *kwds)</argsstring>
        <name>Proxy_init</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>kwds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="114" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="114" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1af2e6d2986dc70a89ee9832a4174e0710" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Proxy_traverse</definition>
        <argsstring>(ProxyObject *self, visitproc visit, void *arg)</argsstring>
        <name>Proxy_traverse</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>visitproc</type>
          <declname>visit</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="131" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="131" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1aa3aecf1a057f366e32f11abcbf068c90" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Proxy_clear</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_clear</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="142" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="142" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1aec4c532b23dcf4c3711127fd16bf01cf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Proxy_dealloc</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_dealloc</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="152" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="152" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a42a1fab9d3fe5fc81e10be703732a4f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_repr</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_repr</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="163" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="163" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a363f5abd1d55ba8be9c9e149419c50a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Py_hash_t</type>
        <definition>static Py_hash_t Proxy_hash</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_hash</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="207" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="207" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1ae485c24893162c833c5be3a7bf1bca0c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_str</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_str</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="216" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="216" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1ae05d2b86456580c86b95d7eb76772b78" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_add</definition>
        <argsstring>(PyObject *o1, PyObject *o2)</argsstring>
        <name>Proxy_add</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o1</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="225" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="225" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1aa00df7d98eb60765a1e2f53adf51ebee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_subtract</definition>
        <argsstring>(PyObject *o1, PyObject *o2)</argsstring>
        <name>Proxy_subtract</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o1</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="235" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="235" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1aa25763c53fc970fd3524a62e1943e0cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_multiply</definition>
        <argsstring>(PyObject *o1, PyObject *o2)</argsstring>
        <name>Proxy_multiply</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o1</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="245" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="245" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a2bba6acf488325b52dd5a9e22303a119" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_divide</definition>
        <argsstring>(PyObject *o1, PyObject *o2)</argsstring>
        <name>Proxy_divide</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o1</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="256" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="256" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1abee5a861206e4a5c25eaaeb9c9ed784f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_remainder</definition>
        <argsstring>(PyObject *o1, PyObject *o2)</argsstring>
        <name>Proxy_remainder</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o1</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="267" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="267" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1aa32916c087b86598ea50b132e667bd7f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_divmod</definition>
        <argsstring>(PyObject *o1, PyObject *o2)</argsstring>
        <name>Proxy_divmod</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o1</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="277" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="277" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a9f7bb436e3b463737a5fa520e4529f8e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_power</definition>
        <argsstring>(PyObject *o1, PyObject *o2, PyObject *modulo)</argsstring>
        <name>Proxy_power</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o1</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o2</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>modulo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="287" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="287" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1aa0204103e6aa942842fdb24317630502" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_negative</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_negative</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="298" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="298" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a14097a219ce77053894437e7675cb28c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_positive</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_positive</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="307" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="307" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a6940f4abe3ec3e765a4d2850e923fb5d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_absolute</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_absolute</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="316" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="316" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1ab4ced750c1fab3e6cfdac2096431b4d3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Proxy_bool</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_bool</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="325" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="325" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a6a6725c4526beafd89f0127a9cdcf0d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_invert</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_invert</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="334" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="334" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a8d01512c13ef5c50bb3e870bd47f5326" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_lshift</definition>
        <argsstring>(PyObject *o1, PyObject *o2)</argsstring>
        <name>Proxy_lshift</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o1</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="343" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="343" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1ad3cda371ca636fb04e0e9aa0b5650c61" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_rshift</definition>
        <argsstring>(PyObject *o1, PyObject *o2)</argsstring>
        <name>Proxy_rshift</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o1</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="353" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="353" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1abfe7cc27dc8fdb523dd239f41da82143" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_and</definition>
        <argsstring>(PyObject *o1, PyObject *o2)</argsstring>
        <name>Proxy_and</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o1</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="363" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="363" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1aa1123319af535e1f2016988e4a3fe227" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_xor</definition>
        <argsstring>(PyObject *o1, PyObject *o2)</argsstring>
        <name>Proxy_xor</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o1</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="373" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="373" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1ae1e0e4125fe63c2eca0a1d6c19c9c53b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_or</definition>
        <argsstring>(PyObject *o1, PyObject *o2)</argsstring>
        <name>Proxy_or</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o1</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="383" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="383" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a3c7d86da05543f492c0b41e860da2a84" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_int</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_int</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="394" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="394" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a7a596a7944ba5ee456098a803c2f5aff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_long</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_long</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="404" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="404" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1ad6b5e2e4b5caf7bd4961d3c0f9dfd73f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_float</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_float</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="413" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="413" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1aacde7990797717c6e025c0899e3128ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_oct</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_oct</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="423" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="423" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1abb419cb503f0c9f91786334470c74113" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_hex</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_hex</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="443" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="443" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1aab9c273bed9abcd106b3845509f51ea8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_inplace_add</definition>
        <argsstring>(ProxyObject *self, PyObject *other)</argsstring>
        <name>Proxy_inplace_add</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="462" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="462" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1ab02028c4d249c92e7a57a92d527c11da" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_inplace_subtract</definition>
        <argsstring>(ProxyObject *self, PyObject *other)</argsstring>
        <name>Proxy_inplace_subtract</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="484" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="484" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a647ec63ccedd7356148261f4319dcfef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_inplace_multiply</definition>
        <argsstring>(ProxyObject *self, PyObject *other)</argsstring>
        <name>Proxy_inplace_multiply</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="506" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="506" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a7aba466f5d03e56df79bf39f20cb5ea2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_inplace_divide</definition>
        <argsstring>(ProxyObject *self, PyObject *other)</argsstring>
        <name>Proxy_inplace_divide</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="529" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="529" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a2c22a1f73ab16366ad9d1039a79e8fa4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_inplace_remainder</definition>
        <argsstring>(ProxyObject *self, PyObject *other)</argsstring>
        <name>Proxy_inplace_remainder</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="552" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="552" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a384d98c033cfa12cca336aaf4d07c107" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_inplace_power</definition>
        <argsstring>(ProxyObject *self, PyObject *other, PyObject *modulo)</argsstring>
        <name>Proxy_inplace_power</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>modulo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="574" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="574" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a46f480fde4411e49ae854b7bbaa06023" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_inplace_lshift</definition>
        <argsstring>(ProxyObject *self, PyObject *other)</argsstring>
        <name>Proxy_inplace_lshift</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="596" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="596" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a465821cfc5663a137f604a63df28f10b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_inplace_rshift</definition>
        <argsstring>(ProxyObject *self, PyObject *other)</argsstring>
        <name>Proxy_inplace_rshift</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="618" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="618" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1af1af8e4df4551f3b34cec606161ea1e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_inplace_and</definition>
        <argsstring>(ProxyObject *self, PyObject *other)</argsstring>
        <name>Proxy_inplace_and</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="640" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="640" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1ab26757030ae7be97388043acf31c716b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_inplace_xor</definition>
        <argsstring>(ProxyObject *self, PyObject *other)</argsstring>
        <name>Proxy_inplace_xor</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="662" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="662" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a2934b6719c507198501fc8645a3018dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_inplace_or</definition>
        <argsstring>(ProxyObject *self, PyObject *other)</argsstring>
        <name>Proxy_inplace_or</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="684" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="684" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1ad52befc87b1428aef31a0e185b31bd22" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_floor_divide</definition>
        <argsstring>(PyObject *o1, PyObject *o2)</argsstring>
        <name>Proxy_floor_divide</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o1</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="703" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="703" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1afc403d40aa1340f2a429773157465bce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_true_divide</definition>
        <argsstring>(PyObject *o1, PyObject *o2)</argsstring>
        <name>Proxy_true_divide</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o1</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="713" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="713" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1acebc17eb7b4654836bd04628d5d8b00a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_inplace_floor_divide</definition>
        <argsstring>(ProxyObject *self, PyObject *other)</argsstring>
        <name>Proxy_inplace_floor_divide</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="723" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="723" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a50e39a21a738e04e23fdd143e50eae80" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_inplace_true_divide</definition>
        <argsstring>(ProxyObject *self, PyObject *other)</argsstring>
        <name>Proxy_inplace_true_divide</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="745" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="745" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1afd8cbfb6d27e97b3300bf81b85ed5c5f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_index</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_index</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="767" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="767" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a5e35b81dc41d1e64cae1f17b5ec64373" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Py_ssize_t</type>
        <definition>static Py_ssize_t Proxy_length</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_length</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="776" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="776" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a0b50d1a201b974a8d812e183dd8cc463" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Proxy_contains</definition>
        <argsstring>(ProxyObject *self, PyObject *value)</argsstring>
        <name>Proxy_contains</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="785" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="785" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a7db3c559e030462bf1564bea4ca643fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_getitem</definition>
        <argsstring>(ProxyObject *self, PyObject *key)</argsstring>
        <name>Proxy_getitem</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="795" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="795" bodyend="801"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1ad39553a8b1e3af8f4a972d0a3da8f745" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Proxy_setitem</definition>
        <argsstring>(ProxyObject *self, PyObject *key, PyObject *value)</argsstring>
        <name>Proxy_setitem</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="805" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="805" bodyend="814"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1ab259df502d76a8d49ad845735ec0f767" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_dir</definition>
        <argsstring>(ProxyObject *self, PyObject *args)</argsstring>
        <name>Proxy_dir</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="818" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="818" bodyend="824"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a929cf739de38f162dd740da68836c80d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_enter</definition>
        <argsstring>(ProxyObject *self, PyObject *args, PyObject *kwds)</argsstring>
        <name>Proxy_enter</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>kwds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="828" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="828" bodyend="846"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a9add5f1a7ccfabd7860a4e718be9d9af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_exit</definition>
        <argsstring>(ProxyObject *self, PyObject *args, PyObject *kwds)</argsstring>
        <name>Proxy_exit</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>kwds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="850" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="850" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1af4b647b7b1f3e362a0cd02c7d335bf06" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_bytes</definition>
        <argsstring>(ProxyObject *self, PyObject *args)</argsstring>
        <name>Proxy_bytes</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="872" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="872" bodyend="878"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a40daa1ca460f477d877855c62cba4fd3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_reversed</definition>
        <argsstring>(ProxyObject *self, PyObject *args)</argsstring>
        <name>Proxy_reversed</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="882" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="882" bodyend="889"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a74a1e5a25345c03eba82da73249ca100" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_reduce</definition>
        <argsstring>(ProxyObject *self, PyObject *args)</argsstring>
        <name>Proxy_reduce</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="892" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="892" bodyend="898"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a6c79a3c12668d96e891384976f5b4391" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_get_name</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_get_name</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="940" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="940" bodyend="946"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1ac0e3a7ac250feb0795c1b525ec7aa12b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Proxy_set_name</definition>
        <argsstring>(ProxyObject *self, PyObject *value)</argsstring>
        <name>Proxy_set_name</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="950" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="950" bodyend="956"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1aa92a9565ec6c3c584875f4228e55e8b2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_get_qualname</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_get_qualname</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="960" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="960" bodyend="966"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a2783cf7618396b9d75e739f211340ad4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Proxy_set_qualname</definition>
        <argsstring>(ProxyObject *self, PyObject *value)</argsstring>
        <name>Proxy_set_qualname</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="970" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="970" bodyend="976"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a4680212fb17fd4bcccf786115605bed8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_get_module</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_get_module</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="980" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="980" bodyend="986"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a454533e440598f7dc144bb1c0c6182bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Proxy_set_module</definition>
        <argsstring>(ProxyObject *self, PyObject *value)</argsstring>
        <name>Proxy_set_module</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="990" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="990" bodyend="999"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a6b086b9b158ce1f51ed43fbe68f7c5cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_get_doc</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_get_doc</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1003" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1003" bodyend="1009"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1aec0e90fbc4f7a70db7bb1f60392a3e4f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Proxy_set_doc</definition>
        <argsstring>(ProxyObject *self, PyObject *value)</argsstring>
        <name>Proxy_set_doc</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1013" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1013" bodyend="1022"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1ab719cc43f44051308132d51f995a6fcd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_get_class</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_get_class</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1026" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1026" bodyend="1032"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1aa592aa6de61385955b7874935be616c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_get_annotations</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_get_annotations</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1036" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1036" bodyend="1042"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a6350c07cd7e405e9495c5d5c27312f4c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Proxy_set_annotations</definition>
        <argsstring>(ProxyObject *self, PyObject *value)</argsstring>
        <name>Proxy_set_annotations</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1046" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1046" bodyend="1052"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a763725e3ffbb12b7f8682abc44b0dc0d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_get_wrapped</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_get_wrapped</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1056" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1056" bodyend="1063"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1adbb2a4310f28a978908d2dc3bc509a98" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Proxy_set_wrapped</definition>
        <argsstring>(ProxyObject *self, PyObject *value)</argsstring>
        <name>Proxy_set_wrapped</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1067" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1067" bodyend="1076"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a5da3fcde3668f51d223ac97542cb1bb4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_get_factory</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_get_factory</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1080" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1080" bodyend="1085"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1ac506ddb0bd64a2c21372735dd4a0d120" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Proxy_set_factory</definition>
        <argsstring>(ProxyObject *self, PyObject *value)</argsstring>
        <name>Proxy_set_factory</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1089" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1089" bodyend="1098"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1af010796185f76a3681033d384c6fe0e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_getattro</definition>
        <argsstring>(ProxyObject *self, PyObject *name)</argsstring>
        <name>Proxy_getattro</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1102" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1102" bodyend="1135"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a95b4e83e886f4cef9f180d0f7793cb26" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_getattr</definition>
        <argsstring>(ProxyObject *self, PyObject *args)</argsstring>
        <name>Proxy_getattr</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1139" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1139" bodyend="1155"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a6adc79ea0f24788f93db724f50637f90" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Proxy_setattro</definition>
        <argsstring>(ProxyObject *self, PyObject *name, PyObject *value)</argsstring>
        <name>Proxy_setattro</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1159" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1159" bodyend="1168"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a6af070a2098e87ae691e5609dd0ad613" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_richcompare</definition>
        <argsstring>(ProxyObject *self, PyObject *other, int opcode)</argsstring>
        <name>Proxy_richcompare</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type>int</type>
          <declname>opcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1172" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1172" bodyend="1178"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1ab8e6889a0f4f5f136e4a2a3e7c75c56c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_iter</definition>
        <argsstring>(ProxyObject *self)</argsstring>
        <name>Proxy_iter</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1182" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1182" bodyend="1187"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1ad0f7419a158912dcd61d7dfc261d7bd5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* Proxy_call</definition>
        <argsstring>(ProxyObject *self, PyObject *args, PyObject *kwds)</argsstring>
        <name>Proxy_call</name>
        <param>
          <type><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>kwds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1191" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1191" bodyend="1197"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1af7359116c279c49557097bc239ab862e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>static PyObject* moduleinit</definition>
        <argsstring>(void)</argsstring>
        <name>moduleinit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1378" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1378" bodyend="1407"/>
      </memberdef>
      <memberdef kind="function" id="cext_8c_1a8e2bcdb054536a6430a428a966065ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyMODINIT_FUNC</type>
        <definition>PyMODINIT_FUNC initcext</definition>
        <argsstring>(void)</argsstring>
        <name>initcext</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" line="1410" column="1" bodyfile="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c" bodystart="1410" bodyend="1413"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Python.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;structmember.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PyVarObject_HEAD_INIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyVarObject_HEAD_INIT(type,<sp/>size)<sp/>PyObject_HEAD_INIT(type)<sp/>size,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(object)<sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(PyObject_TypeCheck(object,<sp/>&amp;Proxy_Type))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object<sp/>=<sp/>Proxy__ensure_wrapped((ProxyObject<sp/>*)object);<sp/>\</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!object)<sp/>return<sp/>NULL;<sp/>\</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(self)<sp/>if<sp/>(!Proxy__ensure_wrapped(self))<sp/>return<sp/>NULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_MINUS1(self)<sp/>if<sp/>(!Proxy__ensure_wrapped(self))<sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_hash_t<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="struct_proxy_object" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject_HEAD</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*dict;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*wrapped;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*factory;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}<sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref><sp/>Proxy_Type;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*identity_ref<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="normal">identity(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*value)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(value);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">PyDoc_STRVAR(identity_doc,<sp/></highlight><highlight class="stringliteral">&quot;Indentity<sp/>function:<sp/>returns<sp/>the<sp/>single<sp/>argument.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_py_method_def" kindref="compound">PyMethodDef</ref><sp/>module_functions[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;identity&quot;</highlight><highlight class="normal">,<sp/>identity,<sp/>METH_O,<sp/>identity_doc},</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL}</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy__ensure_wrapped(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*wrapped;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;wrapped)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;factory)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrapped<sp/>=<sp/>PyObject_CallFunctionObjArgs(self-&gt;factory,<sp/>NULL);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wrapped)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped<sp/>=<sp/>wrapped;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wrapped;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;Proxy<sp/>hasn&apos;t<sp/>been<sp/>initiated:<sp/>__factory__<sp/>is<sp/>missing.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_new(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref><sp/>*type,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*args,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*kwds)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*)type-&gt;tp_alloc(type,<sp/>0);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;dict<sp/>=<sp/>PyDict_New();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;factory<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Proxy_raw_init(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*factory)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(factory);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(self-&gt;factory);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;factory<sp/>=<sp/>factory;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Proxy_init(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*args,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*kwds)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*wrapped<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kwlist[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;wrapped&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyArg_ParseTupleAndKeywords(args,<sp/>kwds,<sp/></highlight><highlight class="stringliteral">&quot;O:ObjectProxy&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwlist,<sp/>&amp;wrapped))<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Proxy_raw_init(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>wrapped);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Proxy_traverse(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitproc<sp/>visit,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_VISIT(self-&gt;dict);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_VISIT(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_VISIT(self-&gt;factory);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Proxy_clear(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_CLEAR(self-&gt;dict);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_CLEAR(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_CLEAR(self-&gt;factory);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Proxy_dealloc(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject_GC_UnTrack(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy_clear(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_TYPE(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;tp_free(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_repr(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*factory_repr;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>factory_repr<sp/>=<sp/>PyObject_Repr(self-&gt;factory);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(factory_repr<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;wrapped)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyUnicode_FromFormat(</highlight><highlight class="stringliteral">&quot;&lt;%s<sp/>at<sp/>%p<sp/>wrapping<sp/>%R<sp/>at<sp/>%p<sp/>with<sp/>factory<sp/>%R&gt;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_TYPE(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;tp_name,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self-&gt;wrapped,<sp/>self-&gt;wrapped,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self-&gt;factory);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*wrapped_repr;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrapped_repr<sp/>=<sp/>PyObject_Repr(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wrapped_repr<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyString_FromFormat(</highlight><highlight class="stringliteral">&quot;&lt;%s<sp/>at<sp/>%p<sp/>wrapping<sp/>%s<sp/>at<sp/>%p<sp/>with<sp/>factory<sp/>%s&gt;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_TYPE(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;tp_name,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_AS_STRING(wrapped_repr),<sp/>self-&gt;wrapped,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_AS_STRING(factory_repr));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyUnicode_FromFormat(</highlight><highlight class="stringliteral">&quot;&lt;%s<sp/>at<sp/>%p<sp/>with<sp/>factory<sp/>%R&gt;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_TYPE(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;tp_name,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self-&gt;factory);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyString_FromFormat(</highlight><highlight class="stringliteral">&quot;&lt;%s<sp/>at<sp/>%p<sp/>with<sp/>factory<sp/>%s&gt;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_TYPE(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;tp_name,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_AS_STRING(factory_repr));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Py_hash_t<sp/>Proxy_hash(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_MINUS1(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_Hash(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_str(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_Str(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_add(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o1,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o2)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o1);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o2);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Add(o1,<sp/>o2);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_subtract(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o1,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o2)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o1);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o2);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Subtract(o1,<sp/>o2);</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_multiply(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o1,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o2)</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o1);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o2);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Multiply(o1,<sp/>o2);</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_divide(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o1,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o2)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o1);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o2);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Divide(o1,<sp/>o2);</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_remainder(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o1,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o2)</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o1);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o2);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Remainder(o1,<sp/>o2);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_divmod(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o1,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o2)</highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o1);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o2);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Divmod(o1,<sp/>o2);</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_power(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o1,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o2,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*modulo)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o1);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o2);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Power(o1,<sp/>o2,<sp/>modulo);</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_negative(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Negative(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_positive(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Positive(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_absolute(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Absolute(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Proxy_bool(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_MINUS1(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_IsTrue(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_invert(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Invert(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_lshift(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o1,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o2)</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o1);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o2);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Lshift(o1,<sp/>o2);</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_rshift(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o1,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o2)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o1);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o2);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Rshift(o1,<sp/>o2);</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_and(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o1,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o2)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o1);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o2);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_And(o1,<sp/>o2);</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_xor(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o1,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o2)</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o1);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o2);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Xor(o1,<sp/>o2);</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_or(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o1,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o2)</highlight></codeline>
<codeline lineno="384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o1);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o2);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Or(o1,<sp/>o2);</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_int(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Int(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_long(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Long(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_float(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Float(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_oct(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_py_number_methods" kindref="compound">PyNumberMethods</ref><sp/>*nb;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nb<sp/>=<sp/>self-&gt;wrapped-&gt;ob_type-&gt;tp_as_number)<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb-&gt;nb_oct<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;oct()<sp/>argument<sp/>can&apos;t<sp/>be<sp/>converted<sp/>to<sp/>oct&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*nb-&gt;nb_oct)(</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped);</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_hex(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_py_number_methods" kindref="compound">PyNumberMethods</ref><sp/>*nb;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nb<sp/>=<sp/>self-&gt;wrapped-&gt;ob_type-&gt;tp_as_number)<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb-&gt;nb_hex<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;hex()<sp/>argument<sp/>can&apos;t<sp/>be<sp/>converted<sp/>to<sp/>hex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*nb-&gt;nb_hex)(</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped);</highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_inplace_add(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*other)</highlight></codeline>
<codeline lineno="464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(other);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>PyNumber_InPlaceAdd(self-&gt;wrapped,<sp/>other);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped<sp/>=<sp/>object;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_inplace_subtract(</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*other)</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(other);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>PyNumber_InPlaceSubtract(self-&gt;wrapped,<sp/>other);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped<sp/>=<sp/>object;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_inplace_multiply(</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*other)</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(other);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>PyNumber_InPlaceMultiply(self-&gt;wrapped,<sp/>other);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped<sp/>=<sp/>object;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_inplace_divide(</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*other)</highlight></codeline>
<codeline lineno="531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(other);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>PyNumber_InPlaceDivide(self-&gt;wrapped,<sp/>other);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped<sp/>=<sp/>object;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_inplace_remainder(</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*other)</highlight></codeline>
<codeline lineno="554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(other);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>PyNumber_InPlaceRemainder(self-&gt;wrapped,<sp/>other);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped<sp/>=<sp/>object;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_inplace_power(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*other,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*modulo)</highlight></codeline>
<codeline lineno="576"><highlight class="normal">{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(other);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>PyNumber_InPlacePower(self-&gt;wrapped,<sp/>other,<sp/>modulo);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped<sp/>=<sp/>object;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_inplace_lshift(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*other)</highlight></codeline>
<codeline lineno="598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(other);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>PyNumber_InPlaceLshift(self-&gt;wrapped,<sp/>other);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped<sp/>=<sp/>object;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_inplace_rshift(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*other)</highlight></codeline>
<codeline lineno="620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(other);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>PyNumber_InPlaceRshift(self-&gt;wrapped,<sp/>other);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped<sp/>=<sp/>object;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_inplace_and(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*other)</highlight></codeline>
<codeline lineno="642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(other);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>PyNumber_InPlaceAnd(self-&gt;wrapped,<sp/>other);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped<sp/>=<sp/>object;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_inplace_xor(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*other)</highlight></codeline>
<codeline lineno="664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(other);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>PyNumber_InPlaceXor(self-&gt;wrapped,<sp/>other);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped<sp/>=<sp/>object;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_inplace_or(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*other)</highlight></codeline>
<codeline lineno="686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(other);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>PyNumber_InPlaceOr(self-&gt;wrapped,<sp/>other);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped<sp/>=<sp/>object;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_floor_divide(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o1,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o2)</highlight></codeline>
<codeline lineno="704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o1);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o2);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_FloorDivide(o1,<sp/>o2);</highlight></codeline>
<codeline lineno="709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_true_divide(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o1,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*o2)</highlight></codeline>
<codeline lineno="714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o1);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(o2);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_TrueDivide(o1,<sp/>o2);</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_inplace_floor_divide(</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*other)</highlight></codeline>
<codeline lineno="725"><highlight class="normal">{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(other);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>PyNumber_InPlaceFloorDivide(self-&gt;wrapped,<sp/>other);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped<sp/>=<sp/>object;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_inplace_true_divide(</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*other)</highlight></codeline>
<codeline lineno="747"><highlight class="normal">{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__WRAPPED_REPLACE_OR_RETURN_NULL(other);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>PyNumber_InPlaceTrueDivide(self-&gt;wrapped,<sp/>other);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped<sp/>=<sp/>object;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_index(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="768"><highlight class="normal">{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyNumber_Index(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>Proxy_length(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_MINUS1(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_Length(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Proxy_contains(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*value)</highlight></codeline>
<codeline lineno="787"><highlight class="normal">{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_MINUS1(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PySequence_Contains(self-&gt;wrapped,<sp/>value);</highlight></codeline>
<codeline lineno="791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_getitem(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*key)</highlight></codeline>
<codeline lineno="797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_GetItem(self-&gt;wrapped,<sp/>key);</highlight></codeline>
<codeline lineno="801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Proxy_setitem(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*key,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_MINUS1(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_DelItem(self-&gt;wrapped,<sp/>key);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_SetItem(self-&gt;wrapped,<sp/>key,<sp/>value);</highlight></codeline>
<codeline lineno="814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_dir(</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*args)</highlight></codeline>
<codeline lineno="820"><highlight class="normal">{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_Dir(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_enter(</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*args,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*kwds)</highlight></codeline>
<codeline lineno="830"><highlight class="normal">{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*method<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*result<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>method<sp/>=<sp/>PyObject_GetAttrString(self-&gt;wrapped,<sp/></highlight><highlight class="stringliteral">&quot;__enter__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!method)</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PyObject_Call(method,<sp/>args,<sp/>kwds);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(method);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_exit(</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*args,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*kwds)</highlight></codeline>
<codeline lineno="852"><highlight class="normal">{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*method<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*result<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>method<sp/>=<sp/>PyObject_GetAttrString(self-&gt;wrapped,<sp/></highlight><highlight class="stringliteral">&quot;__exit__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!method)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PyObject_Call(method,<sp/>args,<sp/>kwds);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(method);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_bytes(</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*args)</highlight></codeline>
<codeline lineno="874"><highlight class="normal">{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_Bytes(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_reversed(</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*args)</highlight></codeline>
<codeline lineno="884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_CallFunctionObjArgs((<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)&amp;PyReversed_Type,</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self-&gt;wrapped,<sp/>NULL);</highlight></codeline>
<codeline lineno="889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_reduce(</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*args)</highlight></codeline>
<codeline lineno="894"><highlight class="normal">{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Py_BuildValue(</highlight><highlight class="stringliteral">&quot;(O(O))&quot;</highlight><highlight class="normal">,<sp/>identity_ref,<sp/>self-&gt;wrapped);</highlight></codeline>
<codeline lineno="898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_round(</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*args)</highlight></codeline>
<codeline lineno="905"><highlight class="normal">{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*module<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*dict<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*round<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*result<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>module<sp/>=<sp/>PyImport_ImportModule(</highlight><highlight class="stringliteral">&quot;builtins&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!module)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>PyModule_GetDict(module);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>round<sp/>=<sp/>PyDict_GetItemString(dict,<sp/></highlight><highlight class="stringliteral">&quot;round&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!round)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(module);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(round);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(module);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PyObject_CallFunctionObjArgs(round,<sp/>self-&gt;wrapped,<sp/>NULL);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(round);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="935"><highlight class="normal">}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_get_name(</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="942"><highlight class="normal">{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_GetAttrString(self-&gt;wrapped,<sp/></highlight><highlight class="stringliteral">&quot;__name__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Proxy_set_name(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*value)</highlight></codeline>
<codeline lineno="952"><highlight class="normal">{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_MINUS1(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_SetAttrString(self-&gt;wrapped,<sp/></highlight><highlight class="stringliteral">&quot;__name__&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="956"><highlight class="normal">}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_get_qualname(</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="962"><highlight class="normal">{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_GetAttrString(self-&gt;wrapped,<sp/></highlight><highlight class="stringliteral">&quot;__qualname__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="966"><highlight class="normal">}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Proxy_set_qualname(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*value)</highlight></codeline>
<codeline lineno="972"><highlight class="normal">{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_MINUS1(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_SetAttrString(self-&gt;wrapped,<sp/></highlight><highlight class="stringliteral">&quot;__qualname__&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_get_module(</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="982"><highlight class="normal">{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_GetAttrString(self-&gt;wrapped,<sp/></highlight><highlight class="stringliteral">&quot;__module__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Proxy_set_module(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*value)</highlight></codeline>
<codeline lineno="992"><highlight class="normal">{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_MINUS1(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(self-&gt;wrapped,<sp/></highlight><highlight class="stringliteral">&quot;__module__&quot;</highlight><highlight class="normal">,<sp/>value)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyDict_SetItemString(self-&gt;dict,<sp/></highlight><highlight class="stringliteral">&quot;__module__&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="999"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_get_doc(</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1005"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_GetAttrString(self-&gt;wrapped,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Proxy_set_doc(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*value)</highlight></codeline>
<codeline lineno="1015"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_MINUS1(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(self-&gt;wrapped,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">,<sp/>value)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyDict_SetItemString(self-&gt;dict,<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_get_class(</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1028"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_GetAttrString(self-&gt;wrapped,<sp/></highlight><highlight class="stringliteral">&quot;__class__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_get_annotations(</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1038"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_GetAttrString(self-&gt;wrapped,<sp/></highlight><highlight class="stringliteral">&quot;__annotations__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Proxy_set_annotations(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*value)</highlight></codeline>
<codeline lineno="1048"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_MINUS1(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_SetAttrString(self-&gt;wrapped,<sp/></highlight><highlight class="stringliteral">&quot;__annotations__&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_get_wrapped(</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1058"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Proxy_set_wrapped(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*value)</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>Py_INCREF(value);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;wrapped<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_get_factory(</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1082"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(self-&gt;factory);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;factory;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Proxy_set_factory(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*value)</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>Py_INCREF(value);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(self-&gt;factory);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;factory<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_getattro(</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*name)</highlight></codeline>
<codeline lineno="1104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*result<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*getattr_str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>PyObject_GenericGetAttr((<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>object;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!getattr_str)<sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getattr_str<sp/>=<sp/>PyUnicode_InternFromString(</highlight><highlight class="stringliteral">&quot;__getattr__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getattr_str<sp/>=<sp/>PyString_InternFromString(</highlight><highlight class="stringliteral">&quot;__getattr__&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>PyObject_GenericGetAttr((<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>getattr_str);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PyObject_CallFunctionObjArgs(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>name,<sp/>NULL);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_getattr(</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*args)</highlight></codeline>
<codeline lineno="1141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*name<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyArg_ParseTuple(args,<sp/></highlight><highlight class="stringliteral">&quot;U:__getattr__&quot;</highlight><highlight class="normal">,<sp/>&amp;name))</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyArg_ParseTuple(args,<sp/></highlight><highlight class="stringliteral">&quot;S:__getattr__&quot;</highlight><highlight class="normal">,<sp/>&amp;name))</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_GetAttr(self-&gt;wrapped,<sp/>name);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Proxy_setattro(</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*name,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*value)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_HasAttr((<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)Py_TYPE(</highlight><highlight class="keyword">self</highlight><highlight class="normal">),<sp/>name))</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_GenericSetAttr((<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>name,<sp/>value);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_MINUS1(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_SetAttr(self-&gt;wrapped,<sp/>name,<sp/>value);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_richcompare(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*other,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opcode)</highlight></codeline>
<codeline lineno="1174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_RichCompare(self-&gt;wrapped,<sp/>other,<sp/>opcode);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_iter(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_GetIter(self-&gt;wrapped);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*Proxy_call(</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*args,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*kwds)</highlight></codeline>
<codeline lineno="1193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy__ENSURE_WRAPPED_OR_RETURN_NULL(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyObject_Call(self-&gt;wrapped,<sp/>args,<sp/>kwds);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_py_number_methods" kindref="compound">PyNumberMethods</ref><sp/>Proxy_as_number<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_add,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_add*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_subtract,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_subtract*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_multiply,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_multiply*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_divide,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_remainder,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_remainder*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_divmod,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_divmod*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>(ternaryfunc)Proxy_power,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_power*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>(unaryfunc)Proxy_negative,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_negative*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>(unaryfunc)Proxy_positive,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_positive*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>(unaryfunc)Proxy_absolute,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_absolute*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>(inquiry)Proxy_bool,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_nonzero/nb_bool*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>(unaryfunc)Proxy_invert,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_invert*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_lshift,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_lshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_rshift,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_rshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_and,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_and*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_xor,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_xor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_or,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_or*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_coerce*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1224"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>(unaryfunc)Proxy_int,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_int*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>(unaryfunc)Proxy_long,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_long*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>(unaryfunc)Proxy_long,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_int*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_long/nb_reserved*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>(unaryfunc)Proxy_float,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_float*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/>(unaryfunc)Proxy_oct,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_oct*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/>(unaryfunc)Proxy_hex,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_hex*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_inplace_add,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_inplace_add*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_inplace_subtract,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_inplace_subtract*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_inplace_multiply,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_inplace_multiply*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_inplace_divide,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_inplace_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_inplace_remainder,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_inplace_remainder*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>(ternaryfunc)Proxy_inplace_power,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_inplace_power*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_inplace_lshift,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_inplace_lshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_inplace_rshift,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_inplace_rshift*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_inplace_and,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_inplace_and*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_inplace_xor,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_inplace_xor*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_inplace_or,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_inplace_or*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_floor_divide,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_floor_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_true_divide,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_true_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_inplace_floor_divide,<sp/></highlight><highlight class="comment">/*nb_inplace_floor_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_inplace_true_divide,<sp/><sp/></highlight><highlight class="comment">/*nb_inplace_true_divide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>(unaryfunc)Proxy_index,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*nb_index*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_py_sequence_methods" kindref="compound">PySequenceMethods</ref><sp/>Proxy_as_sequence<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>(lenfunc)Proxy_length,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*sq_length*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*sq_concat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*sq_repeat*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*sq_item*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*sq_slice*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*sq_ass_item*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*sq_ass_slice*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>(objobjproc)Proxy_contains,<sp/></highlight><highlight class="comment">/*<sp/>sq_contains<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_py_mapping_methods" kindref="compound">PyMappingMethods</ref><sp/>Proxy_as_mapping<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>(lenfunc)Proxy_length,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*mp_length*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>(binaryfunc)Proxy_getitem,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*mp_subscript*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>(objobjargproc)Proxy_setitem,<sp/></highlight><highlight class="comment">/*mp_ass_subscript*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_py_method_def" kindref="compound">PyMethodDef</ref><sp/>Proxy_methods[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;__dir__&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>(PyCFunction)Proxy_dir,<sp/>METH_NOARGS,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;__enter__&quot;</highlight><highlight class="normal">,<sp/><sp/>(PyCFunction)Proxy_enter,</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METH_VARARGS<sp/>|<sp/>METH_KEYWORDS,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;__exit__&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>(PyCFunction)Proxy_exit,</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METH_VARARGS<sp/>|<sp/>METH_KEYWORDS,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;__getattr__&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)Proxy_getattr,</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>METH_VARARGS<sp/>,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;__bytes__&quot;</highlight><highlight class="normal">,<sp/><sp/>(PyCFunction)Proxy_bytes,<sp/>METH_NOARGS,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;__reversed__&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)Proxy_reversed,<sp/>METH_NOARGS,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;__reduce__&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)Proxy_reduce,<sp/>METH_NOARGS,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;__reduce_ex__&quot;</highlight><highlight class="normal">,<sp/>(PyCFunction)Proxy_reduce,<sp/>METH_O,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1285"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;__round__&quot;</highlight><highlight class="normal">,<sp/><sp/>(PyCFunction)Proxy_round,<sp/>METH_NOARGS,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1287"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>NULL,<sp/>NULL<sp/>},</highlight></codeline>
<codeline lineno="1289"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_py_get_set_def" kindref="compound">PyGetSetDef</ref><sp/>Proxy_getset[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;__name__&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(getter)Proxy_get_name,</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(setter)Proxy_set_name,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;__qualname__&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(getter)Proxy_get_qualname,</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(setter)Proxy_set_qualname,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;__module__&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(getter)Proxy_get_module,</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(setter)Proxy_set_module,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;__doc__&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(getter)Proxy_get_doc,</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(setter)Proxy_set_doc,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;__class__&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(getter)Proxy_get_class,</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;__annotations__&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>(getter)Proxy_get_annotations,</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(setter)Proxy_set_annotations,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;__wrapped__&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(getter)Proxy_get_wrapped,</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(setter)Proxy_set_wrapped,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;__factory__&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(getter)Proxy_get_factory,</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(setter)Proxy_set_factory,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>NULL<sp/>},</highlight></codeline>
<codeline lineno="1309"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref><sp/>Proxy_Type<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>PyVarObject_HEAD_INIT(NULL,<sp/>0)</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Proxy&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_name*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_basicsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_itemsize*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>methods<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>(destructor)Proxy_dealloc,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_dealloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_print*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_getattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_setattr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_compare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>(unaryfunc)Proxy_repr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_repr*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;Proxy_as_number,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_as_number*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;Proxy_as_sequence,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_as_sequence*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;Proxy_as_mapping,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_as_mapping*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/>(hashfunc)Proxy_hash,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_hash*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>(ternaryfunc)Proxy_call,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_call*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>(unaryfunc)Proxy_str,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_str*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>(getattrofunc)Proxy_getattro,<sp/><sp/><sp/></highlight><highlight class="comment">/*tp_getattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>(setattrofunc)Proxy_setattro,<sp/><sp/><sp/></highlight><highlight class="comment">/*tp_setattro*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_as_buffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_TPFLAGS_DEFAULT<sp/>|<sp/>Py_TPFLAGS_BASETYPE<sp/>|<sp/>Py_TPFLAGS_HAVE_GC<sp/>|<sp/>Py_TPFLAGS_CHECKTYPES,</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_flags*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_TPFLAGS_DEFAULT<sp/>|<sp/>Py_TPFLAGS_BASETYPE<sp/>|<sp/>Py_TPFLAGS_HAVE_GC,</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_flags*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_doc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>(traverseproc)Proxy_traverse,<sp/><sp/><sp/></highlight><highlight class="comment">/*tp_traverse*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>(inquiry)Proxy_clear,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_clear*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>(richcmpfunc)Proxy_richcompare,<sp/></highlight><highlight class="comment">/*tp_richcompare*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_weaklistoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>(getiterfunc)Proxy_iter,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_iter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_iternext*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy_methods,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_methods*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_members*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy_getset,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_getset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_base*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_dict*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_descr_get*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_descr_set*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>offsetof(<ref refid="struct_proxy_object" kindref="compound">ProxyObject</ref>,<sp/>dict),<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_dictoffset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>(initproc)Proxy_init,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_init*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>PyType_GenericAlloc,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_alloc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>Proxy_new,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_new*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject_GC_Del,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_free*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tp_is_gc*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_py_module_def" kindref="compound">PyModuleDef</ref><sp/>moduledef<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>PyModuleDef_HEAD_INIT,</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;lazy_object_proxy.cext&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">/*<sp/>m_name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>m_doc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>-1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>m_size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>module_functions,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>m_methods<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>m_reload<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>m_traverse<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>m_clear<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>m_free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*</highlight></codeline>
<codeline lineno="1378"><highlight class="normal">moduleinit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*module;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*dict;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/>module<sp/>=<sp/>PyModule_Create(&amp;moduledef);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>module<sp/>=<sp/>Py_InitModule3(</highlight><highlight class="stringliteral">&quot;lazy_object_proxy.cext&quot;</highlight><highlight class="normal">,<sp/>module_functions,<sp/>NULL);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(module<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyType_Ready(&amp;Proxy_Type)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>PyModule_GetDict(module);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>identity_ref<sp/>=<sp/>PyDict_GetItemString(dict,<sp/></highlight><highlight class="stringliteral">&quot;identity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(identity_ref<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(identity_ref);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(&amp;Proxy_Type);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/>PyModule_AddObject(module,<sp/></highlight><highlight class="stringliteral">&quot;Proxy&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)&amp;Proxy_Type);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>module;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&lt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal">PyMODINIT_FUNC<sp/>initcext(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>moduleinit();</highlight></codeline>
<codeline lineno="1413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal">PyMODINIT_FUNC<sp/>PyInit_cext(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>moduleinit();</highlight></codeline>
<codeline lineno="1418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="venv/lib/python3.6/site-packages/lazy_object_proxy/cext.c"/>
  </compounddef>
</doxygen>
