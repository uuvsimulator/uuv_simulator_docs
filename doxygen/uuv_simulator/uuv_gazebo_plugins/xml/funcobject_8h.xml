<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="funcobject_8h" kind="file" language="C++">
    <compoundname>funcobject.h</compoundname>
    <includedby refid="_python_8h" local="yes">/usr/include/python3.6m/Python.h</includedby>
    <invincdepgraph>
      <node id="2963">
        <label>/usr/include/python3.6m/Imaging.h</label>
        <link refid="_imaging_8h_source"/>
      </node>
      <node id="2964">
        <label>/usr/include/python3.6m/pgenheaders.h</label>
        <link refid="pgenheaders_8h_source"/>
      </node>
      <node id="2966">
        <label>venv/lib/python3.6/site-packages/lxml/includes/etree_defs.h</label>
        <link refid="etree__defs_8h_source"/>
      </node>
      <node id="2961">
        <label>/usr/include/python3.6m/Python.h</label>
        <link refid="_python_8h_source"/>
        <childnode refid="2962" relation="include">
        </childnode>
        <childnode refid="2964" relation="include">
        </childnode>
        <childnode refid="2965" relation="include">
        </childnode>
        <childnode refid="2966" relation="include">
        </childnode>
        <childnode refid="2967" relation="include">
        </childnode>
      </node>
      <node id="2967">
        <label>venv/lib/python3.6/site-packages/lxml/lxml.etree_api.h</label>
        <link refid="lxml_8etree__api_8h_source"/>
      </node>
      <node id="2962">
        <label>/usr/include/python3.6m/ImPlatform.h</label>
        <link refid="_im_platform_8h_source"/>
        <childnode refid="2963" relation="include">
        </childnode>
      </node>
      <node id="2960">
        <label>/usr/include/python3.6m/funcobject.h</label>
        <link refid="funcobject_8h"/>
        <childnode refid="2961" relation="include">
        </childnode>
      </node>
      <node id="2965">
        <label>venv/lib/python3.6/site-packages/lxml/etree_api.h</label>
        <link refid="etree__api_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_py_function_object" prot="public">PyFunctionObject</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="funcobject_8h_1a9c583775f9819534a68911dc0ae8917e" prot="public" static="no">
        <name>PyFunction_Check</name>
        <param><defname>op</defname></param>
        <initializer>(Py_TYPE(op) == &amp;PyFunction_Type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/funcobject.h" line="45" column="9" bodyfile="/usr/include/python3.6m/funcobject.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="funcobject_8h_1a16b07593f8c716b95a151b2ba8f938e6" prot="public" static="no">
        <name>PyFunction_GET_CODE</name>
        <param><defname>func</defname></param>
        <initializer>(((<ref refid="struct_py_function_object" kindref="compound">PyFunctionObject</ref> *)func) -&gt; func_code)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/funcobject.h" line="77" column="9" bodyfile="/usr/include/python3.6m/funcobject.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="funcobject_8h_1a50dda753d3567cf4bb1bd435eaac3f35" prot="public" static="no">
        <name>PyFunction_GET_GLOBALS</name>
        <param><defname>func</defname></param>
        <initializer>(((<ref refid="struct_py_function_object" kindref="compound">PyFunctionObject</ref> *)func) -&gt; func_globals)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/funcobject.h" line="79" column="9" bodyfile="/usr/include/python3.6m/funcobject.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="funcobject_8h_1a4b915c1b1b29034f6bced46b47dccbc5" prot="public" static="no">
        <name>PyFunction_GET_MODULE</name>
        <param><defname>func</defname></param>
        <initializer>(((<ref refid="struct_py_function_object" kindref="compound">PyFunctionObject</ref> *)func) -&gt; func_module)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/funcobject.h" line="81" column="9" bodyfile="/usr/include/python3.6m/funcobject.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="funcobject_8h_1ae06653c64dc188592b25ada66a1a04de" prot="public" static="no">
        <name>PyFunction_GET_DEFAULTS</name>
        <param><defname>func</defname></param>
        <initializer>(((<ref refid="struct_py_function_object" kindref="compound">PyFunctionObject</ref> *)func) -&gt; func_defaults)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/funcobject.h" line="83" column="9" bodyfile="/usr/include/python3.6m/funcobject.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="funcobject_8h_1aca3ce06a569f45d90452497660a49781" prot="public" static="no">
        <name>PyFunction_GET_KW_DEFAULTS</name>
        <param><defname>func</defname></param>
        <initializer>(((<ref refid="struct_py_function_object" kindref="compound">PyFunctionObject</ref> *)func) -&gt; func_kwdefaults)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/funcobject.h" line="85" column="9" bodyfile="/usr/include/python3.6m/funcobject.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="funcobject_8h_1a782b2bc930d7d68656a6ac44a0b52666" prot="public" static="no">
        <name>PyFunction_GET_CLOSURE</name>
        <param><defname>func</defname></param>
        <initializer>(((<ref refid="struct_py_function_object" kindref="compound">PyFunctionObject</ref> *)func) -&gt; func_closure)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/funcobject.h" line="87" column="9" bodyfile="/usr/include/python3.6m/funcobject.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="funcobject_8h_1ad3938d2019882bc727a8b81c706cb00e" prot="public" static="no">
        <name>PyFunction_GET_ANNOTATIONS</name>
        <param><defname>func</defname></param>
        <initializer>(((<ref refid="struct_py_function_object" kindref="compound">PyFunctionObject</ref> *)func) -&gt; func_annotations)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/funcobject.h" line="89" column="9" bodyfile="/usr/include/python3.6m/funcobject.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="funcobject_8h_1ac8a9921ce46c3103e2831b58cbea7d40" prot="public" static="no" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> <ref refid="struct__object" kindref="compound">PyObject</ref> **</type>
        <definition>PyObject PyObject** args</definition>
        <argsstring></argsstring>
        <name>args</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/funcobject.h" line="64" column="1" bodyfile="/usr/include/python3.6m/funcobject.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="funcobject_8h_1ae41a7f26a057e9cc3ebebb8a9cf5c1ab" prot="public" static="no" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> <ref refid="struct__object" kindref="compound">PyObject</ref> Py_ssize_t</type>
        <definition>PyObject Py_ssize_t nargs</definition>
        <argsstring></argsstring>
        <name>nargs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/funcobject.h" line="65" column="1" bodyfile="/usr/include/python3.6m/funcobject.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="funcobject_8h_1a2f7c3a61ea26b5739d7c619abdf0d161" prot="public" static="no" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> <ref refid="struct__object" kindref="compound">PyObject</ref> Py_ssize_t <ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>PyObject PyObject Py_ssize_t PyObject* kwargs</definition>
        <argsstring></argsstring>
        <name>kwargs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/funcobject.h" line="66" column="1" bodyfile="/usr/include/python3.6m/funcobject.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="funcobject_8h_1a3ea7b58e96ec5abff8193cf9373d7137" prot="public" static="no" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> **</type>
        <definition>PyObject** stack</definition>
        <argsstring></argsstring>
        <name>stack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/funcobject.h" line="70" column="1" bodyfile="/usr/include/python3.6m/funcobject.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="funcobject_8h_1aa3b7466a9a0f1d69413895abd54297d2" prot="public" static="no" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> Py_ssize_t <ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>PyObject Py_ssize_t PyObject* kwnames</definition>
        <argsstring></argsstring>
        <name>kwnames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/funcobject.h" line="72" column="1" bodyfile="/usr/include/python3.6m/funcobject.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="funcobject_8h_1ac03e152c2570d3b1b7b56153db3ae1d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_DATA</definition>
        <argsstring>(PyTypeObject) PyFunction_Type</argsstring>
        <name>PyAPI_DATA</name>
        <param>
          <type><ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/funcobject.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="funcobject_8h_1a3ce0044bec8796c7e3688507896504fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(PyObject *) PyFunction_New(PyObject *</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/funcobject.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="funcobject_8h_1a85c1939d5b96ea7ec5d2eb51e45be72c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(int) PyFunction_SetDefaults(PyObject *</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/funcobject.h" line="53" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>object<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_FUNCOBJECT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_FUNCOBJECT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>objects<sp/>and<sp/>code<sp/>objects<sp/>should<sp/>not<sp/>be<sp/>confused<sp/>with<sp/>each<sp/>other:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Function<sp/>objects<sp/>are<sp/>created<sp/>by<sp/>the<sp/>execution<sp/>of<sp/>the<sp/>&apos;def&apos;<sp/>statement.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>They<sp/>reference<sp/>a<sp/>code<sp/>object<sp/>in<sp/>their<sp/>__code__<sp/>attribute,<sp/>which<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>purely<sp/>syntactic<sp/>object,<sp/>i.e.<sp/>nothing<sp/>more<sp/>than<sp/>a<sp/>compiled<sp/>version<sp/>of<sp/>some</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>source<sp/>code<sp/>lines.<sp/><sp/>There<sp/>is<sp/>one<sp/>code<sp/>object<sp/>per<sp/>source<sp/>code<sp/>&quot;fragment&quot;,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>but<sp/>each<sp/>code<sp/>object<sp/>can<sp/>be<sp/>referenced<sp/>by<sp/>zero<sp/>or<sp/>many<sp/>function<sp/>objects</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>depending<sp/>only<sp/>on<sp/>how<sp/>many<sp/>times<sp/>the<sp/>&apos;def&apos;<sp/>statement<sp/>in<sp/>the<sp/>source<sp/>was</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>executed<sp/>so<sp/>far.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="struct_py_function_object" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject_HEAD</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*func_code;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>code<sp/>object,<sp/>the<sp/>__code__<sp/>attribute<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*func_globals;<sp/></highlight><highlight class="comment">/*<sp/>A<sp/>dictionary<sp/>(other<sp/>mappings<sp/>won&apos;t<sp/>do)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*func_defaults;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NULL<sp/>or<sp/>a<sp/>tuple<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*func_kwdefaults;<sp/><sp/></highlight><highlight class="comment">/*<sp/>NULL<sp/>or<sp/>a<sp/>dict<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*func_closure;<sp/></highlight><highlight class="comment">/*<sp/>NULL<sp/>or<sp/>a<sp/>tuple<sp/>of<sp/>cell<sp/>objects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*func_doc;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>__doc__<sp/>attribute,<sp/>can<sp/>be<sp/>anything<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*func_name;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>__name__<sp/>attribute,<sp/>a<sp/>string<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*func_dict;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>__dict__<sp/>attribute,<sp/>a<sp/>dict<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*func_weakreflist;<sp/></highlight><highlight class="comment">/*<sp/>List<sp/>of<sp/>weak<sp/>references<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*func_module;<sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>__module__<sp/>attribute,<sp/>can<sp/>be<sp/>anything<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*func_annotations;<sp/></highlight><highlight class="comment">/*<sp/>Annotations,<sp/>a<sp/>dict<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*func_qualname;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>qualified<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invariant:</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>func_closure<sp/>contains<sp/>the<sp/>bindings<sp/>for<sp/>func_code-&gt;co_freevars,<sp/>so</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>PyTuple_Size(func_closure)<sp/>==<sp/>PyCode_GetNumFree(func_code)</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>(func_closure<sp/>may<sp/>be<sp/>NULL<sp/>if<sp/>PyCode_GetNumFree(func_code)<sp/>==<sp/>0).</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">}<sp/><ref refid="struct_py_function_object" kindref="compound">PyFunctionObject</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">PyAPI_DATA(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref>)<sp/>PyFunction_Type;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyFunction_Check(op)<sp/>(Py_TYPE(op)<sp/>==<sp/>&amp;PyFunction_Type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyFunction_New(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyFunction_NewWithQualName(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyFunction_GetCode(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyFunction_GetGlobals(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyFunction_GetModule(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyFunction_GetDefaults(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>PyFunction_SetDefaults(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyFunction_GetKwDefaults(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="55"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>PyFunction_SetKwDefaults(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyFunction_GetClosure(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>PyFunction_SetClosure(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyFunction_GetAnnotations(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>PyFunction_SetAnnotations(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>_PyFunction_FastCallDict(</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*func,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>**args,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>nargs,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*kwargs);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>_PyFunction_FastCallKeywords(</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*func,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>**stack,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>nargs,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*kwnames);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macros<sp/>for<sp/>direct<sp/>access<sp/>to<sp/>these<sp/>values.<sp/>Type<sp/>checks<sp/>are<sp/>*not*</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/>done,<sp/>so<sp/>use<sp/>with<sp/>care.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyFunction_GET_CODE(func)<sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((PyFunctionObject<sp/>*)func)<sp/>-&gt;<sp/>func_code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyFunction_GET_GLOBALS(func)<sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((PyFunctionObject<sp/>*)func)<sp/>-&gt;<sp/>func_globals)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyFunction_GET_MODULE(func)<sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((PyFunctionObject<sp/>*)func)<sp/>-&gt;<sp/>func_module)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyFunction_GET_DEFAULTS(func)<sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((PyFunctionObject<sp/>*)func)<sp/>-&gt;<sp/>func_defaults)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyFunction_GET_KW_DEFAULTS(func)<sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((PyFunctionObject<sp/>*)func)<sp/>-&gt;<sp/>func_kwdefaults)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyFunction_GET_CLOSURE(func)<sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((PyFunctionObject<sp/>*)func)<sp/>-&gt;<sp/>func_closure)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyFunction_GET_ANNOTATIONS(func)<sp/>\</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((PyFunctionObject<sp/>*)func)<sp/>-&gt;<sp/>func_annotations)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>classmethod<sp/>and<sp/>staticmethod<sp/>types<sp/>lives<sp/>here,<sp/>too<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">PyAPI_DATA(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref>)<sp/>PyClassMethod_Type;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">PyAPI_DATA(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref>)<sp/>PyStaticMethod_Type;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyClassMethod_New(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyStaticMethod_New(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!Py_FUNCOBJECT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>Py_LIMITED_API<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/usr/include/python3.6m/funcobject.h"/>
  </compounddef>
</doxygen>
