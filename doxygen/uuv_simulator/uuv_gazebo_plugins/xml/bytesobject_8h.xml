<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="bytesobject_8h" kind="file" language="C++">
    <compoundname>bytesobject.h</compoundname>
    <includes local="no">stdarg.h</includes>
    <includedby refid="_python_8h" local="yes">/usr/include/python3.6m/Python.h</includedby>
    <incdepgraph>
      <node id="2805">
        <label>stdarg.h</label>
      </node>
      <node id="2804">
        <label>/usr/include/python3.6m/bytesobject.h</label>
        <link refid="bytesobject_8h"/>
        <childnode refid="2805" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2809">
        <label>/usr/include/python3.6m/Imaging.h</label>
        <link refid="_imaging_8h_source"/>
      </node>
      <node id="2810">
        <label>/usr/include/python3.6m/pgenheaders.h</label>
        <link refid="pgenheaders_8h_source"/>
      </node>
      <node id="2812">
        <label>venv/lib/python3.6/site-packages/lxml/includes/etree_defs.h</label>
        <link refid="etree__defs_8h_source"/>
      </node>
      <node id="2807">
        <label>/usr/include/python3.6m/Python.h</label>
        <link refid="_python_8h_source"/>
        <childnode refid="2808" relation="include">
        </childnode>
        <childnode refid="2810" relation="include">
        </childnode>
        <childnode refid="2811" relation="include">
        </childnode>
        <childnode refid="2812" relation="include">
        </childnode>
        <childnode refid="2813" relation="include">
        </childnode>
      </node>
      <node id="2813">
        <label>venv/lib/python3.6/site-packages/lxml/lxml.etree_api.h</label>
        <link refid="lxml_8etree__api_8h_source"/>
      </node>
      <node id="2806">
        <label>/usr/include/python3.6m/bytesobject.h</label>
        <link refid="bytesobject_8h"/>
        <childnode refid="2807" relation="include">
        </childnode>
      </node>
      <node id="2808">
        <label>/usr/include/python3.6m/ImPlatform.h</label>
        <link refid="_im_platform_8h_source"/>
        <childnode refid="2809" relation="include">
        </childnode>
      </node>
      <node id="2811">
        <label>venv/lib/python3.6/site-packages/lxml/etree_api.h</label>
        <link refid="etree__api_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_py_bytes_object" prot="public">PyBytesObject</innerclass>
    <innerclass refid="struct___py_bytes_writer" prot="public">_PyBytesWriter</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="bytesobject_8h_1adced19097f844a442fbd6a052885f0cb" prot="public" static="no">
        <name>PyBytes_Check</name>
        <param><defname>op</defname></param>
        <initializer>PyType_FastSubclass(Py_TYPE(op), Py_TPFLAGS_BYTES_SUBCLASS)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="47" column="9" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bytesobject_8h_1a8f9325bd3eed953b0b7dc34a968a4ab3" prot="public" static="no">
        <name>PyBytes_CheckExact</name>
        <param><defname>op</defname></param>
        <initializer>(Py_TYPE(op) == &amp;PyBytes_Type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="49" column="9" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bytesobject_8h_1a34c03891288d3725702ce4cb46503e1d" prot="public" static="no">
        <name>PyBytes_AS_STRING</name>
        <param><defname>op</defname></param>
        <initializer>(assert(PyBytes_Check(op)), \
                                (((<ref refid="struct_py_bytes_object" kindref="compound">PyBytesObject</ref> *)(op))-&gt;ob_sval))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="87" column="9" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bytesobject_8h_1a4e2e37660f172f177c328f13c25a80a2" prot="public" static="no">
        <name>PyBytes_GET_SIZE</name>
        <param><defname>op</defname></param>
        <initializer>(assert(PyBytes_Check(op)),Py_SIZE(op))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="89" column="9" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bytesobject_8h_1a703f3fa2353d49a61894544a30f4c3b7" prot="public" static="no">
        <name>F_LJUST</name>
        <initializer>(1&lt;&lt;0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="134" column="9" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bytesobject_8h_1a3a6a154759329d0b276b8b5aade28321" prot="public" static="no">
        <name>F_SIGN</name>
        <initializer>(1&lt;&lt;1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="135" column="9" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bytesobject_8h_1a6c24376f3281d2e0be949a59ef02c5aa" prot="public" static="no">
        <name>F_BLANK</name>
        <initializer>(1&lt;&lt;2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="136" column="9" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bytesobject_8h_1acd75bbce905060c64e3b253022d0d492" prot="public" static="no">
        <name>F_ALT</name>
        <initializer>(1&lt;&lt;3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="137" column="9" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bytesobject_8h_1a81cccccbf0bb7e374f7e3f521f883008" prot="public" static="no">
        <name>F_ZERO</name>
        <initializer>(1&lt;&lt;4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="138" column="9" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="bytesobject_8h_1acbc62012dcfedfde3235dfe4f43e2ad6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>const char const char const char Py_ssize_t</definition>
        <argsstring></argsstring>
        <name>Py_ssize_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="51" column="1" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bytesobject_8h_1a2f81796204b7bbe80bac6d6599203024" prot="public" static="no" mutable="no">
        <type></type>
        <definition>const char int</definition>
        <argsstring></argsstring>
        <name>int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="60" column="1" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bytesobject_8h_1abe0bde982e74ab540658e8712d4e3a65" prot="public" static="no" mutable="no">
        <type>Py_ssize_t</type>
        <definition>Py_ssize_t format_len</definition>
        <argsstring></argsstring>
        <name>format_len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="67" column="1" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bytesobject_8h_1ae95c27a11bb942c7aab6ad49867bcf9f" prot="public" static="no" mutable="no">
        <type>Py_ssize_t <ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>Py_ssize_t PyObject* args</definition>
        <argsstring></argsstring>
        <name>args</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="68" column="1" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bytesobject_8h_1ac4ebda67976f1619bd6aee3c58a17fff" prot="public" static="no" mutable="no">
        <type>Py_ssize_t <ref refid="struct__object" kindref="compound">PyObject</ref> int</type>
        <definition>int use_bytearray</definition>
        <argsstring></argsstring>
        <name>use_bytearray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="69" column="1" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bytesobject_8h_1a280f2393c503127fff91ecbc558e288d" prot="public" static="no" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>PyObject* x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="95" column="1" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bytesobject_8h_1a4ed3f91cfab18ed8dc0db666f4e5bdbc" prot="public" static="no" mutable="no">
        <type>char **</type>
        <definition>char** s</definition>
        <argsstring></argsstring>
        <name>s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="105" column="1" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bytesobject_8h_1af419e2e6266d3df426e315719a9b733b" prot="public" static="no" mutable="no">
        <type>char Py_ssize_t *</type>
        <definition>char Py_ssize_t* len</definition>
        <argsstring></argsstring>
        <name>len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="106" column="1" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bytesobject_8h_1a385d8cd07341cf5ea25dd742fe6813bb" prot="public" static="no" mutable="no">
        <type>Py_ssize_t</type>
        <definition>Py_ssize_t n_buffer</definition>
        <argsstring></argsstring>
        <name>n_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="116" column="1" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bytesobject_8h_1ad2f6480d654ec9190275a40948267323" prot="public" static="no" mutable="no">
        <type>Py_ssize_t char *</type>
        <definition>Py_ssize_t char * digits</definition>
        <argsstring></argsstring>
        <name>digits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="117" column="1" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bytesobject_8h_1af45065713c729e3e3d7fe58bd908f81a" prot="public" static="no" mutable="no">
        <type>Py_ssize_t char Py_ssize_t</type>
        <definition>Py_ssize_t char Py_ssize_t n_digits</definition>
        <argsstring></argsstring>
        <name>n_digits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="118" column="1" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bytesobject_8h_1aa4ed6c962c1e4bdef45b06f01b87eec4" prot="public" static="no" mutable="no">
        <type>Py_ssize_t char Py_ssize_t Py_ssize_t</type>
        <definition>Py_ssize_t char Py_ssize_t Py_ssize_t min_width</definition>
        <argsstring></argsstring>
        <name>min_width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="119" column="1" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bytesobject_8h_1a7648d4369697bf2643e8d513528d17f3" prot="public" static="no" mutable="no">
        <type>Py_ssize_t char Py_ssize_t Py_ssize_t const char *</type>
        <definition>Py_ssize_t char Py_ssize_t Py_ssize_t const char* grouping</definition>
        <argsstring></argsstring>
        <name>grouping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="129" column="1" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bytesobject_8h_1a27ab021bf9263ca660f5148f60455c45" prot="public" static="no" mutable="no">
        <type>Py_ssize_t char Py_ssize_t Py_ssize_t const char const char *</type>
        <definition>Py_ssize_t char Py_ssize_t Py_ssize_t const char const char* thousands_sep</definition>
        <argsstring></argsstring>
        <name>thousands_sep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="130" column="1" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bytesobject_8h_1a2799cca21c05a4f99f4c8b3b178d0133" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>const char * str</definition>
        <argsstring></argsstring>
        <name>str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="177" column="1" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bytesobject_8h_1a612c27dae5681d14a5d92d0b3d8ab6e5" prot="public" static="no" mutable="no">
        <type>Py_ssize_t</type>
        <definition>Py_ssize_t size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="186" column="1" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bytesobject_8h_1a08691af1bded85c154a3da431a3b050b" prot="public" static="no" mutable="no">
        <type>void const void *</type>
        <definition>void const void* bytes</definition>
        <argsstring></argsstring>
        <name>bytes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="217" column="1" bodyfile="/usr/include/python3.6m/bytesobject.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bytesobject_8h_1acc4e8be3a396cd959a87a45c103715a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_DATA</definition>
        <argsstring>(PyTypeObject) PyBytes_Type</argsstring>
        <name>PyAPI_DATA</name>
        <param>
          <type><ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="bytesobject_8h_1a56408dedadf3e6a736018b3042b8bdc1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(PyObject *) PyBytes_FromStringAndSize(const char *</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="bytesobject_8h_1a8241b58fc3931d640357ba70b7ac2da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>va_list</type>
        <definition>va_list Py_GCC_ATTRIBUTE</definition>
        <argsstring>((format(printf, 1, 0)))</argsstring>
        <name>Py_GCC_ATTRIBUTE</name>
        <param>
          <type>(format(printf, 1, 0))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="bytesobject_8h_1a989c109ffd402adc542bd60d87c005ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Py_GCC_ATTRIBUTE</definition>
        <argsstring>((format(printf, 1, 2)))</argsstring>
        <name>Py_GCC_ATTRIBUTE</name>
        <param>
          <type>(format(printf, 1, 2))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="bytesobject_8h_1ab740da68b22865122e2847146aeafeae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(Py_ssize_t) PyBytes_Size(PyObject *)</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type>Py_ssize_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="bytesobject_8h_1a63fc3802917d40670e14ac08a185cc7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(char *) PyBytes_AsString(PyObject *)</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type>char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="bytesobject_8h_1af202a44b4508c3df1849fb0d48cbf707" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(void) PyBytes_Concat(PyObject **</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="bytesobject_8h_1a11bbe447ca2a5b3b340a97a04de81fef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> <ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>PyObject PyObject* PyAPI_FUNC</definition>
        <argsstring>(int) _PyBytes_Resize(PyObject **</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="bytesobject_8h_1a855fb473d352a18ef55fd835521a5407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(void *) _PyBytesWriter_Alloc(_PyBytesWriter *writer</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/bytesobject.h" line="185" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Bytes<sp/>(String)<sp/>object<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_BYTESOBJECT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_BYTESOBJECT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="13"><highlight class="comment">Type<sp/>PyBytesObject<sp/>represents<sp/>a<sp/>character<sp/>string.<sp/><sp/>An<sp/>extra<sp/>zero<sp/>byte<sp/>is</highlight></codeline>
<codeline lineno="14"><highlight class="comment">reserved<sp/>at<sp/>the<sp/>end<sp/>to<sp/>ensure<sp/>it<sp/>is<sp/>zero-terminated,<sp/>but<sp/>a<sp/>size<sp/>is</highlight></codeline>
<codeline lineno="15"><highlight class="comment">present<sp/>so<sp/>strings<sp/>with<sp/>null<sp/>bytes<sp/>in<sp/>them<sp/>can<sp/>be<sp/>represented.<sp/><sp/>This</highlight></codeline>
<codeline lineno="16"><highlight class="comment">is<sp/>an<sp/>immutable<sp/>object<sp/>type.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment">There<sp/>are<sp/>functions<sp/>to<sp/>create<sp/>new<sp/>string<sp/>objects,<sp/>to<sp/>test</highlight></codeline>
<codeline lineno="19"><highlight class="comment">an<sp/>object<sp/>for<sp/>string-ness,<sp/>and<sp/>to<sp/>get<sp/>the</highlight></codeline>
<codeline lineno="20"><highlight class="comment">string<sp/>value.<sp/><sp/>The<sp/>latter<sp/>function<sp/>returns<sp/>a<sp/>null<sp/>pointer</highlight></codeline>
<codeline lineno="21"><highlight class="comment">if<sp/>the<sp/>object<sp/>is<sp/>not<sp/>of<sp/>the<sp/>proper<sp/>type.</highlight></codeline>
<codeline lineno="22"><highlight class="comment">There<sp/>is<sp/>a<sp/>variant<sp/>that<sp/>takes<sp/>an<sp/>explicit<sp/>size<sp/>as<sp/>well<sp/>as<sp/>a</highlight></codeline>
<codeline lineno="23"><highlight class="comment">variant<sp/>that<sp/>assumes<sp/>a<sp/>zero-terminated<sp/>string.<sp/><sp/>Note<sp/>that<sp/>none<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="24"><highlight class="comment">functions<sp/>should<sp/>be<sp/>applied<sp/>to<sp/>nil<sp/>objects.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Caching<sp/>the<sp/>hash<sp/>(ob_shash)<sp/>saves<sp/>recalculation<sp/>of<sp/>a<sp/>string&apos;s<sp/>hash<sp/>value.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/>This<sp/>significantly<sp/>speeds<sp/>up<sp/>dict<sp/>lookups.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="struct_py_bytes_object" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject_VAR_HEAD</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_hash_t<sp/>ob_shash;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ob_sval[1];</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invariants:</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>ob_sval<sp/>contains<sp/>space<sp/>for<sp/>&apos;ob_size+1&apos;<sp/>elements.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>ob_sval[ob_size]<sp/>==<sp/>0.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>ob_shash<sp/>is<sp/>the<sp/>hash<sp/>of<sp/>the<sp/>string<sp/>or<sp/>-1<sp/>if<sp/>not<sp/>computed<sp/>yet.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">}<sp/><ref refid="struct_py_bytes_object" kindref="compound">PyBytesObject</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">PyAPI_DATA(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref>)<sp/>PyBytes_Type;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">PyAPI_DATA(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref>)<sp/>PyBytesIter_Type;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyBytes_Check(op)<sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyType_FastSubclass(Py_TYPE(op),<sp/>Py_TPFLAGS_BYTES_SUBCLASS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyBytes_CheckExact(op)<sp/>(Py_TYPE(op)<sp/>==<sp/>&amp;PyBytes_Type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyBytes_FromStringAndSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>Py_ssize_t);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyBytes_FromString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyBytes_FromObject(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyBytes_FromFormatV(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/>va_list)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_GCC_ATTRIBUTE((format(printf,<sp/>1,<sp/>0)));</highlight></codeline>
<codeline lineno="56"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyBytes_FromFormat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/>...)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_GCC_ATTRIBUTE((format(printf,<sp/>1,<sp/>2)));</highlight></codeline>
<codeline lineno="58"><highlight class="normal">PyAPI_FUNC(Py_ssize_t)<sp/>PyBytes_Size(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>PyBytes_AsString(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyBytes_Repr(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>PyBytes_Concat(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>**,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>PyBytes_ConcatAndDel(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>**,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>_PyBytes_Resize(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>**,<sp/>Py_ssize_t);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref>*)<sp/>_PyBytes_FormatEx(</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>format_len,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*args,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>use_bytearray);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref>*)<sp/>_PyBytes_FromHex(</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>use_bytearray);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyBytes_DecodeEscape(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>Py_ssize_t,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>Py_ssize_t,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Helper<sp/>for<sp/>PyBytes_DecodeEscape<sp/>that<sp/>detects<sp/>invalid<sp/>escape<sp/>chars.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>_PyBytes_DecodeEscape(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>Py_ssize_t,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>Py_ssize_t,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macro,<sp/>trading<sp/>safety<sp/>for<sp/>speed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyBytes_AS_STRING(op)<sp/>(assert(PyBytes_Check(op)),<sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((PyBytesObject<sp/>*)(op))-&gt;ob_sval))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyBytes_GET_SIZE(op)<sp/><sp/>(assert(PyBytes_Check(op)),Py_SIZE(op))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>_PyBytes_Join(sep,<sp/>x)<sp/>is<sp/>like<sp/>sep.join(x).<sp/><sp/>sep<sp/>must<sp/>be<sp/>PyBytesObject*,</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/>x<sp/>must<sp/>be<sp/>an<sp/>iterable<sp/>object.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>_PyBytes_Join(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*sep,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*x);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Provides<sp/>access<sp/>to<sp/>the<sp/>internal<sp/>data<sp/>buffer<sp/>and<sp/>size<sp/>of<sp/>a<sp/>string</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/>object<sp/>or<sp/>the<sp/>default<sp/>encoded<sp/>version<sp/>of<sp/>a<sp/>Unicode<sp/>object.<sp/>Passing</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/>NULL<sp/>as<sp/>*len<sp/>parameter<sp/>will<sp/>force<sp/>the<sp/>string<sp/>buffer<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/>0-terminated<sp/>(passing<sp/>a<sp/>string<sp/>with<sp/>embedded<sp/>NULL<sp/>characters<sp/>will</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/>cause<sp/>an<sp/>exception).<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>PyBytes_AsStringAndSize(</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*obj,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>string<sp/>or<sp/>Unicode<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**s,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>buffer<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>*len<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>length<sp/>variable<sp/>or<sp/>NULL</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(only<sp/>possible<sp/>for<sp/>0-terminated</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strings)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Using<sp/>the<sp/>current<sp/>locale,<sp/>insert<sp/>the<sp/>thousands<sp/>grouping</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/>into<sp/>the<sp/>string<sp/>pointed<sp/>to<sp/>by<sp/>buffer.<sp/><sp/>For<sp/>the<sp/>argument<sp/>descriptions,</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/>see<sp/>Objects/stringlib/localeutil.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">PyAPI_FUNC(Py_ssize_t)<sp/>_PyBytes_InsertThousandsGroupingLocale(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>n_buffer,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*digits,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>n_digits,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>min_width);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Using<sp/>explicit<sp/>passed-in<sp/>values,<sp/>insert<sp/>the<sp/>thousands<sp/>grouping</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/>into<sp/>the<sp/>string<sp/>pointed<sp/>to<sp/>by<sp/>buffer.<sp/><sp/>For<sp/>the<sp/>argument<sp/>descriptions,</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/>see<sp/>Objects/stringlib/localeutil.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">PyAPI_FUNC(Py_ssize_t)<sp/>_PyBytes_InsertThousandsGrouping(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>n_buffer,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*digits,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>n_digits,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>min_width,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*grouping,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*thousands_sep);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Flags<sp/>used<sp/>by<sp/>string<sp/>formatting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F_LJUST<sp/>(1&lt;&lt;0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F_SIGN<sp/><sp/>(1&lt;&lt;1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F_BLANK<sp/>(1&lt;&lt;2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F_ALT<sp/><sp/><sp/>(1&lt;&lt;3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F_ZERO<sp/><sp/>(1&lt;&lt;4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>_PyBytesWriter<sp/>structure<sp/>is<sp/>big:<sp/>it<sp/>contains<sp/>an<sp/>embedded<sp/>&quot;stack<sp/>buffer&quot;.</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/>A<sp/>_PyBytesWriter<sp/>variable<sp/>must<sp/>be<sp/>declared<sp/>at<sp/>the<sp/>end<sp/>of<sp/>variables<sp/>in<sp/>a</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/>function<sp/>to<sp/>optimize<sp/>the<sp/>memory<sp/>allocation<sp/>on<sp/>the<sp/>stack.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="struct___py_bytes_writer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bytes,<sp/>bytearray<sp/>or<sp/>NULL<sp/>(when<sp/>the<sp/>small<sp/>buffer<sp/>is<sp/>used)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*buffer;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>allocated<sp/>size.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>allocated;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Minimum<sp/>number<sp/>of<sp/>allocated<sp/>bytes,</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>incremented<sp/>by<sp/>_PyBytesWriter_Prepare()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>min_size;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>non-zero,<sp/>use<sp/>a<sp/>bytearray<sp/>instead<sp/>of<sp/>a<sp/>bytes<sp/>object<sp/>for<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>use_bytearray;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>non-zero,<sp/>overallocate<sp/>the<sp/>buffer<sp/>(default:<sp/>0).</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>flag<sp/>must<sp/>be<sp/>zero<sp/>if<sp/>use_bytearray<sp/>is<sp/>non-zero.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overallocate;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Stack<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>use_small_buffer;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>small_buffer[512];</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}<sp/><ref refid="struct___py_bytes_writer" kindref="compound">_PyBytesWriter</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Initialize<sp/>a<sp/>bytes<sp/>writer</highlight></codeline>
<codeline lineno="168"><highlight class="comment"></highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/>By<sp/>default,<sp/>the<sp/>overallocation<sp/>is<sp/>disabled.<sp/>Set<sp/>the<sp/>overallocate<sp/>attribute</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/>to<sp/>control<sp/>the<sp/>allocation<sp/>of<sp/>the<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>_PyBytesWriter_Init(<ref refid="struct___py_bytes_writer" kindref="compound">_PyBytesWriter</ref><sp/>*writer);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>buffer<sp/>content<sp/>and<sp/>reset<sp/>the<sp/>writer.</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/>Return<sp/>a<sp/>bytes<sp/>object,<sp/>or<sp/>a<sp/>bytearray<sp/>object<sp/>if<sp/>use_bytearray<sp/>is<sp/>non-zero.</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/>Raise<sp/>an<sp/>exception<sp/>and<sp/>return<sp/>NULL<sp/>on<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>_PyBytesWriter_Finish(<ref refid="struct___py_bytes_writer" kindref="compound">_PyBytesWriter</ref><sp/>*writer,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deallocate<sp/>memory<sp/>of<sp/>a<sp/>writer<sp/>(clear<sp/>its<sp/>internal<sp/>buffer).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>_PyBytesWriter_Dealloc(<ref refid="struct___py_bytes_writer" kindref="compound">_PyBytesWriter</ref><sp/>*writer);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Allocate<sp/>the<sp/>buffer<sp/>to<sp/>write<sp/>size<sp/>bytes.</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/>Return<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>beginning<sp/>of<sp/>buffer<sp/>data.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/>Raise<sp/>an<sp/>exception<sp/>and<sp/>return<sp/>NULL<sp/>on<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>_PyBytesWriter_Alloc(<ref refid="struct___py_bytes_writer" kindref="compound">_PyBytesWriter</ref><sp/>*writer,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>size);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Ensure<sp/>that<sp/>the<sp/>buffer<sp/>is<sp/>large<sp/>enough<sp/>to<sp/>write<sp/>*size*<sp/>bytes.</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/>Add<sp/>size<sp/>to<sp/>the<sp/>writer<sp/>minimum<sp/>size<sp/>(min_size<sp/>attribute).</highlight></codeline>
<codeline lineno="190"><highlight class="comment"></highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/>str<sp/>is<sp/>the<sp/>current<sp/>pointer<sp/>inside<sp/>the<sp/>buffer.</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/>Return<sp/>the<sp/>updated<sp/>current<sp/>pointer<sp/>inside<sp/>the<sp/>buffer.</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/>Raise<sp/>an<sp/>exception<sp/>and<sp/>return<sp/>NULL<sp/>on<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>_PyBytesWriter_Prepare(<ref refid="struct___py_bytes_writer" kindref="compound">_PyBytesWriter</ref><sp/>*writer,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>size);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Resize<sp/>the<sp/>buffer<sp/>to<sp/>make<sp/>it<sp/>larger.</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/>The<sp/>new<sp/>buffer<sp/>may<sp/>be<sp/>larger<sp/>than<sp/>size<sp/>bytes<sp/>because<sp/>of<sp/>overallocation.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/>Return<sp/>the<sp/>updated<sp/>current<sp/>pointer<sp/>inside<sp/>the<sp/>buffer.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/>Raise<sp/>an<sp/>exception<sp/>and<sp/>return<sp/>NULL<sp/>on<sp/>error.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"></highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/>Note:<sp/>size<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>the<sp/>number<sp/>of<sp/>allocated<sp/>bytes<sp/>in<sp/>the<sp/>writer.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"></highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/>This<sp/>function<sp/>doesn&apos;t<sp/>use<sp/>the<sp/>writer<sp/>minimum<sp/>size<sp/>(min_size<sp/>attribute).</highlight></codeline>
<codeline lineno="206"><highlight class="comment"></highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/>See<sp/>also<sp/>_PyBytesWriter_Prepare().</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>_PyBytesWriter_Resize(<ref refid="struct___py_bytes_writer" kindref="compound">_PyBytesWriter</ref><sp/>*writer,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>size);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Write<sp/>bytes.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/>Raise<sp/>an<sp/>exception<sp/>and<sp/>return<sp/>NULL<sp/>on<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>_PyBytesWriter_WriteBytes(<ref refid="struct___py_bytes_writer" kindref="compound">_PyBytesWriter</ref><sp/>*writer,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct__object" kindref="compound">bytes</ref>,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>size);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Py_LIMITED_API<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!Py_BYTESOBJECT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/usr/include/python3.6m/bytesobject.h"/>
  </compounddef>
</doxygen>
