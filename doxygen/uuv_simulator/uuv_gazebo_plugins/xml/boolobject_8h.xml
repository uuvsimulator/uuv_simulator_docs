<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="boolobject_8h" kind="file" language="C++">
    <compoundname>boolobject.h</compoundname>
    <includedby refid="_python_8h" local="yes">/usr/include/python3.6m/Python.h</includedby>
    <invincdepgraph>
      <node id="2787">
        <label>/usr/include/python3.6m/Imaging.h</label>
        <link refid="_imaging_8h_source"/>
      </node>
      <node id="2788">
        <label>/usr/include/python3.6m/pgenheaders.h</label>
        <link refid="pgenheaders_8h_source"/>
      </node>
      <node id="2790">
        <label>venv/lib/python3.6/site-packages/lxml/includes/etree_defs.h</label>
        <link refid="etree__defs_8h_source"/>
      </node>
      <node id="2785">
        <label>/usr/include/python3.6m/Python.h</label>
        <link refid="_python_8h_source"/>
        <childnode refid="2786" relation="include">
        </childnode>
        <childnode refid="2788" relation="include">
        </childnode>
        <childnode refid="2789" relation="include">
        </childnode>
        <childnode refid="2790" relation="include">
        </childnode>
        <childnode refid="2791" relation="include">
        </childnode>
      </node>
      <node id="2791">
        <label>venv/lib/python3.6/site-packages/lxml/lxml.etree_api.h</label>
        <link refid="lxml_8etree__api_8h_source"/>
      </node>
      <node id="2786">
        <label>/usr/include/python3.6m/ImPlatform.h</label>
        <link refid="_im_platform_8h_source"/>
        <childnode refid="2787" relation="include">
        </childnode>
      </node>
      <node id="2784">
        <label>/usr/include/python3.6m/boolobject.h</label>
        <link refid="boolobject_8h"/>
        <childnode refid="2785" relation="include">
        </childnode>
      </node>
      <node id="2789">
        <label>venv/lib/python3.6/site-packages/lxml/etree_api.h</label>
        <link refid="etree__api_8h_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="boolobject_8h_1ae17bc7ba6b15e2bbaf61a73c76567d9c" prot="public" static="no">
        <name>PyBool_Check</name>
        <param><defname>x</defname></param>
        <initializer>(Py_TYPE(x) == &amp;PyBool_Type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/boolobject.h" line="12" column="9" bodyfile="/usr/include/python3.6m/boolobject.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boolobject_8h_1ad370273b9ddb8c4c535ee809fac4b41a" prot="public" static="no">
        <name>Py_False</name>
        <initializer>((<ref refid="struct__object" kindref="compound">PyObject</ref> *) &amp;_Py_FalseStruct)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/boolobject.h" line="21" column="9" bodyfile="/usr/include/python3.6m/boolobject.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boolobject_8h_1a2e7a644528dfe7d96653d2f8bd0f94fc" prot="public" static="no">
        <name>Py_True</name>
        <initializer>((<ref refid="struct__object" kindref="compound">PyObject</ref> *) &amp;_Py_TrueStruct)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/boolobject.h" line="22" column="9" bodyfile="/usr/include/python3.6m/boolobject.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boolobject_8h_1a1df9050e32e83c9b03bef98f148599ed" prot="public" static="no">
        <name>Py_RETURN_TRUE</name>
        <initializer>return Py_INCREF(Py_True), Py_True</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/boolobject.h" line="25" column="9" bodyfile="/usr/include/python3.6m/boolobject.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="boolobject_8h_1a25b0bd02b0608ea006e03d1a6a5fde87" prot="public" static="no">
        <name>Py_RETURN_FALSE</name>
        <initializer>return Py_INCREF(Py_False), Py_False</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/boolobject.h" line="26" column="9" bodyfile="/usr/include/python3.6m/boolobject.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="boolobject_8h_1a2513bbf75f37203c3cf9a41249aab1b3" prot="public" static="no" mutable="no">
        <type></type>
        <definition>_Py_TrueStruct</definition>
        <argsstring></argsstring>
        <name>_Py_TrueStruct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/boolobject.h" line="18" column="1" bodyfile="/usr/include/python3.6m/boolobject.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="boolobject_8h_1ad466444c732f91aedb13c7eaadfeeb22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_DATA</definition>
        <argsstring>(PyTypeObject) PyBool_Type</argsstring>
        <name>PyAPI_DATA</name>
        <param>
          <type><ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/boolobject.h" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="boolobject_8h_1a694a8cf3b2b6d738303adee33a2260fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_DATA</definition>
        <argsstring>(struct _longobject) _Py_FalseStruct</argsstring>
        <name>PyAPI_DATA</name>
        <param>
          <type>struct <ref refid="struct__longobject" kindref="compound">_longobject</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/boolobject.h" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="boolobject_8h_1acd6d0766631307287be37062ce2e3790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(PyObject *) PyBool_FromLong(long)</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/boolobject.h" line="29" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Boolean<sp/>object<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_BOOLOBJECT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_BOOLOBJECT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">PyAPI_DATA(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref>)<sp/>PyBool_Type;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyBool_Check(x)<sp/>(Py_TYPE(x)<sp/>==<sp/>&amp;PyBool_Type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Py_False<sp/>and<sp/>Py_True<sp/>are<sp/>the<sp/>only<sp/>two<sp/>bools<sp/>in<sp/>existence.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">Don&apos;t<sp/>forget<sp/>to<sp/>apply<sp/>Py_INCREF()<sp/>when<sp/>returning<sp/>either!!!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>use<sp/>these<sp/>directly<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">PyAPI_DATA(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct__longobject" kindref="compound">_longobject</ref>)<sp/>_Py_FalseStruct,<sp/>_Py_TrueStruct;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Use<sp/>these<sp/>macros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_False<sp/>((PyObject<sp/>*)<sp/>&amp;_Py_FalseStruct)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_True<sp/>((PyObject<sp/>*)<sp/>&amp;_Py_TrueStruct)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macros<sp/>for<sp/>returning<sp/>Py_True<sp/>or<sp/>Py_False,<sp/>respectively<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_RETURN_TRUE<sp/>return<sp/>Py_INCREF(Py_True),<sp/>Py_True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_RETURN_FALSE<sp/>return<sp/>Py_INCREF(Py_False),<sp/>Py_False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>to<sp/>return<sp/>a<sp/>bool<sp/>from<sp/>a<sp/>C<sp/>long<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyBool_FromLong(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!Py_BOOLOBJECT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/usr/include/python3.6m/boolobject.h"/>
  </compounddef>
</doxygen>
