<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_underwater_object_plugin_8cc" kind="file" language="C++">
    <compoundname>UnderwaterObjectPlugin.cc</compoundname>
    <includes local="no">gazebo/gazebo.hh</includes>
    <includes local="no">gazebo/physics/Collision.hh</includes>
    <includes local="no">gazebo/physics/Link.hh</includes>
    <includes local="no">gazebo/physics/Model.hh</includes>
    <includes local="no">gazebo/physics/PhysicsEngine.hh</includes>
    <includes local="no">gazebo/physics/Shape.hh</includes>
    <includes local="no">gazebo/physics/World.hh</includes>
    <includes local="no">gazebo/transport/TransportTypes.hh</includes>
    <includes local="no">gazebo/transport/transport.hh</includes>
    <includes refid="_underwater_object_plugin_8hh" local="no">uuv_gazebo_plugins/UnderwaterObjectPlugin.hh</includes>
    <includes refid="_def_8hh" local="no">uuv_gazebo_plugins/Def.hh</includes>
    <incdepgraph>
      <node id="271">
        <label>uuv_gazebo_plugins/HydrodynamicModel.hh</label>
        <link refid="_hydrodynamic_model_8hh"/>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="269" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
      </node>
      <node id="259">
        <label>gazebo/physics/Collision.hh</label>
      </node>
      <node id="269">
        <label>string</label>
      </node>
      <node id="270">
        <label>gazebo/msgs/msgs.hh</label>
      </node>
      <node id="268">
        <label>map</label>
      </node>
      <node id="266">
        <label>gazebo/transport/transport.hh</label>
      </node>
      <node id="262">
        <label>gazebo/physics/PhysicsEngine.hh</label>
      </node>
      <node id="258">
        <label>gazebo/gazebo.hh</label>
      </node>
      <node id="275">
        <label>uuv_gazebo_plugins/Def.hh</label>
        <link refid="_def_8hh"/>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="269" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="273" relation="include">
        </childnode>
      </node>
      <node id="276">
        <label>uuv_gazebo_plugins/BuoyantObject.hh</label>
        <link refid="_buoyant_object_8hh"/>
        <childnode refid="269" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
      </node>
      <node id="257">
        <label>/home/musamorena/catkin_ws/src/uuv_simulator/uuv_gazebo_plugins/uuv_gazebo_plugins/src/UnderwaterObjectPlugin.cc</label>
        <link refid="_underwater_object_plugin_8cc"/>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="266" relation="include">
        </childnode>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
      <node id="274">
        <label>vector</label>
      </node>
      <node id="263">
        <label>gazebo/physics/Shape.hh</label>
      </node>
      <node id="265">
        <label>gazebo/transport/TransportTypes.hh</label>
      </node>
      <node id="261">
        <label>gazebo/physics/Model.hh</label>
      </node>
      <node id="272">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="267">
        <label>uuv_gazebo_plugins/UnderwaterObjectPlugin.hh</label>
        <link refid="_underwater_object_plugin_8hh"/>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="269" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="271" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
      <node id="260">
        <label>gazebo/physics/Link.hh</label>
      </node>
      <node id="273">
        <label>eigen3/Eigen/Geometry</label>
      </node>
      <node id="264">
        <label>gazebo/physics/World.hh</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacegazebo">gazebo</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2016<sp/>The<sp/>UUV<sp/>Simulator<sp/>Authors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/gazebo.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/Collision.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/Link.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/Model.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/PhysicsEngine.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/Shape.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/World.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/transport/TransportTypes.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/transport/transport.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_underwater_object_plugin_8hh" kindref="compound">uuv_gazebo_plugins/UnderwaterObjectPlugin.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_def_8hh" kindref="compound">uuv_gazebo_plugins/Def.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegazebo" kindref="compound">gazebo</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">GZ_REGISTER_MODEL_PLUGIN(UnderwaterObjectPlugin)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="classgazebo_1_1_underwater_object_plugin_1ac875088ebde0583e6f3e07cdeaea53ae" kindref="member">UnderwaterObjectPlugin::UnderwaterObjectPlugin</ref>()<sp/>:<sp/>useGlobalCurrent(true)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="classgazebo_1_1_underwater_object_plugin_1af97f83bac0327ebc2671839c56f44207" kindref="member">UnderwaterObjectPlugin::~UnderwaterObjectPlugin</ref>()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a1a4d81782ad2d21fc01598e0d9b42d27" kindref="member">updateConnection</ref>.reset();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>event::Events::DisconnectWorldUpdateBegin(this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a1a4d81782ad2d21fc01598e0d9b42d27" kindref="member">updateConnection</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnderwaterObjectPlugin::Load(physics::ModelPtr<sp/>_model,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdf::ElementPtr<sp/>_sdf)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>GZ_ASSERT(_model<sp/>!=<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>model<sp/>pointer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>GZ_ASSERT(_sdf<sp/>!=<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>SDF<sp/>element<sp/>pointer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a896d92ed527a0d9f7b47208614eaba0c" kindref="member">model</ref><sp/>=<sp/>_model;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a9f16fc2908d17c0975331cc825d14cb0" kindref="member">world</ref><sp/>=<sp/>_model-&gt;GetWorld();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>transport<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a5422d922731696d2767e5be09c2cb5c2" kindref="member">node</ref><sp/>=<sp/>transport::NodePtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>transport::Node());</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>std::string<sp/>worldName;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>worldName<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a9f16fc2908d17c0975331cc825d14cb0" kindref="member">world</ref>-&gt;Name();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>worldName<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a9f16fc2908d17c0975331cc825d14cb0" kindref="member">world</ref>-&gt;GetName();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a5422d922731696d2767e5be09c2cb5c2" kindref="member">node</ref>-&gt;Init(worldName);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>fluid<sp/>topic<sp/>is<sp/>available,<sp/>subscribe<sp/>to<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;flow_velocity_topic&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>flowTopic<sp/>=<sp/>_sdf-&gt;Get&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;flow_velocity_topic&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>GZ_ASSERT(!flowTopic.empty(),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Fluid<sp/>velocity<sp/>topic<sp/>tag<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Subscribing<sp/>to<sp/>current<sp/>velocity<sp/>topic:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>flowTopic</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1adb22008a9f57f11659e2b2a18d57bcc6" kindref="member">flowSubscriber</ref><sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a5422d922731696d2767e5be09c2cb5c2" kindref="member">node</ref>-&gt;Subscribe(flowTopic,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classgazebo_1_1_underwater_object_plugin_1a22bb6d230cc76b4a838ffffe5a6ba722" kindref="member">UnderwaterObjectPlugin::UpdateFlowVelocity</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fluidDensity<sp/>=<sp/>1028.0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>fluid<sp/>density,<sp/>if<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;fluid_density&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>fluidDensity<sp/>=<sp/>_sdf-&gt;Get&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;fluid_density&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;use_global_current&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a0bfd19ce74a42666f26fefa0ded488f3" kindref="member">useGlobalCurrent</ref><sp/>=<sp/>_sdf-&gt;Get&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;use_global_current&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>debug<sp/>flag,<sp/>if<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debugFlag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>debugFlag<sp/>=<sp/>static_cast&lt;bool&gt;(_sdf-&gt;Get&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Center<sp/>of<sp/>buoyancy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>ignition::math::Vector3d<sp/>cob;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>g</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gAcc;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>gAcc<sp/>=<sp/>std::abs(this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a9f16fc2908d17c0975331cc825d14cb0" kindref="member">world</ref>-&gt;Gravity().Z());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>gAcc<sp/>=<sp/>std::abs(this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a9f16fc2908d17c0975331cc825d14cb0" kindref="member">world</ref>-&gt;GetPhysicsEngine()-&gt;GetGravity().z);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a08b0e6dfab6a63945ea6d1c71c858df1" kindref="member">baseLinkName</ref><sp/>=<sp/>std::string();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;link&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sdf::ElementPtr<sp/>linkElem<sp/>=<sp/>_sdf-&gt;GetElement(</highlight><highlight class="stringliteral">&quot;link&quot;</highlight><highlight class="normal">);<sp/>linkElem;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkElem<sp/>=<sp/>linkElem-&gt;GetNextElement(</highlight><highlight class="stringliteral">&quot;link&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>physics::LinkPtr<sp/>link;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>linkName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linkElem-&gt;HasAttribute(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkName<sp/>=<sp/>linkElem-&gt;Get&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>found<sp/>=<sp/>linkName.find(</highlight><highlight class="stringliteral">&quot;base_link&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;baseLinkName<sp/>=<sp/>linkName;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Name<sp/>of<sp/>the<sp/>BASE_LINK:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;baseLinkName<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>link<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a896d92ed527a0d9f7b47208614eaba0c" kindref="member">model</ref>-&gt;GetLink(linkName);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!link)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzwarn<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Specified<sp/>link<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>linkName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>not<sp/>found.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzwarn<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Attribute<sp/>name<sp/>missing<sp/>from<sp/>link<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>linkName</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Creating<sp/>a<sp/>new<sp/>hydrodynamic<sp/>model<sp/>for<sp/>this<sp/>link</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_hydrodynamic_model_8hh_1ab7e72448c3e86f93ab214d73c0cd4414" kindref="member">HydrodynamicModelPtr</ref><sp/>hydro;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hydro.reset(</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgazebo_1_1_hydrodynamic_model_factory_1a8281e8722c60237ee137347d4ddfe668" kindref="member">HydrodynamicModelFactory::GetInstance</ref>().CreateHydrodynamicModel(</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkElem,<sp/>link));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hydro-&gt;SetFluidDensity(fluidDensity);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hydro-&gt;SetGravity(gAcc);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugFlag)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a86136f608b56ecd79bd6530f92724a75" kindref="member">InitDebug</ref>(link,<sp/>hydro);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1abbc883398252e410563c657648743e3e" kindref="member">models</ref>[link]<sp/>=<sp/>hydro;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1abbc883398252e410563c657648743e3e" kindref="member">models</ref>[link]-&gt;Print(</highlight><highlight class="stringliteral">&quot;all&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>link<sp/>mentioned<sp/>in<sp/>plugin<sp/>sdf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Connect<sp/>the<sp/>update<sp/>event<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a7497acca39dc0a4f338bd863b002ec33" kindref="member">Connect</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_underwater_object_plugin_1a86136f608b56ecd79bd6530f92724a75" kindref="member">UnderwaterObjectPlugin::InitDebug</ref>(physics::LinkPtr<sp/>_link,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>HydrodynamicModelPtr<sp/>_hydro)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>topics<sp/>for<sp/>the<sp/>individual<sp/>hydrodynamic<sp/>and<sp/>hydrostatic<sp/>forces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>std::string<sp/>rootTopic<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/debug/forces/&quot;</highlight><highlight class="normal"><sp/>+<sp/>_link-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>topics<sp/>{</highlight><highlight class="stringliteral">&quot;restoring&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;damping&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;added_mass&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;added_coriolis&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>topic<sp/>:<sp/>topics)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a33989646c81bc47fe86dae3052846ea2" kindref="member">hydroPub</ref>[_link-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>topic]<sp/>=</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a5422d922731696d2767e5be09c2cb5c2" kindref="member">node</ref>-&gt;Advertise&lt;msgs::WrenchStamped&gt;(rootTopic<sp/>+<sp/>topic);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>vectors<sp/>to<sp/>be<sp/>stored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>_hydro-&gt;SetDebugFlag(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>_hydro-&gt;SetStoreVector(<ref refid="_def_8hh_1a1d994d77185f407da4a9682b1b8e8e9b" kindref="member">RESTORING_FORCE</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>_hydro-&gt;SetStoreVector(UUV_DAMPING_FORCE);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>_hydro-&gt;SetStoreVector(UUV_DAMPING_TORQUE);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>_hydro-&gt;SetStoreVector(UUV_ADDED_CORIOLIS_FORCE);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>_hydro-&gt;SetStoreVector(UUV_ADDED_CORIOLIS_TORQUE);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>_hydro-&gt;SetStoreVector(UUV_ADDED_MASS_FORCE);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>_hydro-&gt;SetStoreVector(UUV_ADDED_MASS_TORQUE);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnderwaterObjectPlugin::Init()</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Doing<sp/>nothing<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_underwater_object_plugin_1ad5893829b75bed2bb052bef467d6dcf4" kindref="member">UnderwaterObjectPlugin::Update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>common::UpdateInfo<sp/>&amp;_info)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>_info.simTime.Double();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;gazebo::physics::LinkPtr,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HydrodynamicModelPtr&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="classgazebo_1_1_underwater_object_plugin_1abbc883398252e410563c657648743e3e" kindref="member">models</ref>.begin();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="classgazebo_1_1_underwater_object_plugin_1abbc883398252e410563c657648743e3e" kindref="member">models</ref>.end();<sp/>++it)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>physics::LinkPtr<sp/>link<sp/>=<sp/>it-&gt;first;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_hydrodynamic_model_8hh_1ab7e72448c3e86f93ab214d73c0cd4414" kindref="member">HydrodynamicModelPtr</ref><sp/>hydro<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>hydrodynamic<sp/>and<sp/>hydrostatic<sp/>forces<sp/>and<sp/>torques</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>linearAccel,<sp/>angularAccel;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>linearAccel<sp/>=<sp/>link-&gt;RelativeLinearAccel().Length();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>angularAccel<sp/>=<sp/>link-&gt;RelativeAngularAccel().Length();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>linearAccel<sp/>=<sp/>link-&gt;GetRelativeLinearAccel().GetLength();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>angularAccel<sp/>=<sp/>link-&gt;GetRelativeAngularAccel().GetLength();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>GZ_ASSERT(!std::isnan(linearAccel)<sp/>&amp;&amp;<sp/>!std::isnan(angularAccel),</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Linear<sp/>or<sp/>angular<sp/>accelerations<sp/>are<sp/>invalid.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>hydro-&gt;ApplyHydrodynamicForces(time,<sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1ac5bf6578ef4434438ba7d7647b69b971" kindref="member">flowVelocity</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1ae5da81b93706dded6de765628f57ad05" kindref="member">PublishRestoringForce</ref>(link);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1af1b5370bf8ebd626fd9eafb2b46075b9" kindref="member">PublishHydrodynamicWrenches</ref>(link);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a89d8430bc839e0ff477fd893be829060" kindref="member">PublishCurrentVelocityMarker</ref>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1adc2e3f16a6fa8ce79497b5664fb66b82" kindref="member">PublishIsSubmerged</ref>();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_underwater_object_plugin_1a7497acca39dc0a4f338bd863b002ec33" kindref="member">UnderwaterObjectPlugin::Connect</ref>()</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Connect<sp/>the<sp/>update<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a1a4d81782ad2d21fc01598e0d9b42d27" kindref="member">updateConnection</ref><sp/>=<sp/>event::Events::ConnectWorldUpdateBegin(</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::bind(&amp;<ref refid="classgazebo_1_1_underwater_object_plugin_1ad5893829b75bed2bb052bef467d6dcf4" kindref="member">UnderwaterObjectPlugin::Update</ref>,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1));</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_underwater_object_plugin_1a89d8430bc839e0ff477fd893be829060" kindref="member">UnderwaterObjectPlugin::PublishCurrentVelocityMarker</ref>()</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>nothing<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_underwater_object_plugin_1adc2e3f16a6fa8ce79497b5664fb66b82" kindref="member">UnderwaterObjectPlugin::PublishIsSubmerged</ref>()</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>nothing<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_underwater_object_plugin_1a22bb6d230cc76b4a838ffffe5a6ba722" kindref="member">UnderwaterObjectPlugin::UpdateFlowVelocity</ref>(ConstVector3dPtr<sp/>&amp;_msg)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a0bfd19ce74a42666f26fefa0ded488f3" kindref="member">useGlobalCurrent</ref>)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1ac5bf6578ef4434438ba7d7647b69b971" kindref="member">flowVelocity</ref>.X()<sp/>=<sp/>_msg-&gt;x();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1ac5bf6578ef4434438ba7d7647b69b971" kindref="member">flowVelocity</ref>.Y()<sp/>=<sp/>_msg-&gt;y();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1ac5bf6578ef4434438ba7d7647b69b971" kindref="member">flowVelocity</ref>.Z()<sp/>=<sp/>_msg-&gt;z();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_underwater_object_plugin_1ae5da81b93706dded6de765628f57ad05" kindref="member">UnderwaterObjectPlugin::PublishRestoringForce</ref>(</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>physics::LinkPtr<sp/>_link)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1abbc883398252e410563c657648743e3e" kindref="member">models</ref>.count(_link))</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1abbc883398252e410563c657648743e3e" kindref="member">models</ref>[_link]-&gt;GetDebugFlag())</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>ignition::math::Vector3d<sp/>restoring<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1abbc883398252e410563c657648743e3e" kindref="member">models</ref>[_link]-&gt;GetStoredVector(</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_def_8hh_1a1d994d77185f407da4a9682b1b8e8e9b" kindref="member">RESTORING_FORCE</ref>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>msgs::WrenchStamped<sp/>msg;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a6deb4663c719f288b671539020257bb0" kindref="member">GenWrenchMsg</ref>(restoring,<sp/>ignition::math::Vector3d(0,<sp/>0,<sp/>0),<sp/>msg);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a33989646c81bc47fe86dae3052846ea2" kindref="member">hydroPub</ref>[_link-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/restoring&quot;</highlight><highlight class="normal">]-&gt;Publish(msg);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_underwater_object_plugin_1af1b5370bf8ebd626fd9eafb2b46075b9" kindref="member">UnderwaterObjectPlugin::PublishHydrodynamicWrenches</ref>(</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>physics::LinkPtr<sp/>_link)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1abbc883398252e410563c657648743e3e" kindref="member">models</ref>.count(_link))</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1abbc883398252e410563c657648743e3e" kindref="member">models</ref>[_link]-&gt;GetDebugFlag())</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>msgs::WrenchStamped<sp/>msg;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>ignition::math::Vector3d<sp/>force,<sp/>torque;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>wrench<sp/>generated<sp/>by<sp/>the<sp/>acceleraton<sp/>of<sp/>fluid<sp/>aroung<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>force<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1abbc883398252e410563c657648743e3e" kindref="member">models</ref>[_link]-&gt;GetStoredVector(UUV_ADDED_MASS_FORCE);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>torque<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1abbc883398252e410563c657648743e3e" kindref="member">models</ref>[_link]-&gt;GetStoredVector(UUV_ADDED_MASS_TORQUE);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a6deb4663c719f288b671539020257bb0" kindref="member">GenWrenchMsg</ref>(force,<sp/>torque,<sp/>msg);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a33989646c81bc47fe86dae3052846ea2" kindref="member">hydroPub</ref>[_link-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/added_mass&quot;</highlight><highlight class="normal">]-&gt;Publish(msg);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>wrench<sp/>generated<sp/>by<sp/>the<sp/>acceleraton<sp/>of<sp/>fluid<sp/>aroung<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>force<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1abbc883398252e410563c657648743e3e" kindref="member">models</ref>[_link]-&gt;GetStoredVector(UUV_DAMPING_FORCE);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>torque<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1abbc883398252e410563c657648743e3e" kindref="member">models</ref>[_link]-&gt;GetStoredVector(UUV_DAMPING_TORQUE);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a6deb4663c719f288b671539020257bb0" kindref="member">GenWrenchMsg</ref>(force,<sp/>torque,<sp/>msg);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a33989646c81bc47fe86dae3052846ea2" kindref="member">hydroPub</ref>[_link-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/damping&quot;</highlight><highlight class="normal">]-&gt;Publish(msg);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>wrench<sp/>generated<sp/>by<sp/>the<sp/>acceleraton<sp/>of<sp/>fluid<sp/>aroung<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>force<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1abbc883398252e410563c657648743e3e" kindref="member">models</ref>[_link]-&gt;GetStoredVector(UUV_ADDED_CORIOLIS_FORCE);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>torque<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1abbc883398252e410563c657648743e3e" kindref="member">models</ref>[_link]-&gt;GetStoredVector(UUV_ADDED_CORIOLIS_TORQUE);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a6deb4663c719f288b671539020257bb0" kindref="member">GenWrenchMsg</ref>(force,<sp/>torque,<sp/>msg);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a33989646c81bc47fe86dae3052846ea2" kindref="member">hydroPub</ref>[_link-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/added_coriolis&quot;</highlight><highlight class="normal">]-&gt;Publish(msg);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_underwater_object_plugin_1a6deb4663c719f288b671539020257bb0" kindref="member">UnderwaterObjectPlugin::GenWrenchMsg</ref>(ignition::math::Vector3d<sp/>_force,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>ignition::math::Vector3d<sp/>_torque,<sp/>gazebo::msgs::WrenchStamped<sp/>&amp;_output)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>common::Time<sp/>curTime;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>curTime<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a9f16fc2908d17c0975331cc825d14cb0" kindref="member">world</ref>-&gt;SimTime();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>curTime<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a9f16fc2908d17c0975331cc825d14cb0" kindref="member">world</ref>-&gt;GetSimTime();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>msgs::Wrench<sp/>*<sp/>wrench<sp/>=<sp/>_output.mutable_wrench();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>msgs::Time<sp/>*<sp/>t<sp/>=<sp/>_output.mutable_time();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>msgs::Vector3d<sp/>*<sp/>msgForce<sp/>=<sp/>wrench-&gt;mutable_force();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>msgs::Vector3d<sp/>*<sp/>msgTorque<sp/>=<sp/>wrench-&gt;mutable_torque();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>msgs::Set(msgTorque,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>ignition::math::Vector3d(_torque.X(),<sp/>_torque.Y(),<sp/>_torque.Z()));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>msgs::Set(msgForce,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>ignition::math::Vector3d(_force.X(),<sp/>_force.Y(),<sp/>_force.Z()));</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>t-&gt;set_sec(curTime.sec);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>t-&gt;set_nsec(curTime.nsec);</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/musamorena/catkin_ws/src/uuv_simulator/uuv_gazebo_plugins/uuv_gazebo_plugins/src/UnderwaterObjectPlugin.cc"/>
  </compounddef>
</doxygen>
