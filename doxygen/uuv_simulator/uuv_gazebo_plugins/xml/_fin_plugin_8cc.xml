<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_fin_plugin_8cc" kind="file" language="C++">
    <compoundname>FinPlugin.cc</compoundname>
    <includes refid="_fin_plugin_8hh" local="no">uuv_gazebo_plugins/FinPlugin.hh</includes>
    <includes refid="_def_8hh" local="no">uuv_gazebo_plugins/Def.hh</includes>
    <includes local="no">gazebo/gazebo.hh</includes>
    <includes local="no">gazebo/physics/Link.hh</includes>
    <includes local="no">gazebo/physics/Model.hh</includes>
    <includes local="no">gazebo/physics/World.hh</includes>
    <incdepgraph>
      <node id="145">
        <label>string</label>
      </node>
      <node id="142">
        <label>gazebo/msgs/msgs.hh</label>
      </node>
      <node id="144">
        <label>map</label>
      </node>
      <node id="140">
        <label>gazebo/gazebo.hh</label>
      </node>
      <node id="148">
        <label>uuv_gazebo_plugins/Def.hh</label>
        <link refid="_def_8hh"/>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>sdf/sdf.hh</label>
      </node>
      <node id="149">
        <label>vector</label>
      </node>
      <node id="143">
        <label>uuv_gazebo_plugins/Dynamics.hh</label>
        <link refid="_dynamics_8hh"/>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>Double.pb.h</label>
      </node>
      <node id="138">
        <label>uuv_gazebo_plugins/FinPlugin.hh</label>
        <link refid="_fin_plugin_8hh"/>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>boost/scoped_ptr.hpp</label>
      </node>
      <node id="146">
        <label>uuv_gazebo_plugins/LiftDragModel.hh</label>
        <link refid="_lift_drag_model_8hh"/>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
      </node>
      <node id="153">
        <label>gazebo/physics/Model.hh</label>
      </node>
      <node id="150">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="137">
        <label>/home/musamorena/catkin_ws/src/uuv_simulator/uuv_gazebo_plugins/uuv_gazebo_plugins/src/FinPlugin.cc</label>
        <link refid="_fin_plugin_8cc"/>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
      </node>
      <node id="152">
        <label>gazebo/physics/Link.hh</label>
      </node>
      <node id="151">
        <label>eigen3/Eigen/Geometry</label>
      </node>
      <node id="154">
        <label>gazebo/physics/World.hh</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacegazebo">gazebo</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2016<sp/>The<sp/>UUV<sp/>Simulator<sp/>Authors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_fin_plugin_8hh" kindref="compound">uuv_gazebo_plugins/FinPlugin.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_def_8hh" kindref="compound">uuv_gazebo_plugins/Def.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/gazebo.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/Link.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/Model.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/World.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">GZ_REGISTER_MODEL_PLUGIN(<ref refid="classgazebo_1_1_fin_plugin" kindref="compound">gazebo::FinPlugin</ref>)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegazebo" kindref="compound">gazebo</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="classgazebo_1_1_fin_plugin_1a347a9d485eb98d0c0d1ce181cf3530e7" kindref="member">FinPlugin::FinPlugin</ref>()<sp/>:<sp/>inputCommand(0),<sp/>angle(0),<sp/>finID(-1)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="classgazebo_1_1_fin_plugin_1a6bfb47239eaef146985a19a5005ba320" kindref="member">FinPlugin::~FinPlugin</ref>()</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a1a4d81782ad2d21fc01598e0d9b42d27" kindref="member">updateConnection</ref>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a1a4d81782ad2d21fc01598e0d9b42d27" kindref="member">updateConnection</ref>.reset();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>event::Events::DisconnectWorldUpdateBegin(this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a1a4d81782ad2d21fc01598e0d9b42d27" kindref="member">updateConnection</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FinPlugin::Load(physics::ModelPtr<sp/>_model,<sp/>sdf::ElementPtr<sp/>_sdf)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initializing<sp/>the<sp/>transport<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a5422d922731696d2767e5be09c2cb5c2" kindref="member">node</ref><sp/>=<sp/>transport::NodePtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>transport::Node());</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a5422d922731696d2767e5be09c2cb5c2" kindref="member">node</ref>-&gt;Init(_model-&gt;GetWorld()-&gt;Name());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a5422d922731696d2767e5be09c2cb5c2" kindref="member">node</ref>-&gt;Init(_model-&gt;GetWorld()-&gt;GetName());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fin<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>GZ_ASSERT(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;fin_id&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>fin_id<sp/>parameter.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>this-&gt;finID<sp/>=<sp/>_sdf-&gt;Get&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;fin_id&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>GZ_ASSERT(this-&gt;finID<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Fin<sp/>ID<sp/>must<sp/>be<sp/>greater<sp/>or<sp/>equal<sp/>than<sp/>zero&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Root<sp/>string<sp/>for<sp/>topics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>strs;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>strs<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_model-&gt;GetName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/fins/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;finID<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>this-&gt;topicPrefix<sp/>=<sp/>strs.str();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Input/output<sp/>topics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>std::string<sp/>inputTopic,<sp/>outputTopic;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;input_topic&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>inputTopic<sp/>=<sp/>_sdf-&gt;Get&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;input_topic&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>inputTopic<sp/>=<sp/>this-&gt;topicPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;input&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;output_topic&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>outputTopic<sp/>=<sp/>_sdf-&gt;Get&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;output_topic&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>outputTopic<sp/>=<sp/>this-&gt;topicPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;output&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>GZ_ASSERT(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;link_name&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>link_name.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>std::string<sp/>link_name<sp/>=<sp/>_sdf-&gt;Get&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;link_name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>this-&gt;link<sp/>=<sp/>_model-&gt;GetLink(link_name);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>GZ_ASSERT(this-&gt;link,<sp/></highlight><highlight class="stringliteral">&quot;link<sp/>is<sp/>invalid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>GZ_ASSERT(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;joint_name&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>joint_name.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>std::string<sp/>joint_name<sp/>=<sp/>_sdf-&gt;Get&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;joint_name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>this-&gt;joint<sp/>=<sp/>_model-&gt;GetJoint(joint_name);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>GZ_ASSERT(this-&gt;joint,<sp/></highlight><highlight class="stringliteral">&quot;joint<sp/>is<sp/>invalid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Dynamic<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>GZ_ASSERT(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;dynamics&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>dynamics.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>this-&gt;dynamics.reset(<ref refid="classgazebo_1_1_dynamics_factory_1a6396cc1d091dc0907c825ec37c2ef4e3" kindref="member">DynamicsFactory::GetInstance</ref>().CreateDynamics(</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sdf-&gt;GetElement(</highlight><highlight class="stringliteral">&quot;dynamics&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Lift<sp/>and<sp/>drag<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>GZ_ASSERT(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;liftdrag&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>liftdrag&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>this-&gt;liftdrag.reset(</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgazebo_1_1_lift_drag_factory_1a0de687e12227bda9889214f2dcbf8805" kindref="member">LiftDragFactory::GetInstance</ref>().CreateLiftDrag(</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sdf-&gt;GetElement(</highlight><highlight class="stringliteral">&quot;liftdrag&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Subscribe<sp/>to<sp/>current<sp/>velocity<sp/>topic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>GZ_ASSERT(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;current_velocity_topic&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>current_velocity_topic.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>std::string<sp/>currentVelocityTopic<sp/>=</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>_sdf-&gt;Get&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;current_velocity_topic&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>GZ_ASSERT(!currentVelocityTopic.empty(),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Fluid<sp/>velocity<sp/>topic<sp/>tag<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Subscribing<sp/>to<sp/>current<sp/>velocity<sp/>topic:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>currentVelocityTopic</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>this-&gt;currentSubscriber<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a5422d922731696d2767e5be09c2cb5c2" kindref="member">node</ref>-&gt;Subscribe(currentVelocityTopic,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;<ref refid="classgazebo_1_1_fin_plugin_1aaf4c2da2058c877cbffdd0dc6d94c0ee" kindref="member">FinPlugin::UpdateCurrentVelocity</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Advertise<sp/>the<sp/>output<sp/>topic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>this-&gt;anglePublisher<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a5422d922731696d2767e5be09c2cb5c2" kindref="member">node</ref>-&gt;Advertise&lt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uuv_gazebo_plugins_msgs::msgs::Double&gt;(outputTopic);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Subscribe<sp/>to<sp/>the<sp/>input<sp/>signal<sp/>topic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>this-&gt;commandSubscriber<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a5422d922731696d2767e5be09c2cb5c2" kindref="member">node</ref>-&gt;Subscribe(inputTopic,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classgazebo_1_1_fin_plugin_1ad20391361f5206bde332a229251c7f38" kindref="member">FinPlugin::UpdateInput</ref>,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Connect<sp/>the<sp/>update<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_underwater_object_plugin_1a1a4d81782ad2d21fc01598e0d9b42d27" kindref="member">updateConnection</ref><sp/>=<sp/>event::Events::ConnectWorldUpdateBegin(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::bind(&amp;<ref refid="classgazebo_1_1_fin_plugin_1ab4612d0093ed8b1fd0e24f780f584889" kindref="member">FinPlugin::OnUpdate</ref>,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1));</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FinPlugin::Init()</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_fin_plugin_1ab4612d0093ed8b1fd0e24f780f584889" kindref="member">FinPlugin::OnUpdate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>common::UpdateInfo<sp/>&amp;_info)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>GZ_ASSERT(!std::isnan(this-&gt;inputCommand),</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;nan<sp/>in<sp/>this-&gt;inputCommand&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upperLimit,<sp/>lowerLimit;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>upperLimit<sp/>=<sp/>this-&gt;joint-&gt;UpperLimit(0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>lowerLimit<sp/>=<sp/>this-&gt;joint-&gt;LowerLimit(0);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>upperLimit<sp/>=<sp/>this-&gt;joint-&gt;GetUpperLimit(0).Radian();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>lowerLimit<sp/>=<sp/>this-&gt;joint-&gt;GetLowerLimit(0).Radian();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Limit<sp/>the<sp/>input<sp/>command<sp/>using<sp/>the<sp/>fin<sp/>joint<sp/>limits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>this-&gt;inputCommand<sp/>=<sp/>std::min(upperLimit,<sp/>this-&gt;inputCommand);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>this-&gt;inputCommand<sp/>=<sp/>std::max(lowerLimit,<sp/>this-&gt;inputCommand);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>dynamics<sp/>model:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>this-&gt;angle<sp/>=<sp/>this-&gt;dynamics-&gt;update(this-&gt;inputCommand,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_info.simTime.Double());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>velocity<sp/>in<sp/>lift/drag<sp/>plane:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>ignition::math::Pose3d<sp/>finPose;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>ignition::math::Vector3d<sp/>linVel;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>finPose<sp/>=<sp/>this-&gt;link-&gt;WorldPose();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>linVel<sp/>=<sp/>this-&gt;link-&gt;WorldLinearVel();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>finPose<sp/>=<sp/>this-&gt;link-&gt;GetWorldPose().Ign();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>linVel<sp/>=<sp/>this-&gt;link-&gt;GetWorldLinearVel().Ign();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>ignition::math::Vector3d<sp/>ldNormalI<sp/>=<sp/>finPose.Rot().RotateVector(</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>ignition::math::Vector3d::UnitZ);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>ignition::math::Vector3d<sp/>velI<sp/>=<sp/>linVel<sp/>-<sp/>this-&gt;currentVelocity;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>ignition::math::Vector3d<sp/>velInLDPlaneI<sp/>=<sp/>ldNormalI.Cross(velI.Cross(ldNormalI));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>ignition::math::Vector3d<sp/>velInLDPlaneL<sp/>=<sp/>finPose.Rot().RotateVectorReverse(velInLDPlaneI);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>lift<sp/>and<sp/>drag<sp/>forces:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>this-&gt;finForce<sp/>=<sp/>this-&gt;liftdrag-&gt;compute(velInLDPlaneL);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>this-&gt;link-&gt;AddRelativeForce(this-&gt;finForce);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>forces<sp/>at<sp/>cg<sp/>(with<sp/>torques<sp/>for<sp/>position<sp/>shift).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>new<sp/>fin<sp/>angle.<sp/>Do<sp/>this<sp/>last<sp/>since<sp/>this<sp/>sets<sp/>link&apos;s<sp/>velocity<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>this-&gt;joint-&gt;SetPosition(0,<sp/>this-&gt;angle);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>this-&gt;angleStamp<sp/>=<sp/>_info.simTime;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_fin_plugin_1ad20391361f5206bde332a229251c7f38" kindref="member">FinPlugin::UpdateInput</ref>(ConstDoublePtr<sp/>&amp;_msg)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>this-&gt;inputCommand<sp/>=<sp/>_msg-&gt;value();</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_fin_plugin_1aaf4c2da2058c877cbffdd0dc6d94c0ee" kindref="member">FinPlugin::UpdateCurrentVelocity</ref>(ConstVector3dPtr<sp/>&amp;_msg)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>this-&gt;currentVelocity.X()<sp/>=<sp/>_msg-&gt;x();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>this-&gt;currentVelocity.Y()<sp/>=<sp/>_msg-&gt;y();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>this-&gt;currentVelocity.Z()<sp/>=<sp/>_msg-&gt;z();</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/musamorena/catkin_ws/src/uuv_simulator/uuv_gazebo_plugins/uuv_gazebo_plugins/src/FinPlugin.cc"/>
  </compounddef>
</doxygen>
