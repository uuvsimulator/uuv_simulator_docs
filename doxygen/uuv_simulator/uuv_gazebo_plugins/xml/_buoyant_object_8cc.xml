<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_buoyant_object_8cc" kind="file" language="C++">
    <compoundname>BuoyantObject.cc</compoundname>
    <includes local="no">cmath</includes>
    <includes local="no">gazebo/gazebo.hh</includes>
    <includes refid="_buoyant_object_8hh" local="no">uuv_gazebo_plugins/BuoyantObject.hh</includes>
    <incdepgraph>
      <node id="127">
        <label>gazebo/physics/Collision.hh</label>
      </node>
      <node id="121">
        <label>cmath</label>
      </node>
      <node id="124">
        <label>string</label>
      </node>
      <node id="125">
        <label>map</label>
      </node>
      <node id="122">
        <label>gazebo/gazebo.hh</label>
      </node>
      <node id="123">
        <label>uuv_gazebo_plugins/BuoyantObject.hh</label>
        <link refid="_buoyant_object_8hh"/>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>gazebo/physics/Shape.hh</label>
      </node>
      <node id="126">
        <label>gazebo/physics/Link.hh</label>
      </node>
      <node id="120">
        <label>/home/musamorena/catkin_ws/src/uuv_simulator/uuv_gazebo_plugins/uuv_gazebo_plugins/src/BuoyantObject.cc</label>
        <link refid="_buoyant_object_8cc"/>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacegazebo">gazebo</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2016<sp/>The<sp/>UUV<sp/>Simulator<sp/>Authors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/gazebo.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_buoyant_object_8hh" kindref="compound">uuv_gazebo_plugins/BuoyantObject.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegazebo" kindref="compound">gazebo</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="classgazebo_1_1_buoyant_object_1a359805730b19387b09b949017f4ec98c" kindref="member">BuoyantObject::BuoyantObject</ref>(physics::LinkPtr<sp/>_link)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>GZ_ASSERT(_link<sp/>!=<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>link<sp/>pointer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initial<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a5df478c848c90966d975f43d23273b68" kindref="member">volume</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fluid<sp/>density<sp/>for<sp/>sea<sp/>water<sp/>at<sp/>0<sp/>degrees<sp/>Celsius</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac4f954fe80eef93dd1382cd56be9a8c4" kindref="member">fluidDensity</ref><sp/>=<sp/>1028.0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a10e218847e76c2f8d80f7d6e36936b07" kindref="member">g</ref><sp/>=<sp/>9.81;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac117d052ffe3b6d64b68931fb02a7cfa" kindref="member">centerOfBuoyancy</ref>.Set(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ab0183045981acc20a4bb50bec6ef95df" kindref="member">debugFlag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a3cebc89074e9c099470dc07dc7b48d4c" kindref="member">isSubmerged</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>this-&gt;metacentricWidth<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a5f3d6b665a81d6e253f958e2a223cab5" kindref="member">metacentricLength</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a81cdf161131ba5c6b5d0b0375a13e6d4" kindref="member">waterLevelPlaneArea</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ad83cee778e1d1851e3c951a1bbbed73e" kindref="member">submergedHeight</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a3418fd9dd6946135e0d36a5e47c4d47d" kindref="member">isSurfaceVessel</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ad5478bc34170f61cc4c5dfa29bc2b652" kindref="member">scalingVolume</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a87a15b7f37f66ac1042e3d2389c961ae" kindref="member">offsetVolume</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a894adcdaac90ad400378c15e893efefa" kindref="member">isSurfaceVesselFloating</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac6c3d6cdb2429b08d460c8a73b425faa" kindref="member">link</ref><sp/>=<sp/>_link;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME(mam0box)<sp/>Gazebo&apos;s<sp/>bounding<sp/>box<sp/>method<sp/>is<sp/>NOT<sp/>working</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(mam0box)<sp/>Change<sp/>the<sp/>way<sp/>the<sp/>bounding<sp/>box<sp/>is<sp/>retrieved,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>should<sp/>come<sp/>from<sp/>the<sp/>physics<sp/>engine<sp/>but<sp/>it<sp/>is<sp/>still<sp/>not<sp/>resolved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ad112205a7f3eafdd5d928053ddcf5b56" kindref="member">boundingBox</ref><sp/>=<sp/><ref refid="classgazebo_1_1_buoyant_object_1ac6c3d6cdb2429b08d460c8a73b425faa" kindref="member">link</ref>-&gt;BoundingBox();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>math::Box<sp/>bBox<sp/>=<sp/><ref refid="classgazebo_1_1_buoyant_object_1ac6c3d6cdb2429b08d460c8a73b425faa" kindref="member">link</ref>-&gt;GetBoundingBox();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ad112205a7f3eafdd5d928053ddcf5b56" kindref="member">boundingBox</ref><sp/>=<sp/>ignition::math::Box(bBox.min.x,<sp/>bBox.min.y,<sp/>bBox.min.z,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bBox.max.x,<sp/>bBox.max.y,<sp/>bBox.max.z);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>neutrally<sp/>buoyant<sp/>flag<sp/>to<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a7a708207b8bfa11a2b16fdd9760cf7fe" kindref="member">neutrallyBuoyant</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="classgazebo_1_1_buoyant_object_1aa2bce1d66c086f79021ede0af29b3c35" kindref="member">BuoyantObject::~BuoyantObject</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_buoyant_object_1a28274bff9fd823e3691241d10f4634ba" kindref="member">BuoyantObject::SetNeutrallyBuoyant</ref>()</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a7a708207b8bfa11a2b16fdd9760cf7fe" kindref="member">neutrallyBuoyant</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>equivalent<sp/>volume<sp/>for<sp/>the<sp/>submerged<sp/>body</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>it<sp/>will<sp/>be<sp/>neutrally<sp/>buoyant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>mass<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac6c3d6cdb2429b08d460c8a73b425faa" kindref="member">link</ref>-&gt;GetInertial()-&gt;Mass();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>mass<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac6c3d6cdb2429b08d460c8a73b425faa" kindref="member">link</ref>-&gt;GetInertial()-&gt;GetMass();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a5df478c848c90966d975f43d23273b68" kindref="member">volume</ref><sp/>=<sp/>mass<sp/>/<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac4f954fe80eef93dd1382cd56be9a8c4" kindref="member">fluidDensity</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac6c3d6cdb2429b08d460c8a73b425faa" kindref="member">link</ref>-&gt;GetName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>neutrally<sp/>buoyant&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_buoyant_object_1a932cee34723b709eacc09b7faf06c160" kindref="member">BuoyantObject::GetBuoyancyForce</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ignition::math::Pose3d<sp/>&amp;_pose,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>ignition::math::Vector3d<sp/>&amp;buoyancyForce,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>ignition::math::Vector3d<sp/>&amp;buoyancyTorque)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ad112205a7f3eafdd5d928053ddcf5b56" kindref="member">boundingBox</ref>.ZLength();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>_pose.Pos().Z();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_buoyant_object_1a5df478c848c90966d975f43d23273b68" kindref="member">volume</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>buoyancyForce<sp/>=<sp/>ignition::math::Vector3d(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>buoyancyTorque<sp/>=<sp/>ignition::math::Vector3d(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>mass<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac6c3d6cdb2429b08d460c8a73b425faa" kindref="member">link</ref>-&gt;GetInertial()-&gt;Mass();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>mass<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac6c3d6cdb2429b08d460c8a73b425faa" kindref="member">link</ref>-&gt;GetInertial()-&gt;GetMass();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a3418fd9dd6946135e0d36a5e47c4d47d" kindref="member">isSurfaceVessel</ref>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>+<sp/>height<sp/>/<sp/>2<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>z<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a3cebc89074e9c099470dc07dc7b48d4c" kindref="member">isSubmerged</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>volume<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac68e8561a42b7a735df95b98bc36c9e2" kindref="member">GetVolume</ref>()<sp/>*<sp/>(std::fabs(z)<sp/>+<sp/>height<sp/>/<sp/>2)<sp/>/<sp/>height;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>+<sp/>height<sp/>/<sp/>2<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a3cebc89074e9c099470dc07dc7b48d4c" kindref="member">isSubmerged</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>volume<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac68e8561a42b7a735df95b98bc36c9e2" kindref="member">GetVolume</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a7a708207b8bfa11a2b16fdd9760cf7fe" kindref="member">neutrallyBuoyant</ref><sp/>||<sp/>volume<sp/>!=<sp/>this-&gt;volume)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buoyancyForce<sp/>=<sp/>ignition::math::Vector3d(0,<sp/>0,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>volume<sp/>*<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac4f954fe80eef93dd1382cd56be9a8c4" kindref="member">fluidDensity</ref><sp/>*<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a10e218847e76c2f8d80f7d6e36936b07" kindref="member">g</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a7a708207b8bfa11a2b16fdd9760cf7fe" kindref="member">neutrallyBuoyant</ref>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buoyancyForce<sp/>=<sp/>ignition::math::Vector3d(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>mass<sp/>*<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a10e218847e76c2f8d80f7d6e36936b07" kindref="member">g</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implementation<sp/>of<sp/>the<sp/>linear<sp/>(small<sp/>angle)<sp/>theory<sp/>for<sp/>boxed-shaped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vessels.<sp/>Further<sp/>details<sp/>can<sp/>be<sp/>seen<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>T.<sp/>I.<sp/>Fossen,<sp/>&quot;Handbook<sp/>of<sp/>Marine<sp/>Craft<sp/>Hydrodynamics<sp/>and<sp/>Motion<sp/>Control,&quot;<sp/>Apr.<sp/>2011.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>65</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a81cdf161131ba5c6b5d0b0375a13e6d4" kindref="member">waterLevelPlaneArea</ref><sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a81cdf161131ba5c6b5d0b0375a13e6d4" kindref="member">waterLevelPlaneArea</ref><sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ad112205a7f3eafdd5d928053ddcf5b56" kindref="member">boundingBox</ref>.XLength()<sp/>*</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ad112205a7f3eafdd5d928053ddcf5b56" kindref="member">boundingBox</ref>.YLength();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac6c3d6cdb2429b08d460c8a73b425faa" kindref="member">link</ref>-&gt;GetName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;waterLevelPlaneArea<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a81cdf161131ba5c6b5d0b0375a13e6d4" kindref="member">waterLevelPlaneArea</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a81cdf161131ba5c6b5d0b0375a13e6d4" kindref="member">waterLevelPlaneArea</ref><sp/>=<sp/>mass<sp/>/<sp/>(this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac4f954fe80eef93dd1382cd56be9a8c4" kindref="member">fluidDensity</ref><sp/>*<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ad83cee778e1d1851e3c951a1bbbed73e" kindref="member">submergedHeight</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>curSubmergedHeight;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>GZ_ASSERT(this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a81cdf161131ba5c6b5d0b0375a13e6d4" kindref="member">waterLevelPlaneArea</ref><sp/>&gt;<sp/>0.0,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Water<sp/>level<sp/>plane<sp/>area<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>zero&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&gt;<sp/>height<sp/>/<sp/>2.0)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vessel<sp/>is<sp/>completely<sp/>out<sp/>of<sp/>the<sp/>water</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buoyancyForce<sp/>=<sp/>ignition::math::Vector3d(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buoyancyTorque<sp/>=<sp/>ignition::math::Vector3d(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&lt;<sp/>-height<sp/>/<sp/>2.0)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curSubmergedHeight<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ad112205a7f3eafdd5d928053ddcf5b56" kindref="member">boundingBox</ref>.ZLength();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curSubmergedHeight<sp/>=<sp/>height<sp/>/<sp/>2.0<sp/>-<sp/>z;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>volume<sp/>=<sp/>curSubmergedHeight<sp/>*<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a81cdf161131ba5c6b5d0b0375a13e6d4" kindref="member">waterLevelPlaneArea</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>buoyancyForce<sp/>=<sp/>ignition::math::Vector3d(0,<sp/>0,<sp/>volume<sp/>*<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac4f954fe80eef93dd1382cd56be9a8c4" kindref="member">fluidDensity</ref><sp/>*<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a10e218847e76c2f8d80f7d6e36936b07" kindref="member">g</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>buoyancyTorque<sp/>=<sp/>ignition::math::Vector3d(</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-1<sp/>*<sp/>this-&gt;metacentricWidth<sp/>*<sp/>sin(_pose.Rot().Roll())<sp/>*<sp/>buoyancyForce.Z(),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-1<sp/>*<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a5f3d6b665a81d6e253f958e2a223cab5" kindref="member">metacentricLength</ref><sp/>*<sp/>sin(_pose.Rot().Pitch())<sp/>*<sp/>buoyancyForce.Z(),</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>restoring<sp/>force<sp/>vector,<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a72cef0c40933fdad28fbb805ca392ad6" kindref="member">StoreVector</ref>(<ref refid="_def_8hh_1a1d994d77185f407da4a9682b1b8e8e9b" kindref="member">RESTORING_FORCE</ref>,<sp/>buoyancyForce);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>restoring<sp/>force<sp/>vector,<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a72cef0c40933fdad28fbb805ca392ad6" kindref="member">StoreVector</ref>(<ref refid="_def_8hh_1a1d994d77185f407da4a9682b1b8e8e9b" kindref="member">RESTORING_FORCE</ref>,<sp/>buoyancyForce);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_buoyant_object_1a4921e5c67f56246c7db97354907e96b4" kindref="member">BuoyantObject::ApplyBuoyancyForce</ref>()</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Link&apos;s<sp/>pose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>ignition::math::Pose3d<sp/>pose;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>pose<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac6c3d6cdb2429b08d460c8a73b425faa" kindref="member">link</ref>-&gt;WorldPose();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>pose<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac6c3d6cdb2429b08d460c8a73b425faa" kindref="member">link</ref>-&gt;GetWorldPose().Ign();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>buoyancy<sp/>force<sp/>in<sp/>world<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>ignition::math::Vector3d<sp/>buoyancyForce,<sp/>buoyancyTorque;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a932cee34723b709eacc09b7faf06c160" kindref="member">GetBuoyancyForce</ref>(pose,<sp/>buoyancyForce,<sp/>buoyancyTorque);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>GZ_ASSERT(!std::isnan(buoyancyForce.Length()),</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Buoyancy<sp/>force<sp/>is<sp/>invalid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>GZ_ASSERT(!std::isnan(buoyancyTorque.Length()),</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Buoyancy<sp/>torque<sp/>is<sp/>invalid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a3418fd9dd6946135e0d36a5e47c4d47d" kindref="member">isSurfaceVessel</ref>)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac6c3d6cdb2429b08d460c8a73b425faa" kindref="member">link</ref>-&gt;AddForceAtRelativePosition(buoyancyForce,<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac650663010209205589444a1b6399d8f" kindref="member">GetCoB</ref>());</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac6c3d6cdb2429b08d460c8a73b425faa" kindref="member">link</ref>-&gt;AddForceAtRelativePosition(</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>math::Vector3(buoyancyForce.X(),<sp/>buoyancyForce.Y(),<sp/>buoyancyForce.Z()),</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>math::Vector3(this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac650663010209205589444a1b6399d8f" kindref="member">GetCoB</ref>().X(),<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac650663010209205589444a1b6399d8f" kindref="member">GetCoB</ref>().Y(),<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac650663010209205589444a1b6399d8f" kindref="member">GetCoB</ref>().Z()));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac6c3d6cdb2429b08d460c8a73b425faa" kindref="member">link</ref>-&gt;AddForce(buoyancyForce);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac6c3d6cdb2429b08d460c8a73b425faa" kindref="member">link</ref>-&gt;AddRelativeTorque(buoyancyTorque);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac6c3d6cdb2429b08d460c8a73b425faa" kindref="member">link</ref>-&gt;AddForce(</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>math::Vector3(buoyancyForce.X(),<sp/>buoyancyForce.Y(),<sp/>buoyancyForce.Z()));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac6c3d6cdb2429b08d460c8a73b425faa" kindref="member">link</ref>-&gt;AddRelativeTorque(</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>math::Vector3(buoyancyTorque.X(),<sp/>buoyancyTorque.Y(),<sp/>buoyancyTorque.Z()));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_buoyant_object_1aa882b38b3a34b53b63387e88b3cf35f8" kindref="member">BuoyantObject::SetBoundingBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ignition::math::Box<sp/>&amp;_bBox)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ad112205a7f3eafdd5d928053ddcf5b56" kindref="member">boundingBox</ref><sp/>=<sp/>ignition::math::Box(_bBox);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;New<sp/>bounding<sp/>box<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac6c3d6cdb2429b08d460c8a73b425faa" kindref="member">link</ref>-&gt;GetName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ad112205a7f3eafdd5d928053ddcf5b56" kindref="member">boundingBox</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_buoyant_object_1af6d39e740bfb499c20066308dbd4c8db" kindref="member">BuoyantObject::SetVolume</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_volume)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>GZ_ASSERT(_volume<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>input<sp/>volume&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>this-&gt;volume<sp/>=<sp/>_volume;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_buoyant_object_1ac68e8561a42b7a735df95b98bc36c9e2" kindref="member">BuoyantObject::GetVolume</ref>()</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::max(0.0,<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ad5478bc34170f61cc4c5dfa29bc2b652" kindref="member">scalingVolume</ref><sp/>*<sp/>(this-&gt;volume<sp/>+<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a87a15b7f37f66ac1042e3d2389c961ae" kindref="member">offsetVolume</ref>));</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_buoyant_object_1a678331bb1b31810e0e0cebfc3308e716" kindref="member">BuoyantObject::SetFluidDensity</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_fluidDensity)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>GZ_ASSERT(_fluidDensity<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Fluid<sp/>density<sp/>must<sp/>be<sp/>a<sp/>positive<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac4f954fe80eef93dd1382cd56be9a8c4" kindref="member">fluidDensity</ref><sp/>=<sp/>_fluidDensity;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_buoyant_object_1aa5f4f9aa79af1d53bf2abac34c919e3f" kindref="member">BuoyantObject::GetFluidDensity</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac4f954fe80eef93dd1382cd56be9a8c4" kindref="member">fluidDensity</ref>;<sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_buoyant_object_1ab8eb0fcd27dcc5e42493953b5f8a3fbf" kindref="member">BuoyantObject::SetCoB</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ignition::math::Vector3d<sp/>&amp;_centerOfBuoyancy)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac117d052ffe3b6d64b68931fb02a7cfa" kindref="member">centerOfBuoyancy</ref><sp/>=<sp/>ignition::math::Vector3d(</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>_centerOfBuoyancy.X(),<sp/>_centerOfBuoyancy.Y(),<sp/>_centerOfBuoyancy.Z());</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">ignition::math::Vector3d<sp/><ref refid="classgazebo_1_1_buoyant_object_1ac650663010209205589444a1b6399d8f" kindref="member">BuoyantObject::GetCoB</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ac117d052ffe3b6d64b68931fb02a7cfa" kindref="member">centerOfBuoyancy</ref>;<sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_buoyant_object_1a58bf8302392511f120389455b20650d0" kindref="member">BuoyantObject::SetGravity</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_g)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>GZ_ASSERT(_g<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Acceleration<sp/>of<sp/>gravity<sp/>must<sp/>be<sp/>positive&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a10e218847e76c2f8d80f7d6e36936b07" kindref="member">g</ref><sp/>=<sp/>_g;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_buoyant_object_1a30e79e6d2a15cc72f13f2bdbd4d8ca20" kindref="member">BuoyantObject::GetGravity</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a10e218847e76c2f8d80f7d6e36936b07" kindref="member">g</ref>;<sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_buoyant_object_1a82d4bf4144197aacc72af095b694646d" kindref="member">BuoyantObject::SetDebugFlag</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_debugOn)<sp/>{<sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ab0183045981acc20a4bb50bec6ef95df" kindref="member">debugFlag</ref><sp/>=<sp/>_debugOn;<sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_buoyant_object_1a83d4b9929c151d16c2b554a13f6eb999" kindref="member">BuoyantObject::GetDebugFlag</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ab0183045981acc20a4bb50bec6ef95df" kindref="member">debugFlag</ref>;<sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_buoyant_object_1a4eac79e88a01768d2ac57edb9f0c2165" kindref="member">BuoyantObject::SetStoreVector</ref>(std::string<sp/>_tag)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ab0183045981acc20a4bb50bec6ef95df" kindref="member">debugFlag</ref>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>if<sp/>field<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1aa4e2fa73e7befaa26e862b65b374d4cc" kindref="member">hydroWrench</ref>.count(_tag))</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1aa4e2fa73e7befaa26e862b65b374d4cc" kindref="member">hydroWrench</ref>[_tag]<sp/>=<sp/>ignition::math::Vector3d(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">ignition::math::Vector3d<sp/><ref refid="classgazebo_1_1_buoyant_object_1a54823aae49748ba43a3850a46e6bde54" kindref="member">BuoyantObject::GetStoredVector</ref>(std::string<sp/>_tag)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ab0183045981acc20a4bb50bec6ef95df" kindref="member">debugFlag</ref>)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ignition::math::Vector3d(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1aa4e2fa73e7befaa26e862b65b374d4cc" kindref="member">hydroWrench</ref>.count(_tag))</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1aa4e2fa73e7befaa26e862b65b374d4cc" kindref="member">hydroWrench</ref>[_tag];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ignition::math::Vector3d(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_buoyant_object_1a72cef0c40933fdad28fbb805ca392ad6" kindref="member">BuoyantObject::StoreVector</ref>(std::string<sp/>_tag,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>ignition::math::Vector3d<sp/>_vec)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1ab0183045981acc20a4bb50bec6ef95df" kindref="member">debugFlag</ref>)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>if<sp/>field<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1aa4e2fa73e7befaa26e862b65b374d4cc" kindref="member">hydroWrench</ref>.count(_tag))</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1aa4e2fa73e7befaa26e862b65b374d4cc" kindref="member">hydroWrench</ref>[_tag]<sp/>=<sp/>_vec;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_buoyant_object_1a8c463acfd7aff5617ae4eee3b7fce5bd" kindref="member">BuoyantObject::IsSubmerged</ref>()</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a3cebc89074e9c099470dc07dc7b48d4c" kindref="member">isSubmerged</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_buoyant_object_1a1963a046ea32ebd0c5ef8b84e47ffa12" kindref="member">BuoyantObject::IsNeutrallyBuoyant</ref>()</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classgazebo_1_1_buoyant_object_1a7a708207b8bfa11a2b16fdd9760cf7fe" kindref="member">neutrallyBuoyant</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/musamorena/catkin_ws/src/uuv_simulator/uuv_gazebo_plugins/uuv_gazebo_plugins/src/BuoyantObject.cc"/>
  </compounddef>
</doxygen>
