<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="descrobject_8h" kind="file" language="C++">
    <compoundname>descrobject.h</compoundname>
    <includedby refid="_python_8h" local="yes">/usr/include/python3.6m/Python.h</includedby>
    <invincdepgraph>
      <node id="2885">
        <label>/usr/include/python3.6m/Imaging.h</label>
        <link refid="_imaging_8h_source"/>
      </node>
      <node id="2882">
        <label>/usr/include/python3.6m/descrobject.h</label>
        <link refid="descrobject_8h"/>
        <childnode refid="2883" relation="include">
        </childnode>
      </node>
      <node id="2886">
        <label>/usr/include/python3.6m/pgenheaders.h</label>
        <link refid="pgenheaders_8h_source"/>
      </node>
      <node id="2888">
        <label>venv/lib/python3.6/site-packages/lxml/includes/etree_defs.h</label>
        <link refid="etree__defs_8h_source"/>
      </node>
      <node id="2883">
        <label>/usr/include/python3.6m/Python.h</label>
        <link refid="_python_8h_source"/>
        <childnode refid="2884" relation="include">
        </childnode>
        <childnode refid="2886" relation="include">
        </childnode>
        <childnode refid="2887" relation="include">
        </childnode>
        <childnode refid="2888" relation="include">
        </childnode>
        <childnode refid="2889" relation="include">
        </childnode>
      </node>
      <node id="2889">
        <label>venv/lib/python3.6/site-packages/lxml/lxml.etree_api.h</label>
        <link refid="lxml_8etree__api_8h_source"/>
      </node>
      <node id="2884">
        <label>/usr/include/python3.6m/ImPlatform.h</label>
        <link refid="_im_platform_8h_source"/>
        <childnode refid="2885" relation="include">
        </childnode>
      </node>
      <node id="2887">
        <label>venv/lib/python3.6/site-packages/lxml/etree_api.h</label>
        <link refid="etree__api_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_py_get_set_def" prot="public">PyGetSetDef</innerclass>
    <innerclass refid="structwrapperbase" prot="public">wrapperbase</innerclass>
    <innerclass refid="struct_py_descr_object" prot="public">PyDescrObject</innerclass>
    <innerclass refid="struct_py_method_descr_object" prot="public">PyMethodDescrObject</innerclass>
    <innerclass refid="struct_py_member_descr_object" prot="public">PyMemberDescrObject</innerclass>
    <innerclass refid="struct_py_get_set_descr_object" prot="public">PyGetSetDescrObject</innerclass>
    <innerclass refid="struct_py_wrapper_descr_object" prot="public">PyWrapperDescrObject</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="descrobject_8h_1a807a348a304599d36e358aeaa19d4731" prot="public" static="no">
        <name>PyWrapperFlag_KEYWORDS</name>
        <initializer>1 /* wrapper function takes keyword args */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/descrobject.h" line="37" column="9" bodyfile="/usr/include/python3.6m/descrobject.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="descrobject_8h_1ad6657abf0a8b1122cdcd1c1d9625a65d" prot="public" static="no">
        <name>PyDescr_COMMON</name>
        <initializer><ref refid="struct_py_descr_object" kindref="compound">PyDescrObject</ref> d_common</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/descrobject.h" line="48" column="9" bodyfile="/usr/include/python3.6m/descrobject.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="descrobject_8h_1a0d2bc679367576eb4071b8c3bfe13edc" prot="public" static="no">
        <name>PyDescr_TYPE</name>
        <param><defname>x</defname></param>
        <initializer>(((<ref refid="struct_py_descr_object" kindref="compound">PyDescrObject</ref> *)(x))-&gt;d_type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/descrobject.h" line="50" column="9" bodyfile="/usr/include/python3.6m/descrobject.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="descrobject_8h_1a7b007021fc924eb74eccb0bb05d99ad1" prot="public" static="no">
        <name>PyDescr_NAME</name>
        <param><defname>x</defname></param>
        <initializer>(((<ref refid="struct_py_descr_object" kindref="compound">PyDescrObject</ref> *)(x))-&gt;d_name)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/descrobject.h" line="51" column="9" bodyfile="/usr/include/python3.6m/descrobject.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="descrobject_8h_1a67772c19d805c1c792b7075ccb4f81cb" prot="public" static="no">
        <name>PyDescr_IsData</name>
        <param><defname>d</defname></param>
        <initializer>(Py_TYPE(d)-&gt;tp_descr_set != NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/descrobject.h" line="95" column="9" bodyfile="/usr/include/python3.6m/descrobject.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="descrobject_8h_1ac44beb2d92298f4cdf6b605b6d9ecb25" prot="public" static="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *(*</type>
        <definition>typedef PyObject*(* getter) (PyObject *, void *)</definition>
        <argsstring>)(PyObject *, void *)</argsstring>
        <name>getter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/descrobject.h" line="8" column="1" bodyfile="/usr/include/python3.6m/descrobject.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="descrobject_8h_1a92c8202514fe030a3d6b691da347af29" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* setter) (PyObject *, PyObject *, void *)</definition>
        <argsstring>)(PyObject *, PyObject *, void *)</argsstring>
        <name>setter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/descrobject.h" line="9" column="1" bodyfile="/usr/include/python3.6m/descrobject.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="descrobject_8h_1a83c2c298287ad5d24d8b49fbb13aeee9" prot="public" static="no">
        <type>struct <ref refid="struct_py_get_set_def" kindref="compound">PyGetSetDef</ref></type>
        <definition>typedef struct PyGetSetDef  PyGetSetDef</definition>
        <argsstring></argsstring>
        <name>PyGetSetDef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/descrobject.h" line="17" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="descrobject_8h_1aa0427daa24e34913e3ab0a4cd794ee9b" prot="public" static="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *(*</type>
        <definition>typedef PyObject*(* wrapperfunc) (PyObject *self, PyObject *args, void *wrapped)</definition>
        <argsstring>)(PyObject *self, PyObject *args, void *wrapped)</argsstring>
        <name>wrapperfunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/descrobject.h" line="20" column="1" bodyfile="/usr/include/python3.6m/descrobject.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="descrobject_8h_1ad3e5330d306a8e4f7f9bc410d207d085" prot="public" static="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *(*</type>
        <definition>typedef PyObject*(* wrapperfunc_kwds) (PyObject *self, PyObject *args, void *wrapped, PyObject *kwds)</definition>
        <argsstring>)(PyObject *self, PyObject *args, void *wrapped, PyObject *kwds)</argsstring>
        <name>wrapperfunc_kwds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/descrobject.h" line="23" column="1" bodyfile="/usr/include/python3.6m/descrobject.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="descrobject_8h_1a98e9af98b169859293051b7898afa189" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_DATA</definition>
        <argsstring>(PyTypeObject) PyClassMethodDescr_Type</argsstring>
        <name>PyAPI_DATA</name>
        <param>
          <type><ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/descrobject.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="descrobject_8h_1a7012edcd95055cf2fba9f8e2e84da920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(PyObject *) PyDescr_NewMethod(PyTypeObject *</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/descrobject.h" line="85" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Descriptors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_DESCROBJECT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_DESCROBJECT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*(*getter)(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*setter)(PyObject<sp/>*,<sp/>PyObject<sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="struct_py_get_set_def" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_py_get_set_def" kindref="compound">PyGetSetDef</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>getter<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>setter<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*doc;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*closure;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}<sp/><ref refid="struct_py_get_set_def" kindref="compound">PyGetSetDef</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PyObject<sp/>*(*wrapperfunc)(PyObject<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>PyObject<sp/>*args,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*wrapped);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PyObject<sp/>*(*wrapperfunc_kwds)(PyObject<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>PyObject<sp/>*args,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*wrapped,<sp/>PyObject<sp/>*kwds);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structwrapperbase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwrapperbase" kindref="compound">wrapperbase</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">function</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapperfunc<sp/>wrapper;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*doc;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*name_strobj;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Flags<sp/>for<sp/>above<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyWrapperFlag_KEYWORDS<sp/>1<sp/></highlight><highlight class="comment">/*<sp/>wrapper<sp/>function<sp/>takes<sp/>keyword<sp/>args<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Various<sp/>kinds<sp/>of<sp/>descriptor<sp/>objects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="struct_py_descr_object" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject_HEAD</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref><sp/>*d_type;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*d_name;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*d_qualname;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}<sp/><ref refid="struct_py_descr_object" kindref="compound">PyDescrObject</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyDescr_COMMON<sp/>PyDescrObject<sp/>d_common</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyDescr_TYPE(x)<sp/>(((PyDescrObject<sp/>*)(x))-&gt;d_type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyDescr_NAME(x)<sp/>(((PyDescrObject<sp/>*)(x))-&gt;d_name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="struct_py_method_descr_object" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>PyDescr_COMMON;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_py_method_def" kindref="compound">PyMethodDef</ref><sp/>*d_method;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}<sp/><ref refid="struct_py_method_descr_object" kindref="compound">PyMethodDescrObject</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="struct_py_member_descr_object" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>PyDescr_COMMON;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_py_member_def" kindref="compound">PyMemberDef</ref><sp/>*d_member;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}<sp/><ref refid="struct_py_member_descr_object" kindref="compound">PyMemberDescrObject</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="struct_py_get_set_descr_object" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>PyDescr_COMMON;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_py_get_set_def" kindref="compound">PyGetSetDef</ref><sp/>*d_getset;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}<sp/><ref refid="struct_py_get_set_descr_object" kindref="compound">PyGetSetDescrObject</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="struct_py_wrapper_descr_object" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>PyDescr_COMMON;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwrapperbase" kindref="compound">wrapperbase</ref><sp/>*d_base;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*d_wrapped;<sp/></highlight><highlight class="comment">/*<sp/>This<sp/>can<sp/>be<sp/>any<sp/>function<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}<sp/><ref refid="struct_py_wrapper_descr_object" kindref="compound">PyWrapperDescrObject</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>Py_LIMITED_API<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">PyAPI_DATA(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref>)<sp/>PyClassMethodDescr_Type;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">PyAPI_DATA(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref>)<sp/>PyGetSetDescr_Type;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">PyAPI_DATA(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref>)<sp/>PyMemberDescr_Type;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">PyAPI_DATA(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref>)<sp/>PyMethodDescr_Type;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">PyAPI_DATA(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref>)<sp/>PyWrapperDescr_Type;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">PyAPI_DATA(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref>)<sp/>PyDictProxy_Type;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">PyAPI_DATA(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref>)<sp/>_PyMethodWrapper_Type;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>Py_LIMITED_API<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">PyAPI_FUNC(PyObject<sp/>*)<sp/>PyDescr_NewMethod(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref><sp/>*,<sp/><ref refid="struct_py_method_def" kindref="compound">PyMethodDef</ref><sp/>*);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">PyAPI_FUNC(PyObject<sp/>*)<sp/>PyDescr_NewClassMethod(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref><sp/>*,<sp/><ref refid="struct_py_method_def" kindref="compound">PyMethodDef</ref><sp/>*);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_py_member_def" kindref="compound">PyMemberDef</ref>;<sp/></highlight><highlight class="comment">/*<sp/>forward<sp/>declaration<sp/>for<sp/>following<sp/>prototype<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">PyAPI_FUNC(PyObject<sp/>*)<sp/>PyDescr_NewMember(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref><sp/>*,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_py_member_def" kindref="compound">PyMemberDef</ref><sp/>*);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">PyAPI_FUNC(PyObject<sp/>*)<sp/>PyDescr_NewGetSet(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref><sp/>*,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_py_get_set_def" kindref="compound">PyGetSetDef</ref><sp/>*);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">PyAPI_FUNC(PyObject<sp/>*)<sp/>PyDescr_NewWrapper(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref><sp/>*,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structwrapperbase" kindref="compound">wrapperbase</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyDescr_IsData(d)<sp/>(Py_TYPE(d)-&gt;tp_descr_set<sp/>!=<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">PyAPI_FUNC(PyObject<sp/>*)<sp/>PyDictProxy_New(PyObject<sp/>*);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">PyAPI_FUNC(PyObject<sp/>*)<sp/>PyWrapper_New(PyObject<sp/>*,<sp/>PyObject<sp/>*);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">PyAPI_DATA(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref>)<sp/>PyProperty_Type;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!Py_DESCROBJECT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/usr/include/python3.6m/descrobject.h"/>
  </compounddef>
</doxygen>
