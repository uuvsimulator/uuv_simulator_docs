<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="struct__comprehension" kind="struct" language="C++" prot="public">
    <compoundname>_comprehension</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct__comprehension_1a810b2152a85f7ba984e54207d59d8124" prot="public" static="no" mutable="no">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _comprehension::target</definition>
        <argsstring></argsstring>
        <name>target</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="389" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__comprehension_1ab351ea193dabc5c156b6c571f7f80681" prot="public" static="no" mutable="no">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _comprehension::iter</definition>
        <argsstring></argsstring>
        <name>iter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="390" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__comprehension_1abe4e5448c7e19c25ced95cf7027df493" prot="public" static="no" mutable="no">
        <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
        <definition>asdl_seq* _comprehension::ifs</definition>
        <argsstring></argsstring>
        <name>ifs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="391" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__comprehension_1a3691fea498ecf536bec69c0f350119d5" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int _comprehension::is_async</definition>
        <argsstring></argsstring>
        <name>is_async</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="392" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="77">
        <label>PyMethodDef</label>
        <link refid="struct_py_method_def"/>
        <childnode refid="73" relation="usage">
          <edgelabel>ml_meth</edgelabel>
        </childnode>
      </node>
      <node id="73">
        <label>_object</label>
        <link refid="struct__object"/>
        <childnode refid="74" relation="usage">
          <edgelabel>ob_type</edgelabel>
        </childnode>
      </node>
      <node id="79">
        <label>PySequenceMethods</label>
        <link refid="struct_py_sequence_methods"/>
        <childnode refid="73" relation="usage">
          <edgelabel>sq_contains</edgelabel>
          <edgelabel>sq_item</edgelabel>
          <edgelabel>sq_inplace_concat</edgelabel>
          <edgelabel>sq_concat</edgelabel>
          <edgelabel>sq_ass_item</edgelabel>
          <edgelabel>sq_length</edgelabel>
          <edgelabel>sq_inplace_repeat</edgelabel>
          <edgelabel>sq_repeat</edgelabel>
        </childnode>
      </node>
      <node id="72">
        <label>_arg</label>
        <link refid="struct__arg"/>
        <childnode refid="73" relation="usage">
          <edgelabel>arg</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>annotation</edgelabel>
        </childnode>
      </node>
      <node id="70">
        <label>asdl_int_seq</label>
        <link refid="structasdl__int__seq"/>
      </node>
      <node id="69">
        <label>_slice</label>
        <link refid="struct__slice"/>
        <childnode refid="67" relation="usage">
          <edgelabel>dims</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>lower</edgelabel>
          <edgelabel>value</edgelabel>
          <edgelabel>upper</edgelabel>
          <edgelabel>step</edgelabel>
        </childnode>
      </node>
      <node id="78">
        <label>PyBufferProcs</label>
        <link refid="struct_py_buffer_procs"/>
        <childnode refid="73" relation="usage">
          <edgelabel>bf_releasebuffer</edgelabel>
          <edgelabel>bf_getbuffer</edgelabel>
        </childnode>
      </node>
      <node id="80">
        <label>PyGetSetDef</label>
        <link refid="struct_py_get_set_def"/>
        <childnode refid="73" relation="usage">
          <edgelabel>set</edgelabel>
          <edgelabel>get</edgelabel>
        </childnode>
      </node>
      <node id="74">
        <label>_typeobject</label>
        <link refid="struct__typeobject"/>
        <childnode refid="75" relation="usage">
          <edgelabel>tp_as_mapping</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>tp_members</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>tp_methods</edgelabel>
        </childnode>
        <childnode refid="78" relation="usage">
          <edgelabel>tp_as_buffer</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>tp_as_sequence</edgelabel>
        </childnode>
        <childnode refid="80" relation="usage">
          <edgelabel>tp_getset</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>tp_as_number</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>tp_as_async</edgelabel>
        </childnode>
        <childnode refid="73" relation="usage">
          <edgelabel>tp_cache</edgelabel>
          <edgelabel>tp_iternext</edgelabel>
          <edgelabel>tp_repr</edgelabel>
          <edgelabel>tp_alloc</edgelabel>
          <edgelabel>tp_weaklist</edgelabel>
          <edgelabel>tp_descr_set</edgelabel>
          <edgelabel>tp_finalize</edgelabel>
          <edgelabel>tp_clear</edgelabel>
          <edgelabel>tp_dict</edgelabel>
          <edgelabel>tp_mro</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>tp_base</edgelabel>
        </childnode>
      </node>
      <node id="75">
        <label>PyMappingMethods</label>
        <link refid="struct_py_mapping_methods"/>
        <childnode refid="73" relation="usage">
          <edgelabel>mp_subscript</edgelabel>
          <edgelabel>mp_length</edgelabel>
          <edgelabel>mp_ass_subscript</edgelabel>
        </childnode>
      </node>
      <node id="71">
        <label>_arguments</label>
        <link refid="struct__arguments"/>
        <childnode refid="67" relation="usage">
          <edgelabel>kwonlyargs</edgelabel>
          <edgelabel>defaults</edgelabel>
          <edgelabel>kw_defaults</edgelabel>
          <edgelabel>args</edgelabel>
        </childnode>
        <childnode refid="72" relation="usage">
          <edgelabel>vararg</edgelabel>
          <edgelabel>kwarg</edgelabel>
        </childnode>
      </node>
      <node id="67">
        <label>asdl_seq</label>
        <link refid="structasdl__seq"/>
      </node>
      <node id="68">
        <label>_expr</label>
        <link refid="struct__expr"/>
        <childnode refid="69" relation="usage">
          <edgelabel>slice</edgelabel>
        </childnode>
        <childnode refid="70" relation="usage">
          <edgelabel>ops</edgelabel>
        </childnode>
        <childnode refid="71" relation="usage">
          <edgelabel>args</edgelabel>
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>values</edgelabel>
          <edgelabel>keys</edgelabel>
          <edgelabel>elts</edgelabel>
          <edgelabel>comparators</edgelabel>
          <edgelabel>generators</edgelabel>
          <edgelabel>keywords</edgelabel>
          <edgelabel>args</edgelabel>
        </childnode>
        <childnode refid="73" relation="usage">
          <edgelabel>attr</edgelabel>
          <edgelabel>n</edgelabel>
          <edgelabel>value</edgelabel>
          <edgelabel>id</edgelabel>
          <edgelabel>s</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>body</edgelabel>
          <edgelabel>format_spec</edgelabel>
          <edgelabel>test</edgelabel>
          <edgelabel>func</edgelabel>
          <edgelabel>right</edgelabel>
          <edgelabel>elt</edgelabel>
          <edgelabel>left</edgelabel>
          <edgelabel>key</edgelabel>
          <edgelabel>value</edgelabel>
          <edgelabel>orelse</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="81">
        <label>PyNumberMethods</label>
        <link refid="struct_py_number_methods"/>
        <childnode refid="73" relation="usage">
          <edgelabel>nb_inplace_matrix_multiply</edgelabel>
          <edgelabel>nb_subtract</edgelabel>
          <edgelabel>nb_inplace_floor_divide</edgelabel>
          <edgelabel>nb_multiply</edgelabel>
          <edgelabel>nb_inplace_and</edgelabel>
          <edgelabel>nb_inplace_remainder</edgelabel>
          <edgelabel>nb_absolute</edgelabel>
          <edgelabel>nb_floor_divide</edgelabel>
          <edgelabel>nb_inplace_rshift</edgelabel>
          <edgelabel>nb_int</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="82">
        <label>PyAsyncMethods</label>
        <link refid="struct_py_async_methods"/>
        <childnode refid="73" relation="usage">
          <edgelabel>am_await</edgelabel>
          <edgelabel>am_anext</edgelabel>
          <edgelabel>am_aiter</edgelabel>
        </childnode>
      </node>
      <node id="66">
        <label>_comprehension</label>
        <link refid="struct__comprehension"/>
        <childnode refid="67" relation="usage">
          <edgelabel>ifs</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>target</edgelabel>
          <edgelabel>iter</edgelabel>
        </childnode>
      </node>
      <node id="76">
        <label>PyMemberDef</label>
        <link refid="struct_py_member_def"/>
      </node>
    </collaborationgraph>
    <location file="/usr/include/python3.6m/Python-ast.h" line="388" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="388" bodyend="393"/>
    <listofallmembers>
      <member refid="struct__comprehension_1abe4e5448c7e19c25ced95cf7027df493" prot="public" virt="non-virtual"><scope>_comprehension</scope><name>ifs</name></member>
      <member refid="struct__comprehension_1a3691fea498ecf536bec69c0f350119d5" prot="public" virt="non-virtual"><scope>_comprehension</scope><name>is_async</name></member>
      <member refid="struct__comprehension_1ab351ea193dabc5c156b6c571f7f80681" prot="public" virt="non-virtual"><scope>_comprehension</scope><name>iter</name></member>
      <member refid="struct__comprehension_1a810b2152a85f7ba984e54207d59d8124" prot="public" virt="non-virtual"><scope>_comprehension</scope><name>target</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
