<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pyport_8h" kind="file" language="C++">
    <compoundname>pyport.h</compoundname>
    <includes refid="pyconfig_8h" local="yes">pyconfig.h</includes>
    <includes local="no">inttypes.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">time.h</includes>
    <includedby refid="_python_8h" local="yes">/usr/include/python3.6m/Python.h</includedby>
    <includedby refid="pymem_8h" local="yes">/usr/include/python3.6m/pymem.h</includedby>
    <incdepgraph>
      <node id="3555">
        <label>stdlib.h</label>
      </node>
      <node id="3553">
        <label>pyconfig.h</label>
        <link refid="pyconfig_8h_source"/>
      </node>
      <node id="3557">
        <label>time.h</label>
      </node>
      <node id="3556">
        <label>math.h</label>
      </node>
      <node id="3552">
        <label>/usr/include/python3.6m/pyport.h</label>
        <link refid="pyport_8h"/>
        <childnode refid="3553" relation="include">
        </childnode>
        <childnode refid="3554" relation="include">
        </childnode>
        <childnode refid="3555" relation="include">
        </childnode>
        <childnode refid="3556" relation="include">
        </childnode>
        <childnode refid="3557" relation="include">
        </childnode>
      </node>
      <node id="3554">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3561">
        <label>/usr/include/python3.6m/Imaging.h</label>
        <link refid="_imaging_8h_source"/>
      </node>
      <node id="3562">
        <label>/usr/include/python3.6m/pgenheaders.h</label>
        <link refid="pgenheaders_8h_source"/>
      </node>
      <node id="3566">
        <label>/usr/include/python3.6m/pymem.h</label>
        <link refid="pymem_8h_source"/>
        <childnode refid="3559" relation="include">
        </childnode>
        <childnode refid="3567" relation="include">
        </childnode>
      </node>
      <node id="3564">
        <label>venv/lib/python3.6/site-packages/lxml/includes/etree_defs.h</label>
        <link refid="etree__defs_8h_source"/>
      </node>
      <node id="3567">
        <label>/usr/include/python3.6m/objimpl.h</label>
        <link refid="objimpl_8h_source"/>
        <childnode refid="3559" relation="include">
        </childnode>
      </node>
      <node id="3559">
        <label>/usr/include/python3.6m/Python.h</label>
        <link refid="_python_8h_source"/>
        <childnode refid="3560" relation="include">
        </childnode>
        <childnode refid="3562" relation="include">
        </childnode>
        <childnode refid="3563" relation="include">
        </childnode>
        <childnode refid="3564" relation="include">
        </childnode>
        <childnode refid="3565" relation="include">
        </childnode>
      </node>
      <node id="3565">
        <label>venv/lib/python3.6/site-packages/lxml/lxml.etree_api.h</label>
        <link refid="lxml_8etree__api_8h_source"/>
      </node>
      <node id="3560">
        <label>/usr/include/python3.6m/ImPlatform.h</label>
        <link refid="_im_platform_8h_source"/>
        <childnode refid="3561" relation="include">
        </childnode>
      </node>
      <node id="3558">
        <label>/usr/include/python3.6m/pyport.h</label>
        <link refid="pyport_8h"/>
        <childnode refid="3559" relation="include">
        </childnode>
        <childnode refid="3566" relation="include">
        </childnode>
      </node>
      <node id="3563">
        <label>venv/lib/python3.6/site-packages/lxml/etree_api.h</label>
        <link refid="etree__api_8h_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="pyport_8h_1a80741c824c30fcd1d2a8787dfa92338a" prot="public" static="no">
        <name>HAVE_LONG_LONG</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="42" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1ac301b35e00ec57ea2078b930adb85f3f" prot="public" static="no">
        <name>PY_LONG_LONG</name>
        <initializer>long long</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="45" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1aff8dcd8b94b7457167744dee2e57f0ba" prot="public" static="no">
        <name>PY_LLONG_MIN</name>
        <initializer>LLONG_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="47" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a5084029c2d70ecf60c94cae793a6e6a5" prot="public" static="no">
        <name>PY_LLONG_MAX</name>
        <initializer>LLONG_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="48" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1ac3e56b3bbc9371b7e9cbc9586c5028bc" prot="public" static="no">
        <name>PY_ULLONG_MAX</name>
        <initializer>ULLONG_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="49" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a961292fca0164206c060d9b864b1ac46" prot="public" static="no">
        <name>PY_UINT32_T</name>
        <initializer>uint32_t</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="52" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1af3141627a0587e6154db8a3a9c23ef8d" prot="public" static="no">
        <name>PY_UINT64_T</name>
        <initializer>uint64_t</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="53" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a0e10541ae3878d943661a5af2993fcfe" prot="public" static="no">
        <name>PY_INT32_T</name>
        <initializer>int32_t</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="56" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a6696e2bcd9a040de02ad8f40272ba916" prot="public" static="no">
        <name>PY_INT64_T</name>
        <initializer>int64_t</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="57" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1afecb0b4d570060638182bb13f21d3600" prot="public" static="no">
        <name>PYLONG_BITS_IN_DIGIT</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="67" column="10" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a4f6dfbbc9bde8b9cccc5dae8f1e4b3a0" prot="public" static="no">
        <name>SIZEOF_PY_HASH_T</name>
        <initializer>SIZEOF_SIZE_T</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="92" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1ab0cf25ac1324b90136bbbf8a05da065b" prot="public" static="no">
        <name>SIZEOF_PY_UHASH_T</name>
        <initializer>SIZEOF_SIZE_T</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="95" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a7335a3332cb16befaeafeb94a87c8398" prot="public" static="no">
        <name>PY_SIZE_MAX</name>
        <initializer>SIZE_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="106" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1aa5b5990f814eb53730c24c7f911f9132" prot="public" static="no">
        <name>PY_SSIZE_T_MAX</name>
        <initializer>((Py_ssize_t)(((size_t)-1)&gt;&gt;1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="109" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a9fbcf3e88f34de99fb3bd045cffd6ce4" prot="public" static="no">
        <name>PY_SSIZE_T_MIN</name>
        <initializer>(-PY_SSIZE_T_MAX-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="111" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a3477b9ca630aca5fd47d385c41efcbc4" prot="public" static="no">
        <name>PY_FORMAT_SIZE_T</name>
        <initializer>&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="139" column="16" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1ab1bf3bec57dd4b048e288d2b79764b28" prot="public" static="no">
        <name>Py_LOCAL</name>
        <param><defname>type</defname></param>
        <initializer>static type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="180" column="10" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1ab2e65739af63b492afbcf9481c8f47a7" prot="public" static="no">
        <name>Py_LOCAL_INLINE</name>
        <param><defname>type</defname></param>
        <initializer>static type</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="181" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a8d945798be5747fcb0356ca8a3fcdec5" prot="public" static="no">
        <name>Py_MEMCPY</name>
        <initializer>memcpy</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="186" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1ab5bee51e9ee68b83ab11d4b340f7200b" prot="public" static="no">
        <name>S_IFMT</name>
        <initializer>0170000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="234" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1afef163ce62372757e84bd9fc88c07aad" prot="public" static="no">
        <name>S_IFLNK</name>
        <initializer>0120000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="240" column="11" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1adf7cb8168c62564ac52b96367e7be74a" prot="public" static="no">
        <name>S_ISREG</name>
        <param><defname>x</defname></param>
        <initializer>(((x) &amp; S_IFMT) == S_IFREG)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="244" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a8b545e50cb6e6bd55ed72564bf52cacc" prot="public" static="no">
        <name>S_ISDIR</name>
        <param><defname>x</defname></param>
        <initializer>(((x) &amp; S_IFMT) == S_IFDIR)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="248" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a07756f86ed6e9437f20df3cd9a846377" prot="public" static="no">
        <name>S_ISCHR</name>
        <param><defname>x</defname></param>
        <initializer>(((x) &amp; S_IFMT) == S_IFCHR)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="252" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a22d03a6f5f075d51457df950857805d6" prot="public" static="no">
        <name>Py_ARITHMETIC_RIGHT_SHIFT</name>
        <param><defname>TYPE</defname></param>
        <param><defname>I</defname></param>
        <param><defname>J</defname></param>
        <initializer>((I) &gt;&gt; (J))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="284" column="10" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a8a37b26ff98e72bce6e696c2c231cdc0" prot="public" static="no">
        <name>Py_FORCE_EXPANSION</name>
        <param><defname>X</defname></param>
        <initializer>X</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="292" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a29842a230ec971d8ca082f9bff353aaf" prot="public" static="no">
        <name>Py_SAFE_DOWNCAST</name>
        <param><defname>VALUE</defname></param>
        <param><defname>WIDE</defname></param>
        <param><defname>NARROW</defname></param>
        <initializer>(NARROW)(VALUE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="304" column="10" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a18883c917debd189411be9a94964bb8e" prot="public" static="no">
        <name>_Py_SET_EDOM_FOR_NAN</name>
        <param><defname>X</defname></param>
        <initializer>;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="319" column="10" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a367f48cdbf410185facca52decc1c77c" prot="public" static="no">
        <name>Py_SET_ERRNO_ON_MATH_ERROR</name>
        <param><defname>X</defname></param>
        <initializer>do { \
        if (errno == 0) { \
            if ((X) == Py_HUGE_VAL || (X) == -Py_HUGE_VAL) \
                errno = ERANGE; \
            else _Py_SET_EDOM_FOR_NAN(X) \
        } \
    } while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="321" column="10" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1ad7925058c9636b89e34ab65ef16dd509" prot="public" static="no">
        <name>Py_SET_ERANGE_IF_OVERFLOW</name>
        <param><defname>X</defname></param>
        <initializer>Py_SET_ERRNO_ON_MATH_ERROR(X)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="333" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1ae09f6f9a30297e5525b942bd85c4e7cc" prot="public" static="no">
        <name>Py_ADJUST_ERANGE1</name>
        <param><defname>X</defname></param>
        <initializer>do {                                                                \
        if (errno == 0) {                                               \
            if ((X) == Py_HUGE_VAL || (X) == -Py_HUGE_VAL)              \
                errno = ERANGE;                                         \
        }                                                               \
        else if (errno == ERANGE &amp;&amp; (X) == 0.0)                         \
            errno = 0;                                                  \
    } while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="349" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a4959741ae46d73e343a275f205f42003" prot="public" static="no">
        <name>Py_ADJUST_ERANGE2</name>
        <param><defname>X</defname></param>
        <param><defname>Y</defname></param>
        <initializer>do {                                                                \
        if ((X) == Py_HUGE_VAL || (X) == -Py_HUGE_VAL ||                \
            (Y) == Py_HUGE_VAL || (Y) == -Py_HUGE_VAL) {                \
                        if (errno == 0)                                 \
                                errno = ERANGE;                         \
        }                                                               \
        else if (errno == ERANGE)                                       \
            errno = 0;                                                  \
    } while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="359" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a79f60d869927cb4c93b0761bf5bd56ad" prot="public" static="no">
        <name>_Py_SET_53BIT_PRECISION_HEADER</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="456" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a7dd67df021502b49c026aaea98b2e56f" prot="public" static="no">
        <name>_Py_SET_53BIT_PRECISION_START</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="457" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="457" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a3814ad25a6d87dff66222031c6f7132f" prot="public" static="no">
        <name>_Py_SET_53BIT_PRECISION_END</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="458" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a1f8540fa2ac4a99498b78aa84e4194f3" prot="public" static="no">
        <name>PY_NO_SHORT_FLOAT_REPR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="476" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a74ddfb42d9c1ac6b8ebe54d2379c9b6e" prot="public" static="no">
        <name>Py_DEPRECATED</name>
        <param><defname>VERSION_UNUSED</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="498" column="10" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a0cd5e6f93b945a96e499d571b52c2a0d" prot="public" static="no">
        <name>PyAPI_FUNC</name>
        <param><defname>RTYPE</defname></param>
        <initializer>RTYPE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="643" column="16" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="643" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a62b06a3c867e362f5087b05a9b5b94be" prot="public" static="no">
        <name>PyAPI_DATA</name>
        <param><defname>RTYPE</defname></param>
        <initializer>extern RTYPE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="646" column="16" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="646" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a75c7c5d977b65e67c0b0d80fc079004f" prot="public" static="no">
        <name>PyMODINIT_FUNC</name>
        <initializer><ref refid="struct__object" kindref="compound">PyObject</ref>*</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="652" column="24" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a9ec306f36d50c7375e74f0d1c55a3a67" prot="public" static="no">
        <name>INT_MAX</name>
        <initializer>2147483647</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="659" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="659" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1ae8a44c5a7436466221e0f3859d02420f" prot="public" static="no">
        <name>LONG_MIN</name>
        <initializer>(-LONG_MAX-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="673" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="673" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a88c78a5170af546a3417d28875fd3710" prot="public" static="no">
        <name>LONG_BIT</name>
        <initializer>(8 * SIZEOF_LONG)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="677" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="677" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1ad7c2fba9fc56ba57bfdabeddd7966217" prot="public" static="no">
        <name>Py_GCC_ATTRIBUTE</name>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="698" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="698" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a9c28a5344fcb4668206275e2e85a5387" prot="public" static="no">
        <name>Py_ALIGNED</name>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="709" column="10" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="709" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a61f7762cfa9f58086398e311aa00f818" prot="public" static="no">
        <name>Py_LL</name>
        <param><defname>x</defname></param>
        <initializer>x##LL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="720" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="720" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1ad37e43b6691c1ec1bd4a2ead8b3d535e" prot="public" static="no">
        <name>Py_ULL</name>
        <param><defname>x</defname></param>
        <initializer>Py_LL(x##U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="724" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="724" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a4a19ebe76edcdca5dadcdc520bd81ec7" prot="public" static="no">
        <name>Py_VA_COPY</name>
        <initializer>va_copy</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="727" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="727" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a4eb33798101bccacbfa896dd2286e1b6" prot="public" static="no">
        <name>PY_BIG_ENDIAN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="739" column="10" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="739" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pyport_8h_1a817538424df2a3c56659d010a1b7fe07" prot="public" static="no">
        <name>PY_LITTLE_ENDIAN</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="740" column="9" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="740" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pyport_8h_1a31a62a3ebc55b8a485aa01d50f582883" prot="public" static="no">
        <type>uintptr_t</type>
        <definition>typedef uintptr_t Py_uintptr_t</definition>
        <argsstring></argsstring>
        <name>Py_uintptr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="76" column="1" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pyport_8h_1af6ac729c78369112e21f4c3491fcfacb" prot="public" static="no">
        <type>intptr_t</type>
        <definition>typedef intptr_t Py_intptr_t</definition>
        <argsstring></argsstring>
        <name>Py_intptr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="77" column="1" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pyport_8h_1ac6411a3dfda9ac6feb9e8d859b1184bc" prot="public" static="no">
        <type>Py_intptr_t</type>
        <definition>PyObject Py_ssize_t</definition>
        <argsstring></argsstring>
        <name>Py_ssize_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="86" column="1" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pyport_8h_1afc950bbc04ad9bf4a7da53f257d8ddd1" prot="public" static="no">
        <type>Py_ssize_t</type>
        <definition>typedef Py_ssize_t Py_hash_t</definition>
        <argsstring></argsstring>
        <name>Py_hash_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="93" column="1" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pyport_8h_1aef204f50b4277587435cc09626f2292e" prot="public" static="no">
        <type>size_t</type>
        <definition>typedef size_t Py_uhash_t</definition>
        <argsstring></argsstring>
        <name>Py_uhash_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="96" column="1" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pyport_8h_1af67b1559bd6a53935f16b33cb1f20a17" prot="public" static="no">
        <type>int</type>
        <definition>typedef int Py_ssize_clean_t</definition>
        <argsstring></argsstring>
        <name>Py_ssize_clean_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pyport.h" line="102" column="1" bodyfile="/usr/include/python3.6m/pyport.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>Py_PYPORT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_PYPORT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyconfig.h&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>include<sp/>for<sp/>defines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/**************************************************************************</highlight></codeline>
<codeline lineno="9"><highlight class="comment">Symbols<sp/>and<sp/>macros<sp/>to<sp/>supply<sp/>platform-independent<sp/>interfaces<sp/>to<sp/>basic</highlight></codeline>
<codeline lineno="10"><highlight class="comment">C<sp/>language<sp/>&amp;<sp/>library<sp/>operations<sp/>whose<sp/>spellings<sp/>vary<sp/>across<sp/>platforms.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">Please<sp/>try<sp/>to<sp/>make<sp/>documentation<sp/>here<sp/>as<sp/>clear<sp/>as<sp/>possible:<sp/><sp/>by<sp/>definition,</highlight></codeline>
<codeline lineno="13"><highlight class="comment">the<sp/>stuff<sp/>here<sp/>is<sp/>trying<sp/>to<sp/>illuminate<sp/>C&apos;s<sp/>darkest<sp/>corners.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment">Config<sp/>#defines<sp/>referenced<sp/>here:</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">SIGNED_RIGHT_SHIFT_ZERO_FILLS</highlight></codeline>
<codeline lineno="18"><highlight class="comment">Meaning:<sp/><sp/>To<sp/>be<sp/>defined<sp/>iff<sp/>i&gt;&gt;j<sp/>does<sp/>not<sp/>extend<sp/>the<sp/>sign<sp/>bit<sp/>when<sp/>i<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signed<sp/>integral<sp/>type<sp/>and<sp/>i<sp/>&lt;<sp/>0.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">Used<sp/>in:<sp/><sp/>Py_ARITHMETIC_RIGHT_SHIFT</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">Py_DEBUG</highlight></codeline>
<codeline lineno="23"><highlight class="comment">Meaning:<sp/><sp/>Extra<sp/>checks<sp/>compiled<sp/>in<sp/>for<sp/>debug<sp/>mode.</highlight></codeline>
<codeline lineno="24"><highlight class="comment">Used<sp/>in:<sp/><sp/>Py_SAFE_DOWNCAST</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>typedefs<sp/>for<sp/>some<sp/>C9X-defined<sp/>synonyms<sp/>for<sp/>integral<sp/>types.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>The<sp/>names<sp/>in<sp/>Python<sp/>are<sp/>exactly<sp/>the<sp/>same<sp/>as<sp/>the<sp/>C9X<sp/>names,<sp/>except<sp/>with<sp/>a</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>Py_<sp/>prefix.<sp/><sp/>Until<sp/>C9X<sp/>is<sp/>universally<sp/>implemented,<sp/>this<sp/>is<sp/>the<sp/>only<sp/>way</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>to<sp/>ensure<sp/>that<sp/>Python<sp/>gets<sp/>reliable<sp/>names<sp/>that<sp/>don&apos;t<sp/>conflict<sp/>with<sp/>names</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>in<sp/>non-Python<sp/>code<sp/>that<sp/>are<sp/>playing<sp/>their<sp/>own<sp/>tricks<sp/>to<sp/>define<sp/>the<sp/>C9X</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>names.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>don&apos;t<sp/>go<sp/>nuts<sp/>here!<sp/><sp/>Python<sp/>has<sp/>no<sp/>use<sp/>for<sp/>*most*<sp/>of<sp/>the<sp/>C9X</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>integral<sp/>synonyms.<sp/><sp/>Only<sp/>define<sp/>the<sp/>ones<sp/>we<sp/>actually<sp/>need.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>long<sp/>long<sp/>is<sp/>required.<sp/>Ensure<sp/>HAVE_LONG_LONG<sp/>is<sp/>defined<sp/>for<sp/>compatibility.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAVE_LONG_LONG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PY_LONG_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_LONG_LONG<sp/>long<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>LLONG_MAX<sp/>is<sp/>defined<sp/>in<sp/>limits.h,<sp/>use<sp/>that.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_LLONG_MIN<sp/>LLONG_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_LLONG_MAX<sp/>LLONG_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_ULLONG_MAX<sp/>ULLONG_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_UINT32_T<sp/>uint32_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_UINT64_T<sp/>uint64_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Signed<sp/>variants<sp/>of<sp/>the<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_INT32_T<sp/>int32_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_INT64_T<sp/>int64_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>PYLONG_BITS_IN_DIGIT<sp/>is<sp/>not<sp/>defined<sp/>then<sp/>we&apos;ll<sp/>use<sp/>30-bit<sp/>digits<sp/>if<sp/>all</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/>the<sp/>necessary<sp/>integer<sp/>types<sp/>are<sp/>available,<sp/>and<sp/>we&apos;re<sp/>on<sp/>a<sp/>64-bit<sp/>platform</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/>(as<sp/>determined<sp/>by<sp/>SIZEOF_VOID_P);<sp/>otherwise<sp/>we<sp/>use<sp/>15-bit<sp/>digits.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PYLONG_BITS_IN_DIGIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SIZEOF_VOID_P<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PYLONG_BITS_IN_DIGIT<sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PYLONG_BITS_IN_DIGIT<sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>uintptr_t<sp/>is<sp/>the<sp/>C9X<sp/>name<sp/>for<sp/>an<sp/>unsigned<sp/>integral<sp/>type<sp/>such<sp/>that<sp/>a</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>legitimate<sp/>void*<sp/>can<sp/>be<sp/>cast<sp/>to<sp/>uintptr_t<sp/>and<sp/>then<sp/>back<sp/>to<sp/>void*<sp/>again</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>without<sp/>loss<sp/>of<sp/>information.<sp/><sp/>Similarly<sp/>for<sp/>intptr_t,<sp/>wrt<sp/>a<sp/>signed</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>integral<sp/>type.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uintptr_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_uintptr_t;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>intptr_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_intptr_t;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Py_ssize_t<sp/>is<sp/>a<sp/>signed<sp/>integral<sp/>type<sp/>such<sp/>that<sp/>sizeof(Py_ssize_t)<sp/>==</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>sizeof(size_t).<sp/><sp/>C99<sp/>doesn&apos;t<sp/>define<sp/>such<sp/>a<sp/>thing<sp/>directly<sp/>(size_t<sp/>is<sp/>an</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>unsigned<sp/>integral<sp/>type).<sp/><sp/>See<sp/>PEP<sp/>353<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SSIZE_T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ssize_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>SIZEOF_VOID_P<sp/>==<sp/>SIZEOF_SIZE_T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Py_intptr_t<sp/><sp/><sp/><sp/><sp/>Py_ssize_t;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>error<sp/>&quot;Python<sp/>needs<sp/>a<sp/>typedef<sp/>for<sp/>Py_ssize_t<sp/>in<sp/>pyport.h.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Py_hash_t<sp/>is<sp/>the<sp/>same<sp/>size<sp/>as<sp/>a<sp/>pointer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZEOF_PY_HASH_T<sp/>SIZEOF_SIZE_T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>Py_hash_t;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Py_uhash_t<sp/>is<sp/>the<sp/>unsigned<sp/>equivalent<sp/>needed<sp/>to<sp/>calculate<sp/>numeric<sp/>hash.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZEOF_PY_UHASH_T<sp/>SIZEOF_SIZE_T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Py_uhash_t;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Only<sp/>used<sp/>for<sp/>compatibility<sp/>with<sp/>code<sp/>that<sp/>may<sp/>not<sp/>be<sp/>PY_SSIZE_T_CLEAN.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PY_SSIZE_T_CLEAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Py_ssize_t<sp/>Py_ssize_clean_t;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Py_ssize_clean_t;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Largest<sp/>possible<sp/>value<sp/>of<sp/>size_t.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_SIZE_MAX<sp/>SIZE_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Largest<sp/>positive<sp/>value<sp/>of<sp/>type<sp/>Py_ssize_t.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_SSIZE_T_MAX<sp/>((Py_ssize_t)(((size_t)-1)&gt;&gt;1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Smallest<sp/>negative<sp/>value<sp/>of<sp/>type<sp/>Py_ssize_t.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_SSIZE_T_MIN<sp/>(-PY_SSIZE_T_MAX-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PY_FORMAT_SIZE_T<sp/>is<sp/>a<sp/>platform-specific<sp/>modifier<sp/>for<sp/>use<sp/>in<sp/>a<sp/>printf</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>format<sp/>to<sp/>convert<sp/>an<sp/>argument<sp/>with<sp/>the<sp/>width<sp/>of<sp/>a<sp/>size_t<sp/>or<sp/>Py_ssize_t.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>C99<sp/>introduced<sp/>&quot;z&quot;<sp/>for<sp/>this<sp/>purpose,<sp/>but<sp/>not<sp/>all<sp/>platforms<sp/>support<sp/>that;</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>e.g.,<sp/>MS<sp/>compilers<sp/>use<sp/>&quot;I&quot;<sp/>instead.</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>These<sp/>&quot;high<sp/>level&quot;<sp/>Python<sp/>format<sp/>functions<sp/>interpret<sp/>&quot;z&quot;<sp/>correctly<sp/>on</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>all<sp/>platforms<sp/>(Python<sp/>interprets<sp/>the<sp/>format<sp/>string<sp/>itself,<sp/>and<sp/>does<sp/>whatever</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>the<sp/>platform<sp/>C<sp/>requires<sp/>to<sp/>convert<sp/>a<sp/>size_t/Py_ssize_t<sp/>argument):</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>PyBytes_FromFormat</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>PyErr_Format</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>PyBytes_FromFormatV</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>PyUnicode_FromFormatV</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/>Lower-level<sp/>uses<sp/>require<sp/>that<sp/>you<sp/>interpolate<sp/>the<sp/>correct<sp/>format<sp/>modifier</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>yourself<sp/>(e.g.,<sp/>calling<sp/>printf,<sp/>fprintf,<sp/>sprintf,<sp/>PyOS_snprintf);<sp/>for</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/>example,</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>index;</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/>&quot;index<sp/>%&quot;<sp/>PY_FORMAT_SIZE_T<sp/>&quot;d<sp/>sucks\n&quot;,<sp/>index);</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>That<sp/>will<sp/>expand<sp/>to<sp/>%ld,<sp/>or<sp/>%Id,<sp/>or<sp/>to<sp/>something<sp/>else<sp/>correct<sp/>for<sp/>a</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/>Py_ssize_t<sp/>on<sp/>the<sp/>platform.</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PY_FORMAT_SIZE_T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>SIZEOF_SIZE_T<sp/>==<sp/>SIZEOF_INT<sp/>&amp;&amp;<sp/>!defined(__APPLE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>PY_FORMAT_SIZE_T<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>elif<sp/>SIZEOF_SIZE_T<sp/>==<sp/>SIZEOF_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>PY_FORMAT_SIZE_T<sp/>&quot;l&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>elif<sp/>defined(MS_WINDOWS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>PY_FORMAT_SIZE_T<sp/>&quot;I&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>&quot;This<sp/>platform&apos;s<sp/>pyconfig.h<sp/>needs<sp/>to<sp/>define<sp/>PY_FORMAT_SIZE_T&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Py_LOCAL<sp/>can<sp/>be<sp/>used<sp/>instead<sp/>of<sp/>static<sp/>to<sp/>get<sp/>the<sp/>fastest<sp/>possible<sp/>calling</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/>convention<sp/>for<sp/>functions<sp/>that<sp/>are<sp/>local<sp/>to<sp/>a<sp/>given<sp/>module.</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>Py_LOCAL_INLINE<sp/>does<sp/>the<sp/>same<sp/>thing,<sp/>and<sp/>also<sp/>explicitly<sp/>requests<sp/>inlining,</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>for<sp/>platforms<sp/>that<sp/>support<sp/>that.</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>If<sp/>PY_LOCAL_AGGRESSIVE<sp/>is<sp/>defined<sp/>before<sp/>python.h<sp/>is<sp/>included,<sp/>more</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>&quot;aggressive&quot;<sp/>inlining/optimization<sp/>is<sp/>enabled<sp/>for<sp/>the<sp/>entire<sp/>module.<sp/><sp/>This</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/>may<sp/>lead<sp/>to<sp/>code<sp/>bloat,<sp/>and<sp/>may<sp/>slow<sp/>things<sp/>down<sp/>for<sp/>those<sp/>reasons.<sp/><sp/>It<sp/>may</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/>also<sp/>lead<sp/>to<sp/>errors,<sp/>if<sp/>the<sp/>code<sp/>relies<sp/>on<sp/>pointer<sp/>aliasing.<sp/><sp/>Use<sp/>with</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/>care.</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>You<sp/>can<sp/>only<sp/>use<sp/>this<sp/>for<sp/>functions<sp/>that<sp/>are<sp/>entirely<sp/>local<sp/>to<sp/>a</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>module;<sp/>functions<sp/>that<sp/>are<sp/>exported<sp/>via<sp/>method<sp/>tables,<sp/>callbacks,<sp/>etc,</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>should<sp/>keep<sp/>using<sp/>static.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PY_LOCAL_AGGRESSIVE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>enable<sp/>more<sp/>aggressive<sp/>optimization<sp/>for<sp/>visual<sp/>studio<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>optimize(&quot;agtw&quot;,<sp/>on)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ignore<sp/>warnings<sp/>if<sp/>the<sp/>compiler<sp/>decides<sp/>not<sp/>to<sp/>inline<sp/>a<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:<sp/>4710)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fastest<sp/>possible<sp/>local<sp/>call<sp/>under<sp/>MSVC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_LOCAL(type)<sp/>static<sp/>type<sp/>__fastcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_LOCAL_INLINE(type)<sp/>static<sp/>__inline<sp/>type<sp/>__fastcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(USE_INLINE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_LOCAL(type)<sp/>static<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_LOCAL_INLINE(type)<sp/>static<sp/>inline<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_LOCAL(type)<sp/>static<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_LOCAL_INLINE(type)<sp/>static<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Py_MEMCPY<sp/>is<sp/>kept<sp/>for<sp/>backwards<sp/>compatibility,</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>see<sp/>https://bugs.python.org/issue28126<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_MEMCPY<sp/>memcpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_IEEEFP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ieeefp.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>needed<sp/>for<sp/>&apos;finite&apos;<sp/>declaration<sp/>on<sp/>some<sp/>platforms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Moved<sp/>here<sp/>from<sp/>the<sp/>math<sp/>section,<sp/>before<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">/********************************************</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/>WRAPPER<sp/>FOR<sp/>&lt;time.h&gt;<sp/>and/or<sp/>&lt;sys/time.h&gt;<sp/>*</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TIME_WITH_SYS_TIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!TIME_WITH_SYS_TIME<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYS_TIME_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!HAVE_SYS_TIME_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!HAVE_SYS_TIME_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!TIME_WITH_SYS_TIME<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">/******************************</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>WRAPPER<sp/>FOR<sp/>&lt;sys/select.h&gt;<sp/>*</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>******************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NB<sp/>caller<sp/>must<sp/>include<sp/>&lt;sys/types.h&gt;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYS_SELECT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/select.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!HAVE_SYS_SELECT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">/*******************************</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>stat()<sp/>and<sp/>fstat()<sp/>fiddling<sp/>*</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*******************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYS_STAT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(HAVE_STAT_H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>S_IFMT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>VisualAge<sp/>C/C++<sp/>Failed<sp/>to<sp/>Define<sp/>MountType<sp/>Field<sp/>in<sp/>sys/stat.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>S_IFMT<sp/>0170000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>S_IFLNK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Windows<sp/>doesn&apos;t<sp/>define<sp/>S_IFLNK<sp/>but<sp/>posixmodule.c<sp/>maps</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>IO_REPARSE_TAG_SYMLINK<sp/>to<sp/>S_IFLNK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>S_IFLNK<sp/>0120000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>S_ISREG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>S_ISREG(x)<sp/>(((x)<sp/>&amp;<sp/>S_IFMT)<sp/>==<sp/>S_IFREG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>S_ISDIR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>S_ISDIR(x)<sp/>(((x)<sp/>&amp;<sp/>S_IFMT)<sp/>==<sp/>S_IFDIR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>S_ISCHR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>S_ISCHR(x)<sp/>(((x)<sp/>&amp;<sp/>S_IFMT)<sp/>==<sp/>S_IFCHR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Move<sp/>this<sp/>down<sp/>here<sp/>since<sp/>some<sp/>C++<sp/>#include&apos;s<sp/>don&apos;t<sp/>like<sp/>to<sp/>be<sp/>included</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/>inside<sp/>an<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Py_ARITHMETIC_RIGHT_SHIFT</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>C<sp/>doesn&apos;t<sp/>define<sp/>whether<sp/>a<sp/>right-shift<sp/>of<sp/>a<sp/>signed<sp/>integer<sp/>sign-extends</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>or<sp/>zero-fills.<sp/><sp/>Here<sp/>a<sp/>macro<sp/>to<sp/>force<sp/>sign<sp/>extension:</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>Py_ARITHMETIC_RIGHT_SHIFT(TYPE,<sp/>I,<sp/>J)</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>Return<sp/>I<sp/>&gt;&gt;<sp/>J,<sp/>forcing<sp/>sign<sp/>extension.<sp/><sp/>Arithmetically,<sp/>return<sp/>the</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>floor<sp/>of<sp/>I/2**J.</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>Requirements:</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>I<sp/>should<sp/>have<sp/>signed<sp/>integer<sp/>type.<sp/><sp/>In<sp/>the<sp/>terminology<sp/>of<sp/>C99,<sp/>this<sp/>can</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>be<sp/>either<sp/>one<sp/>of<sp/>the<sp/>five<sp/>standard<sp/>signed<sp/>integer<sp/>types<sp/>(signed<sp/>char,</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>short,<sp/>int,<sp/>long,<sp/>long<sp/>long)<sp/>or<sp/>an<sp/>extended<sp/>signed<sp/>integer<sp/>type.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>J<sp/>is<sp/>an<sp/>integer<sp/>&gt;=<sp/>0<sp/>and<sp/>strictly<sp/>less<sp/>than<sp/>the<sp/>number<sp/>of<sp/>bits<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>type<sp/>of<sp/>I<sp/>(because<sp/>C<sp/>doesn&apos;t<sp/>define<sp/>what<sp/>happens<sp/>for<sp/>J<sp/>outside<sp/>that</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>range<sp/>either).</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>TYPE<sp/>used<sp/>to<sp/>specify<sp/>the<sp/>type<sp/>of<sp/>I,<sp/>but<sp/>is<sp/>now<sp/>ignored.<sp/><sp/>It&apos;s<sp/>been<sp/>left</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>in<sp/>for<sp/>backwards<sp/>compatibility<sp/>with<sp/>versions<sp/>&lt;=<sp/>2.6<sp/>or<sp/>3.0.</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*<sp/>Caution:</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>I<sp/>may<sp/>be<sp/>evaluated<sp/>more<sp/>than<sp/>once.</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SIGNED_RIGHT_SHIFT_ZERO_FILLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_ARITHMETIC_RIGHT_SHIFT(TYPE,<sp/>I,<sp/>J)<sp/>\</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((I)<sp/>&lt;<sp/>0<sp/>?<sp/>-1-((-1-(I))<sp/>&gt;&gt;<sp/>(J))<sp/>:<sp/>(I)<sp/>&gt;&gt;<sp/>(J))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_ARITHMETIC_RIGHT_SHIFT(TYPE,<sp/>I,<sp/>J)<sp/>((I)<sp/>&gt;&gt;<sp/>(J))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Py_FORCE_EXPANSION(X)</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*<sp/>&quot;Simply&quot;<sp/>returns<sp/>its<sp/>argument.<sp/><sp/>However,<sp/>macro<sp/>expansions<sp/>within<sp/>the</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*<sp/>argument<sp/>are<sp/>evaluated.<sp/><sp/>This<sp/>unfortunate<sp/>trickery<sp/>is<sp/>needed<sp/>to<sp/>get</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>token-pasting<sp/>to<sp/>work<sp/>as<sp/>desired<sp/>in<sp/>some<sp/>cases.</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_FORCE_EXPANSION(X)<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Py_SAFE_DOWNCAST(VALUE,<sp/>WIDE,<sp/>NARROW)</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>Cast<sp/>VALUE<sp/>to<sp/>type<sp/>NARROW<sp/>from<sp/>type<sp/>WIDE.<sp/><sp/>In<sp/>Py_DEBUG<sp/>mode,<sp/>this</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*<sp/>assert-fails<sp/>if<sp/>any<sp/>information<sp/>is<sp/>lost.</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*<sp/>Caution:</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>VALUE<sp/>may<sp/>be<sp/>evaluated<sp/>more<sp/>than<sp/>once.</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>Py_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_SAFE_DOWNCAST(VALUE,<sp/>WIDE,<sp/>NARROW)<sp/>\</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(assert((WIDE)(NARROW)(VALUE)<sp/>==<sp/>(VALUE)),<sp/>(NARROW)(VALUE))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_SAFE_DOWNCAST(VALUE,<sp/>WIDE,<sp/>NARROW)<sp/>(NARROW)(VALUE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Py_SET_ERRNO_ON_MATH_ERROR(x)</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*<sp/>If<sp/>a<sp/>libm<sp/>function<sp/>did<sp/>not<sp/>set<sp/>errno,<sp/>but<sp/>it<sp/>looks<sp/>like<sp/>the<sp/>result</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*<sp/>overflowed<sp/>or<sp/>not-a-number,<sp/>set<sp/>errno<sp/>to<sp/>ERANGE<sp/>or<sp/>EDOM.<sp/><sp/>Set<sp/>errno</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*<sp/>to<sp/>0<sp/>before<sp/>calling<sp/>a<sp/>libm<sp/>function,<sp/>and<sp/>invoke<sp/>this<sp/>macro<sp/>after,</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*<sp/>passing<sp/>the<sp/>function<sp/>result.</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/>Caution:</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>This<sp/>isn&apos;t<sp/>reliable.<sp/><sp/>See<sp/>Py_OVERFLOWED<sp/>comments.</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>X<sp/>is<sp/>evaluated<sp/>more<sp/>than<sp/>once.</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__FreeBSD__)<sp/>||<sp/>defined(__OpenBSD__)<sp/>||<sp/>(defined(__hpux)<sp/>&amp;&amp;<sp/>defined(__ia64))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Py_SET_EDOM_FOR_NAN(X)<sp/>if<sp/>(isnan(X))<sp/>errno<sp/>=<sp/>EDOM;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Py_SET_EDOM_FOR_NAN(X)<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_SET_ERRNO_ON_MATH_ERROR(X)<sp/>\</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(errno<sp/>==<sp/>0)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((X)<sp/>==<sp/>Py_HUGE_VAL<sp/>||<sp/>(X)<sp/>==<sp/>-Py_HUGE_VAL)<sp/>\</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ERANGE;<sp/>\</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>_Py_SET_EDOM_FOR_NAN(X)<sp/>\</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Py_SET_ERANGE_ON_OVERFLOW(x)</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>An<sp/>alias<sp/>of<sp/>Py_SET_ERRNO_ON_MATH_ERROR<sp/>for<sp/>backward-compatibility.</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_SET_ERANGE_IF_OVERFLOW(X)<sp/>Py_SET_ERRNO_ON_MATH_ERROR(X)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Py_ADJUST_ERANGE1(x)</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*<sp/>Py_ADJUST_ERANGE2(x,<sp/>y)</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*<sp/>Set<sp/>errno<sp/>to<sp/>0<sp/>before<sp/>calling<sp/>a<sp/>libm<sp/>function,<sp/>and<sp/>invoke<sp/>one<sp/>of<sp/>these</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/>macros<sp/>after,<sp/>passing<sp/>the<sp/>function<sp/>result(s)<sp/>(Py_ADJUST_ERANGE2<sp/>is<sp/>useful</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*<sp/>for<sp/>functions<sp/>returning<sp/>complex<sp/>results).<sp/><sp/>This<sp/>makes<sp/>two<sp/>kinds<sp/>of</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/>adjustments<sp/>to<sp/>errno:<sp/><sp/>(A)<sp/>If<sp/>it<sp/>looks<sp/>like<sp/>the<sp/>platform<sp/>libm<sp/>set</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*<sp/>errno=ERANGE<sp/>due<sp/>to<sp/>underflow,<sp/>clear<sp/>errno.<sp/>(B)<sp/>If<sp/>it<sp/>looks<sp/>like<sp/>the</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/>platform<sp/>libm<sp/>overflowed<sp/>but<sp/>didn&apos;t<sp/>set<sp/>errno,<sp/>force<sp/>errno<sp/>to<sp/>ERANGE.<sp/><sp/>In</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*<sp/>effect,<sp/>we&apos;re<sp/>trying<sp/>to<sp/>force<sp/>a<sp/>useful<sp/>implementation<sp/>of<sp/>C89<sp/>errno</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*<sp/>behavior.</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*<sp/>Caution:</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>This<sp/>isn&apos;t<sp/>reliable.<sp/><sp/>See<sp/>Py_OVERFLOWED<sp/>comments.</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>X<sp/>and<sp/>Y<sp/>may<sp/>be<sp/>evaluated<sp/>more<sp/>than<sp/>once.</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_ADJUST_ERANGE1(X)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="351"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(errno<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="352"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((X)<sp/>==<sp/>Py_HUGE_VAL<sp/>||<sp/>(X)<sp/>==<sp/>-Py_HUGE_VAL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="353"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ERANGE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="354"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="355"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(errno<sp/>==<sp/>ERANGE<sp/>&amp;&amp;<sp/>(X)<sp/>==<sp/>0.0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="356"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="357"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_ADJUST_ERANGE2(X,<sp/>Y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="360"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="361"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((X)<sp/>==<sp/>Py_HUGE_VAL<sp/>||<sp/>(X)<sp/>==<sp/>-Py_HUGE_VAL<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="362"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Y)<sp/>==<sp/>Py_HUGE_VAL<sp/>||<sp/>(Y)<sp/>==<sp/>-Py_HUGE_VAL)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="363"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(errno<sp/>==<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="364"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ERANGE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="365"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(errno<sp/>==<sp/>ERANGE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="368"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>The<sp/>functions<sp/>_Py_dg_strtod<sp/>and<sp/>_Py_dg_dtoa<sp/>in<sp/>Python/dtoa.c<sp/>(which<sp/>are</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*<sp/><sp/>required<sp/>to<sp/>support<sp/>the<sp/>short<sp/>float<sp/>repr<sp/>introduced<sp/>in<sp/>Python<sp/>3.1)<sp/>require</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*<sp/><sp/>that<sp/>the<sp/>floating-point<sp/>unit<sp/>that&apos;s<sp/>being<sp/>used<sp/>for<sp/>arithmetic<sp/>operations</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*<sp/><sp/>on<sp/>C<sp/>doubles<sp/>is<sp/>set<sp/>to<sp/>use<sp/>53-bit<sp/>precision.<sp/><sp/>It<sp/>also<sp/>requires<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*<sp/><sp/>FPU<sp/>rounding<sp/>mode<sp/>is<sp/>round-half-to-even,<sp/>but<sp/>that&apos;s<sp/>less<sp/>often<sp/>an<sp/>issue.</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>your<sp/>FPU<sp/>isn&apos;t<sp/>already<sp/>set<sp/>to<sp/>53-bit<sp/>precision/round-half-to-even,<sp/>and</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*<sp/><sp/>you<sp/>want<sp/>to<sp/>make<sp/>use<sp/>of<sp/>_Py_dg_strtod<sp/>and<sp/>_Py_dg_dtoa,<sp/>then<sp/>you<sp/>should</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>#define<sp/>HAVE_PY_SET_53BIT_PRECISION<sp/>1</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>also<sp/>give<sp/>appropriate<sp/>definitions<sp/>for<sp/>the<sp/>following<sp/>three<sp/>macros:</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>_PY_SET_53BIT_PRECISION_START<sp/>:<sp/>store<sp/>original<sp/>FPU<sp/>settings,<sp/>and</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>FPU<sp/>to<sp/>53-bit<sp/>precision/round-half-to-even</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>_PY_SET_53BIT_PRECISION_END<sp/>:<sp/>restore<sp/>original<sp/>FPU<sp/>settings</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>_PY_SET_53BIT_PRECISION_HEADER<sp/>:<sp/>any<sp/>variable<sp/>declarations<sp/>needed<sp/>to</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use<sp/>the<sp/>two<sp/>macros<sp/>above.</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*<sp/>The<sp/>macros<sp/>are<sp/>designed<sp/>to<sp/>be<sp/>used<sp/>within<sp/>a<sp/>single<sp/>C<sp/>function:<sp/>see</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*<sp/>Python/pystrtod.c<sp/>for<sp/>an<sp/>example<sp/>of<sp/>their<sp/>use.</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>get<sp/>and<sp/>set<sp/>x87<sp/>control<sp/>word<sp/>for<sp/>gcc/x86<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_GCC_ASM_FOR_X87</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAVE_PY_SET_53BIT_PRECISION<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>_Py_get/set_387controlword<sp/>functions<sp/>are<sp/>defined<sp/>in<sp/>Python/pymath.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Py_SET_53BIT_PRECISION_HEADER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="398"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>unsigned<sp/>short<sp/>old_387controlword,<sp/>new_387controlword</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Py_SET_53BIT_PRECISION_START<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="400"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="401"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_387controlword<sp/>=<sp/>_Py_get_387controlword();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="402"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_387controlword<sp/>=<sp/>(old_387controlword<sp/>&amp;<sp/>~0x0f00)<sp/>|<sp/>0x0200;<sp/>\</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(new_387controlword<sp/>!=<sp/>old_387controlword)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="404"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Py_set_387controlword(new_387controlword);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="405"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Py_SET_53BIT_PRECISION_END<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="407"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(new_387controlword<sp/>!=<sp/>old_387controlword)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="408"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Py_set_387controlword(old_387controlword)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>get<sp/>and<sp/>set<sp/>x87<sp/>control<sp/>word<sp/>for<sp/>VisualStudio/x86<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>!defined(_WIN64)<sp/></highlight><highlight class="comment">/*<sp/>x87<sp/>not<sp/>supported<sp/>in<sp/>64-bit<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAVE_PY_SET_53BIT_PRECISION<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Py_SET_53BIT_PRECISION_HEADER<sp/>\</highlight></codeline>
<codeline lineno="415"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>unsigned<sp/>int<sp/>old_387controlword,<sp/>new_387controlword,<sp/>out_387controlword</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>use<sp/>the<sp/>__control87_2<sp/>function<sp/>to<sp/>set<sp/>only<sp/>the<sp/>x87<sp/>control<sp/>word.</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/><sp/><sp/>The<sp/>SSE<sp/>control<sp/>word<sp/>is<sp/>unaffected.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Py_SET_53BIT_PRECISION_START<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="419"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__control87_2(0,<sp/>0,<sp/>&amp;old_387controlword,<sp/>NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="421"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_387controlword<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(old_387controlword<sp/>&amp;<sp/>~(_MCW_PC<sp/>|<sp/>_MCW_RC))<sp/>|<sp/>(_PC_53<sp/>|<sp/>_RC_NEAR);<sp/>\</highlight></codeline>
<codeline lineno="423"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(new_387controlword<sp/>!=<sp/>old_387controlword)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="424"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__control87_2(new_387controlword,<sp/>_MCW_PC<sp/>|<sp/>_MCW_RC,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;out_387controlword,<sp/>NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="426"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Py_SET_53BIT_PRECISION_END<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="428"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="429"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(new_387controlword<sp/>!=<sp/>old_387controlword)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="430"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__control87_2(old_387controlword,<sp/>_MCW_PC<sp/>|<sp/>_MCW_RC,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="431"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;out_387controlword,<sp/>NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="432"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_GCC_ASM_FOR_MC68881</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAVE_PY_SET_53BIT_PRECISION<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Py_SET_53BIT_PRECISION_HEADER<sp/>\</highlight></codeline>
<codeline lineno="438"><highlight class="preprocessor"><sp/><sp/>unsigned<sp/>int<sp/>old_fpcr,<sp/>new_fpcr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Py_SET_53BIT_PRECISION_START<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="440"><highlight class="preprocessor"><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="441"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>__asm__<sp/>(&quot;fmove.l<sp/>%%fpcr,%0&quot;<sp/>:<sp/>&quot;=g&quot;<sp/>(old_fpcr));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="442"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>double<sp/>precision<sp/>/<sp/>round<sp/>to<sp/>nearest.<sp/><sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="443"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>new_fpcr<sp/>=<sp/>(old_fpcr<sp/>&amp;<sp/>~0xf0)<sp/>|<sp/>0x80;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="444"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(new_fpcr<sp/>!=<sp/>old_fpcr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="445"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>volatile<sp/>(&quot;fmove.l<sp/>%0,%%fpcr&quot;<sp/>:<sp/>:<sp/>&quot;g&quot;<sp/>(new_fpcr));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="446"><highlight class="preprocessor"><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Py_SET_53BIT_PRECISION_END<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="448"><highlight class="preprocessor"><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="449"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(new_fpcr<sp/>!=<sp/>old_fpcr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="450"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>volatile<sp/>(&quot;fmove.l<sp/>%0,%%fpcr&quot;<sp/>:<sp/>:<sp/>&quot;g&quot;<sp/>(old_fpcr));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="451"><highlight class="preprocessor"><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>default<sp/>definitions<sp/>are<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_PY_SET_53BIT_PRECISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Py_SET_53BIT_PRECISION_HEADER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Py_SET_53BIT_PRECISION_START</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Py_SET_53BIT_PRECISION_END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>can&apos;t<sp/>guarantee<sp/>53-bit<sp/>precision,<sp/>don&apos;t<sp/>use<sp/>the<sp/>code</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/><sp/><sp/>in<sp/>Python/dtoa.c,<sp/>but<sp/>fall<sp/>back<sp/>to<sp/>standard<sp/>code.<sp/><sp/>This</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/><sp/><sp/>means<sp/>that<sp/>repr<sp/>of<sp/>a<sp/>float<sp/>will<sp/>be<sp/>long<sp/>(17<sp/>sig<sp/>digits).</highlight></codeline>
<codeline lineno="464"><highlight class="comment"></highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/>Realistically,<sp/>there<sp/>are<sp/>two<sp/>things<sp/>that<sp/>could<sp/>go<sp/>wrong:</highlight></codeline>
<codeline lineno="466"><highlight class="comment"></highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/>(1)<sp/>doubles<sp/>aren&apos;t<sp/>IEEE<sp/>754<sp/>doubles,<sp/>or</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/>(2)<sp/>we&apos;re<sp/>on<sp/>x86<sp/>with<sp/>the<sp/>rounding<sp/>precision<sp/>set<sp/>to<sp/>64-bits</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(extended<sp/>precision),<sp/>and<sp/>we<sp/>don&apos;t<sp/>know<sp/>how<sp/>to<sp/>change</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>rounding<sp/>precision.</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(DOUBLE_IS_LITTLE_ENDIAN_IEEE754)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="474"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>!defined(DOUBLE_IS_BIG_ENDIAN_IEEE754)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="475"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>!defined(DOUBLE_IS_ARM_MIXED_ENDIAN_IEEE754)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_NO_SHORT_FLOAT_REPR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>double<sp/>rounding<sp/>is<sp/>symptomatic<sp/>of<sp/>use<sp/>of<sp/>extended<sp/>precision<sp/>on<sp/>x86.<sp/><sp/>If</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/><sp/><sp/>we&apos;re<sp/>seeing<sp/>double<sp/>rounding,<sp/>and<sp/>we<sp/>don&apos;t<sp/>have<sp/>any<sp/>mechanism<sp/>available<sp/>for</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/><sp/>changing<sp/>the<sp/>FPU<sp/>rounding<sp/>precision,<sp/>then<sp/>don&apos;t<sp/>use<sp/>Python/dtoa.c.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(X87_DOUBLE_ROUNDING)<sp/>&amp;&amp;<sp/>!defined(HAVE_PY_SET_53BIT_PRECISION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_NO_SHORT_FLOAT_REPR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Py_DEPRECATED(version)</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>*<sp/>Declare<sp/>a<sp/>variable,<sp/>type,<sp/>or<sp/>function<sp/>deprecated.</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/>*<sp/>Usage:</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>extern<sp/>int<sp/>old_var<sp/>Py_DEPRECATED(2.3);</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>typedef<sp/>int<sp/>T1<sp/>Py_DEPRECATED(2.4);</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>extern<sp/>int<sp/>x()<sp/>Py_DEPRECATED(2.5);</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>((__GNUC__<sp/>&gt;=<sp/>4)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="495"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(__GNUC__<sp/>==<sp/>3)<sp/>&amp;&amp;<sp/>(__GNUC_MINOR__<sp/>&gt;=<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_DEPRECATED(VERSION_UNUSED)<sp/>__attribute__((__deprecated__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_DEPRECATED(VERSION_UNUSED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="comment">/**************************************************************************</highlight></codeline>
<codeline lineno="502"><highlight class="comment">Prototypes<sp/>that<sp/>are<sp/>missing<sp/>from<sp/>the<sp/>standard<sp/>include<sp/>files<sp/>on<sp/>some<sp/>systems</highlight></codeline>
<codeline lineno="503"><highlight class="comment">(and<sp/>possibly<sp/>only<sp/>some<sp/>versions<sp/>of<sp/>such<sp/>systems.)</highlight></codeline>
<codeline lineno="504"><highlight class="comment"></highlight></codeline>
<codeline lineno="505"><highlight class="comment">Please<sp/>be<sp/>conservative<sp/>with<sp/>adding<sp/>new<sp/>ones,<sp/>document<sp/>them<sp/>and<sp/>enclose<sp/>them</highlight></codeline>
<codeline lineno="506"><highlight class="comment">in<sp/>platform-specific<sp/>#ifdefs.</highlight></codeline>
<codeline lineno="507"><highlight class="comment">**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SOLARIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Unchecked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gethostname(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE__GETPTY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>need<sp/>to<sp/>import<sp/>mode_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>_getpty(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>mode_t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>On<sp/>QNX<sp/>6,<sp/>struct<sp/>termio<sp/>must<sp/>be<sp/>declared<sp/>by<sp/>including<sp/>sys/termio.h</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/><sp/><sp/>if<sp/>TCGETA,<sp/>TCSETA,<sp/>TCSETAW,<sp/>or<sp/>TCSETAF<sp/>are<sp/>used.<sp/><sp/>sys/termio.h<sp/>must</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/><sp/><sp/>be<sp/>included<sp/>before<sp/>termios.h<sp/>or<sp/>it<sp/>will<sp/>generate<sp/>an<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_SYS_TERMIO_H)<sp/>&amp;&amp;<sp/>!defined(__hpux)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/termio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_OPENPTY)<sp/>||<sp/>defined(HAVE_FORKPTY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(HAVE_PTY_H)<sp/>&amp;&amp;<sp/>!defined(HAVE_LIBUTIL_H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BSDI<sp/>does<sp/>not<sp/>supply<sp/>a<sp/>prototype<sp/>for<sp/>the<sp/>&apos;openpty&apos;<sp/>and<sp/>&apos;forkpty&apos;</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/><sp/><sp/>functions,<sp/>even<sp/>though<sp/>they<sp/>are<sp/>included<sp/>in<sp/>libutil.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;termios.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>openpty(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>termios<sp/>*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>winsize<sp/>*);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>pid_t<sp/>forkpty(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>termios<sp/>*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>winsize<sp/>*);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!defined(HAVE_PTY_H)<sp/>&amp;&amp;<sp/>!defined(HAVE_LIBUTIL_H)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined(HAVE_OPENPTY)<sp/>||<sp/>defined(HAVE_FORKPTY)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>On<sp/>4.4BSD-descendants,<sp/>ctype<sp/>functions<sp/>serves<sp/>the<sp/>whole<sp/>range<sp/>of</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/>*<sp/>wchar_t<sp/>character<sp/>set<sp/>rather<sp/>than<sp/>single<sp/>byte<sp/>code<sp/>points<sp/>only.</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/>*<sp/>This<sp/>characteristic<sp/>can<sp/>break<sp/>some<sp/>operations<sp/>of<sp/>string<sp/>object</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/>*<sp/>including<sp/>str.upper()<sp/>and<sp/>str.split()<sp/>on<sp/>UTF-8<sp/>locales.<sp/><sp/>This</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/>*<sp/>workaround<sp/>was<sp/>provided<sp/>by<sp/>Tim<sp/>Robbins<sp/>of<sp/>FreeBSD<sp/>project.</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__FreeBSD__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;osreldate.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(__FreeBSD_version<sp/>&gt;=<sp/>500040<sp/>&amp;&amp;<sp/>__FreeBSD_version<sp/>&lt;<sp/>602113)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="547"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(__FreeBSD_version<sp/>&gt;=<sp/>700000<sp/>&amp;&amp;<sp/>__FreeBSD_version<sp/>&lt;<sp/>700054)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="548"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(__FreeBSD_version<sp/>&gt;=<sp/>800000<sp/>&amp;&amp;<sp/>__FreeBSD_version<sp/>&lt;<sp/>800001)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>_PY_PORT_CTYPE_UTF8_ISSUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__APPLE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>_PY_PORT_CTYPE_UTF8_ISSUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_PY_PORT_CTYPE_UTF8_ISSUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>workaround<sp/>below<sp/>is<sp/>unsafe<sp/>in<sp/>C++<sp/>because</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>the<sp/>&lt;locale&gt;<sp/>defines<sp/>these<sp/>symbols<sp/>as<sp/>real<sp/>functions,</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>with<sp/>a<sp/>slightly<sp/>different<sp/>signature.</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>See<sp/>issue<sp/>#10910</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>isalnum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>isalnum(c)<sp/>iswalnum(btowc(c))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>isalpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>isalpha(c)<sp/>iswalpha(btowc(c))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>islower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>islower(c)<sp/>iswlower(btowc(c))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>isspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>isspace(c)<sp/>iswspace(btowc(c))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>isupper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>isupper(c)<sp/>iswupper(btowc(c))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>tolower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>tolower(c)<sp/>towlower(btowc(c))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>toupper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>toupper(c)<sp/>towupper(btowc(c))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Declarations<sp/>for<sp/>symbol<sp/>visibility.</highlight></codeline>
<codeline lineno="586"><highlight class="comment"></highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/><sp/>PyAPI_FUNC(type):<sp/>Declares<sp/>a<sp/>public<sp/>Python<sp/>API<sp/>function<sp/>and<sp/>return<sp/>type</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/><sp/>PyAPI_DATA(type):<sp/>Declares<sp/>public<sp/>Python<sp/>data<sp/>and<sp/>its<sp/>type</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/><sp/>PyMODINIT_FUNC:<sp/><sp/><sp/>A<sp/>Python<sp/>module<sp/>init<sp/>function.<sp/><sp/>If<sp/>these<sp/>functions<sp/>are</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inside<sp/>the<sp/>Python<sp/>core,<sp/>they<sp/>are<sp/>private<sp/>to<sp/>the<sp/>core.</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>in<sp/>an<sp/>extension<sp/>module,<sp/>it<sp/>may<sp/>be<sp/>declared<sp/>with</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>external<sp/>linkage<sp/>depending<sp/>on<sp/>the<sp/>platform.</highlight></codeline>
<codeline lineno="593"><highlight class="comment"></highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/><sp/>As<sp/>a<sp/>number<sp/>of<sp/>platforms<sp/>support/require<sp/>&quot;__declspec(dllimport/dllexport)&quot;,</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/><sp/>we<sp/>support<sp/>a<sp/>HAVE_DECLSPEC_DLL<sp/>macro<sp/>to<sp/>save<sp/>duplication.</highlight></codeline>
<codeline lineno="596"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/>All<sp/>windows<sp/>ports,<sp/>except<sp/>cygwin,<sp/>are<sp/>handled<sp/>in<sp/>PC/pyconfig.h.</highlight></codeline>
<codeline lineno="600"><highlight class="comment"></highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/><sp/>Cygwin<sp/>is<sp/>the<sp/>only<sp/>other<sp/>autoconf<sp/>platform<sp/>requiring<sp/>special</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/><sp/>linkage<sp/>handling<sp/>and<sp/>it<sp/>uses<sp/>__declspec().</highlight></codeline>
<codeline lineno="603"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__CYGWIN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>HAVE_DECLSPEC_DLL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>only<sp/>get<sp/>special<sp/>linkage<sp/>if<sp/>built<sp/>as<sp/>shared<sp/>or<sp/>platform<sp/>is<sp/>Cygwin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(Py_ENABLE_SHARED)<sp/>||<sp/>defined(__CYGWIN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>defined(HAVE_DECLSPEC_DLL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifdef<sp/>Py_BUILD_CORE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>PyAPI_FUNC(RTYPE)<sp/>__declspec(dllexport)<sp/>RTYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>PyAPI_DATA(RTYPE)<sp/>extern<sp/>__declspec(dllexport)<sp/>RTYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>module<sp/>init<sp/>functions<sp/>inside<sp/>the<sp/>core<sp/>need<sp/>no<sp/>external<sp/>linkage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>except<sp/>for<sp/>Cygwin<sp/>to<sp/>handle<sp/>embedding<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>defined(__CYGWIN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>PyMODINIT_FUNC<sp/>__declspec(dllexport)<sp/>PyObject*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/></highlight><highlight class="comment">/*<sp/>__CYGWIN__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>PyMODINIT_FUNC<sp/>PyObject*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif<sp/></highlight><highlight class="comment">/*<sp/>__CYGWIN__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/></highlight><highlight class="comment">/*<sp/>Py_BUILD_CORE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Building<sp/>an<sp/>extension<sp/>module,<sp/>or<sp/>an<sp/>embedded<sp/>situation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>public<sp/>Python<sp/>functions<sp/>and<sp/>data<sp/>are<sp/>imported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Under<sp/>Cygwin,<sp/>auto-import<sp/>functions<sp/>to<sp/>prevent<sp/>compilation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>failures<sp/>similar<sp/>to<sp/>those<sp/>described<sp/>at<sp/>the<sp/>bottom<sp/>of<sp/>4.1:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>http://docs.python.org/extending/windows.html#a-cookbook-approach<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>!defined(__CYGWIN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>PyAPI_FUNC(RTYPE)<sp/>__declspec(dllimport)<sp/>RTYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif<sp/></highlight><highlight class="comment">/*<sp/>!__CYGWIN__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>PyAPI_DATA(RTYPE)<sp/>extern<sp/>__declspec(dllimport)<sp/>RTYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>module<sp/>init<sp/>functions<sp/>outside<sp/>the<sp/>core<sp/>must<sp/>be<sp/>exported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>PyMODINIT_FUNC<sp/>extern<sp/>&quot;C&quot;<sp/>__declspec(dllexport)<sp/>PyObject*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>PyMODINIT_FUNC<sp/>__declspec(dllexport)<sp/>PyObject*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif<sp/></highlight><highlight class="comment">/*<sp/>Py_BUILD_CORE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif<sp/></highlight><highlight class="comment">/*<sp/>HAVE_DECLSPEC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>Py_ENABLE_SHARED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>no<sp/>external<sp/>linkage<sp/>macros<sp/>defined<sp/>by<sp/>now,<sp/>create<sp/>defaults<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PyAPI_FUNC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>PyAPI_FUNC(RTYPE)<sp/>RTYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PyAPI_DATA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>PyAPI_DATA(RTYPE)<sp/>extern<sp/>RTYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PyMODINIT_FUNC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>PyMODINIT_FUNC<sp/>extern<sp/>&quot;C&quot;<sp/>PyObject*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>PyMODINIT_FUNC<sp/>PyObject*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>limits.h<sp/>constants<sp/>that<sp/>may<sp/>be<sp/>missing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INT_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_MAX<sp/>2147483647</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LONG_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SIZEOF_LONG<sp/>==<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LONG_MAX<sp/>0X7FFFFFFFL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>SIZEOF_LONG<sp/>==<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LONG_MAX<sp/>0X7FFFFFFFFFFFFFFFL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;could<sp/>not<sp/>set<sp/>LONG_MAX<sp/>in<sp/>pyport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LONG_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LONG_MIN<sp/>(-LONG_MAX-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LONG_BIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LONG_BIT<sp/>(8<sp/>*<sp/>SIZEOF_LONG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LONG_BIT<sp/>!=<sp/>8<sp/>*<sp/>SIZEOF_LONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>04-Oct-2000<sp/>LONG_BIT<sp/>is<sp/>apparently<sp/>(mis)defined<sp/>as<sp/>64<sp/>on<sp/>some<sp/>recent</highlight></codeline>
<codeline lineno="682"><highlight class="comment"><sp/>*<sp/>32-bit<sp/>platforms<sp/>using<sp/>gcc.<sp/><sp/>We<sp/>try<sp/>to<sp/>catch<sp/>that<sp/>here<sp/>at<sp/>compile-time</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/>*<sp/>rather<sp/>than<sp/>waiting<sp/>for<sp/>integer<sp/>multiplication<sp/>to<sp/>trigger<sp/>bogus</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/>*<sp/>overflows.</highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;LONG_BIT<sp/>definition<sp/>appears<sp/>wrong<sp/>for<sp/>platform<sp/>(bad<sp/>gcc/glibc<sp/>config?).&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="694"><highlight class="comment"><sp/>*<sp/>Hide<sp/>GCC<sp/>attributes<sp/>from<sp/>compilers<sp/>that<sp/>don&apos;t<sp/>support<sp/>them.</highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(!defined(__GNUC__)<sp/>||<sp/>__GNUC__<sp/>&lt;<sp/>2<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="697"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(__GNUC__<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>__GNUC_MINOR__<sp/>&lt;<sp/>7)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_GCC_ATTRIBUTE(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_GCC_ATTRIBUTE(x)<sp/>__attribute__(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/>*<sp/>Specify<sp/>alignment<sp/>on<sp/>compilers<sp/>that<sp/>support<sp/>it.</highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>__GNUC__<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_ALIGNED(x)<sp/>__attribute__((aligned(x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_ALIGNED(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Eliminate<sp/>end-of-loop<sp/>code<sp/>not<sp/>reached<sp/>warnings<sp/>from<sp/>SunPro<sp/>C</highlight></codeline>
<codeline lineno="713"><highlight class="comment"><sp/>*<sp/>when<sp/>using<sp/>do{...}while(0)<sp/>macros</highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__SUNPRO_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>error_messages<sp/>(off,E_END_OF_LOOP_CODE_NOT_REACHED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_LL(x)<sp/>x##LL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_ULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_ULL(x)<sp/>Py_LL(x##U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_VA_COPY<sp/>va_copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/>*<sp/>Convenient<sp/>macros<sp/>to<sp/>deal<sp/>with<sp/>endianness<sp/>of<sp/>the<sp/>platform.<sp/>WORDS_BIGENDIAN<sp/>is</highlight></codeline>
<codeline lineno="731"><highlight class="comment"><sp/>*<sp/>detected<sp/>by<sp/>configure<sp/>and<sp/>defined<sp/>in<sp/>pyconfig.h.<sp/>The<sp/>code<sp/>in<sp/>pyconfig.h</highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/>*<sp/>also<sp/>takes<sp/>care<sp/>of<sp/>Apple&apos;s<sp/>universal<sp/>builds.</highlight></codeline>
<codeline lineno="733"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WORDS_BIGENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_BIG_ENDIAN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_LITTLE_ENDIAN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_BIG_ENDIAN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_LITTLE_ENDIAN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>Py_BUILD_CORE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="745"><highlight class="comment"><sp/>*<sp/>Macros<sp/>to<sp/>protect<sp/>CRT<sp/>calls<sp/>against<sp/>instant<sp/>termination<sp/>when<sp/>passed<sp/>an</highlight></codeline>
<codeline lineno="746"><highlight class="comment"><sp/>*<sp/>invalid<sp/>parameter<sp/>(issue23524).</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_MSC_VER<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&gt;=<sp/>1900</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>_invalid_parameter_handler<sp/>_Py_silent_invalid_parameter_handler;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Py_BEGIN_SUPPRESS_IPH<sp/>{<sp/>_invalid_parameter_handler<sp/>_Py_old_handler<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="752"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_set_thread_local_invalid_parameter_handler(_Py_silent_invalid_parameter_handler);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Py_END_SUPPRESS_IPH<sp/>_set_thread_local_invalid_parameter_handler(_Py_old_handler);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Py_BEGIN_SUPPRESS_IPH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Py_END_SUPPRESS_IPH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_MSC_VER<sp/>&gt;=<sp/>1900<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>Py_BUILD_CORE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__ANDROID__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;android/api-level.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>Py_PYPORT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/usr/include/python3.6m/pyport.h"/>
  </compounddef>
</doxygen>
