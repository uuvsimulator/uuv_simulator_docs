<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_python-ast_8h" kind="file" language="C++">
    <compoundname>Python-ast.h</compoundname>
    <includes refid="asdl_8h" local="yes">asdl.h</includes>
    <incdepgraph>
      <node id="3599">
        <label>asdl.h</label>
        <link refid="asdl_8h_source"/>
      </node>
      <node id="3598">
        <label>/usr/include/python3.6m/Python-ast.h</label>
        <link refid="_python-ast_8h"/>
        <childnode refid="3599" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct__mod" prot="public">_mod</innerclass>
    <innerclass refid="struct__stmt" prot="public">_stmt</innerclass>
    <innerclass refid="struct__expr" prot="public">_expr</innerclass>
    <innerclass refid="struct__slice" prot="public">_slice</innerclass>
    <innerclass refid="struct__comprehension" prot="public">_comprehension</innerclass>
    <innerclass refid="struct__excepthandler" prot="public">_excepthandler</innerclass>
    <innerclass refid="struct__arguments" prot="public">_arguments</innerclass>
    <innerclass refid="struct__arg" prot="public">_arg</innerclass>
    <innerclass refid="struct__keyword" prot="public">_keyword</innerclass>
    <innerclass refid="struct__alias" prot="public">_alias</innerclass>
    <innerclass refid="struct__withitem" prot="public">_withitem</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_python-ast_8h_1a050cb8da9f4ab67bed9b2fa2ae362a41" prot="public" static="no">
        <name>Module</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <initializer>_Py_Module(a0, a1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="442" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a548fae4933b00e338520d721a85e4160" prot="public" static="no">
        <name>Interactive</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <initializer>_Py_Interactive(a0, a1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="444" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a8c5273fe38597ee6607481e31b440f85" prot="public" static="no">
        <name>Expression</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <initializer>_Py_Expression(a0, a1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="446" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a0463d5ea08f733cdcfa44c9dcaa9b3ed" prot="public" static="no">
        <name>Suite</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <initializer>_Py_Suite(a0, a1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="448" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a75eb1d05b1f001d474b832d17f210dc3" prot="public" static="no">
        <name>FunctionDef</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <param><defname>a6</defname></param>
        <param><defname>a7</defname></param>
        <initializer>_Py_FunctionDef(a0, a1, a2, a3, a4, a5, a6, a7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="450" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1adc5788d086ca60afb89e8e1098f0fd6d" prot="public" static="no">
        <name>AsyncFunctionDef</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <param><defname>a6</defname></param>
        <param><defname>a7</defname></param>
        <initializer>_Py_AsyncFunctionDef(a0, a1, a2, a3, a4, a5, a6, a7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="454" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1ad29dd3491ea33eabef8bdfd89ce6e7ca" prot="public" static="no">
        <name>ClassDef</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <param><defname>a6</defname></param>
        <param><defname>a7</defname></param>
        <initializer>_Py_ClassDef(a0, a1, a2, a3, a4, a5, a6, a7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="458" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1abdae7f49d66ce8e500825bb53aa14901" prot="public" static="no">
        <name>Return</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <initializer>_Py_Return(a0, a1, a2, a3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="462" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a7892570e9ff41fd7a083f300e4b81068" prot="public" static="no">
        <name>Delete</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <initializer>_Py_Delete(a0, a1, a2, a3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="464" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a20ef6778f00445938f70621bb6bcc118" prot="public" static="no">
        <name>Assign</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <initializer>_Py_Assign(a0, a1, a2, a3, a4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="467" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1aab09467214841c326f3c20477e9c31af" prot="public" static="no">
        <name>AugAssign</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <initializer>_Py_AugAssign(a0, a1, a2, a3, a4, a5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="470" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1ac2e29c7594e9ecf7bd58ff2a5b6ce240" prot="public" static="no">
        <name>AnnAssign</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <param><defname>a6</defname></param>
        <initializer>_Py_AnnAssign(a0, a1, a2, a3, a4, a5, a6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="473" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a8392a32b4f002d4b372598185b549a1d" prot="public" static="no">
        <name>For</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <param><defname>a6</defname></param>
        <initializer>_Py_For(a0, a1, a2, a3, a4, a5, a6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="476" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a4cb58f169e8df1498a705deeedea1f59" prot="public" static="no">
        <name>AsyncFor</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <param><defname>a6</defname></param>
        <initializer>_Py_AsyncFor(a0, a1, a2, a3, a4, a5, a6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="479" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1ae39ca9133484f2b999cbe74d93635d96" prot="public" static="no">
        <name>While</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <initializer>_Py_While(a0, a1, a2, a3, a4, a5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="482" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a3caa32cf8ff8db15e5835f5e40e6c6f8" prot="public" static="no">
        <name>If</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <initializer>_Py_If(a0, a1, a2, a3, a4, a5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="485" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1adfe4e5ada9dc68b9658d4d8479d3b751" prot="public" static="no">
        <name>With</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <initializer>_Py_With(a0, a1, a2, a3, a4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="488" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1af61ed8bc1eb1743f5d1624facfb90c69" prot="public" static="no">
        <name>AsyncWith</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <initializer>_Py_AsyncWith(a0, a1, a2, a3, a4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="491" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a809a7facf0d96fc41a9985be55dac211" prot="public" static="no">
        <name>Raise</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <initializer>_Py_Raise(a0, a1, a2, a3, a4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="494" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a7e714f463bcd55522f217ac6cc685e9e" prot="public" static="no">
        <name>Try</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <param><defname>a6</defname></param>
        <initializer>_Py_Try(a0, a1, a2, a3, a4, a5, a6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="497" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1ac2a76bd57d9607fccd7bbc0f40255d13" prot="public" static="no">
        <name>Assert</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <initializer>_Py_Assert(a0, a1, a2, a3, a4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="501" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1abbf91a20d51b8107b75aede82d50726b" prot="public" static="no">
        <name>Import</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <initializer>_Py_Import(a0, a1, a2, a3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="504" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a3314d17e8fe4cdbe5895a90e7caecfc5" prot="public" static="no">
        <name>ImportFrom</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <initializer>_Py_ImportFrom(a0, a1, a2, a3, a4, a5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="507" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a84df3f9175f02c4e11e66859646892f7" prot="public" static="no">
        <name>Global</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <initializer>_Py_Global(a0, a1, a2, a3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="510" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a83841607e2b3e861572f8afe17a9df05" prot="public" static="no">
        <name>Nonlocal</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <initializer>_Py_Nonlocal(a0, a1, a2, a3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="513" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a5f27997222de791e41ad21dd595b9a33" prot="public" static="no">
        <name>Expr</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <initializer>_Py_Expr(a0, a1, a2, a3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="516" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1aee98f791da192bec0e50ed774c9f141f" prot="public" static="no">
        <name>Pass</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <initializer>_Py_Pass(a0, a1, a2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="518" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a6d6a655cbc825addae6355c2ece3395b" prot="public" static="no">
        <name>Break</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <initializer>_Py_Break(a0, a1, a2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="520" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a1c690eb0347cce446137935dc279a7f3" prot="public" static="no">
        <name>Continue</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <initializer>_Py_Continue(a0, a1, a2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="522" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a4bab162f247adb9c24bea326f7dce65c" prot="public" static="no">
        <name>BoolOp</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <initializer>_Py_BoolOp(a0, a1, a2, a3, a4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="524" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a5288875143f3b5555cb1c1d5eb371e0d" prot="public" static="no">
        <name>BinOp</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <initializer>_Py_BinOp(a0, a1, a2, a3, a4, a5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="527" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="527" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a58d061c3512544360f86829dd63f4dd8" prot="public" static="no">
        <name>UnaryOp</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <initializer>_Py_UnaryOp(a0, a1, a2, a3, a4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="530" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="530" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1af3d84783a7fe3a1241ff0794313d29b9" prot="public" static="no">
        <name>Lambda</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <initializer>_Py_Lambda(a0, a1, a2, a3, a4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="533" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="533" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1ad3500934a5f5005efe3561ccec6e1610" prot="public" static="no">
        <name>IfExp</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <initializer>_Py_IfExp(a0, a1, a2, a3, a4, a5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="536" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="536" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1acab9403d000db48011d6f4bf9fea8b42" prot="public" static="no">
        <name>Dict</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <initializer>_Py_Dict(a0, a1, a2, a3, a4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="539" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="539" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a8b39bad9fda6bc73af75e4d6085bcf91" prot="public" static="no">
        <name>Set</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <initializer>_Py_Set(a0, a1, a2, a3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="542" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a436d129c9cca91b65e07a852cd5f61da" prot="public" static="no">
        <name>ListComp</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <initializer>_Py_ListComp(a0, a1, a2, a3, a4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="544" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="544" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1afb79ec461a79de87fb3eb00294630872" prot="public" static="no">
        <name>SetComp</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <initializer>_Py_SetComp(a0, a1, a2, a3, a4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="547" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1ada9dd0cacf4a2576a7f38345eb8a37e9" prot="public" static="no">
        <name>DictComp</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <initializer>_Py_DictComp(a0, a1, a2, a3, a4, a5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="550" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="550" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a1e309a988adeb91682c14a36c35bc7f5" prot="public" static="no">
        <name>GeneratorExp</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <initializer>_Py_GeneratorExp(a0, a1, a2, a3, a4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="553" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a8588487fe55924b71265c733caf91bdf" prot="public" static="no">
        <name>Await</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <initializer>_Py_Await(a0, a1, a2, a3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="556" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="556" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1ad1fd9f3236ea0923e1d29bc825cc0249" prot="public" static="no">
        <name>Yield</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <initializer>_Py_Yield(a0, a1, a2, a3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="558" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="558" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a35e69b38a610724c78e0b2b86bcdff58" prot="public" static="no">
        <name>YieldFrom</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <initializer>_Py_YieldFrom(a0, a1, a2, a3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="560" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="560" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1ae328ce3376c52a3dba42ab3708d5571b" prot="public" static="no">
        <name>Compare</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <initializer>_Py_Compare(a0, a1, a2, a3, a4, a5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="563" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="563" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a1efc1705b34d7c7cf2fd7c0d9a07aa57" prot="public" static="no">
        <name>Call</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <initializer>_Py_Call(a0, a1, a2, a3, a4, a5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="566" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a8c8f50b76976c33a0eaa959e28d7b453" prot="public" static="no">
        <name>Num</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <initializer>_Py_Num(a0, a1, a2, a3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="569" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a2b805f698f55c2006bea5dfbc0c582bd" prot="public" static="no">
        <name>Str</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <initializer>_Py_Str(a0, a1, a2, a3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="571" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="571" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a40d19652db5ff1d2004b5c185f1f9745" prot="public" static="no">
        <name>FormattedValue</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <initializer>_Py_FormattedValue(a0, a1, a2, a3, a4, a5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="573" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="573" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a8a9ccde01389bebb51f0594215c1b461" prot="public" static="no">
        <name>JoinedStr</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <initializer>_Py_JoinedStr(a0, a1, a2, a3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="576" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a63dc0cc73e0ec0293a3d378a04fe478b" prot="public" static="no">
        <name>Bytes</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <initializer>_Py_Bytes(a0, a1, a2, a3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="579" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="579" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1abc6150fdb27fbf00405f7166830f47ce" prot="public" static="no">
        <name>NameConstant</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <initializer>_Py_NameConstant(a0, a1, a2, a3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="581" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="581" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a7a809c8cc37c63bb2efd03c0e16a917e" prot="public" static="no">
        <name>Ellipsis</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <initializer>_Py_Ellipsis(a0, a1, a2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="584" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="584" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a7a88563f00d6abc763b364dfd7ad8289" prot="public" static="no">
        <name>Constant</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <initializer>_Py_Constant(a0, a1, a2, a3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="586" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1ac5330959be327b277dd98b3b793b8b12" prot="public" static="no">
        <name>Attribute</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <initializer>_Py_Attribute(a0, a1, a2, a3, a4, a5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="589" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="589" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a49a0a37e937fc34b38da7b8eef6c6ea9" prot="public" static="no">
        <name>Subscript</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <initializer>_Py_Subscript(a0, a1, a2, a3, a4, a5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="592" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="592" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a5f28041c7b325fe64f96a74478045a0c" prot="public" static="no">
        <name>Starred</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <initializer>_Py_Starred(a0, a1, a2, a3, a4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="595" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a3e9f22c154a65956ebd413d2d8dafc0f" prot="public" static="no">
        <name>Name</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <initializer>_Py_Name(a0, a1, a2, a3, a4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="598" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="598" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a201830357d214aabbdb46b4163c792cf" prot="public" static="no">
        <name>List</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <initializer>_Py_List(a0, a1, a2, a3, a4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="601" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a3f332c0be139cb870e516bad9b6a9366" prot="public" static="no">
        <name>Tuple</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <initializer>_Py_Tuple(a0, a1, a2, a3, a4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="604" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="604" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a239ffcf8a951a4a683fd09c8355fc888" prot="public" static="no">
        <name>Slice</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <initializer>_Py_Slice(a0, a1, a2, a3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="607" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="607" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a897a049777d959d56f82a2cd25114f8d" prot="public" static="no">
        <name>ExtSlice</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <initializer>_Py_ExtSlice(a0, a1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="609" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a2a3071e7f860820007763b32d1b8ef9c" prot="public" static="no">
        <name>Index</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <initializer>_Py_Index(a0, a1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="611" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="611" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a271772b908a6efcdeb9e4a9e6b423043" prot="public" static="no">
        <name>comprehension</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <initializer>_Py_comprehension(a0, a1, a2, a3, a4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="613" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1af2aadb28141fc0df670e4eb65b8b7dfe" prot="public" static="no">
        <name>ExceptHandler</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <initializer>_Py_ExceptHandler(a0, a1, a2, a3, a4, a5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="616" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="616" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1aad0ee1cc142292821a7bc0b4a6638b2b" prot="public" static="no">
        <name>arguments</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <param><defname>a5</defname></param>
        <param><defname>a6</defname></param>
        <initializer>_Py_arguments(a0, a1, a2, a3, a4, a5, a6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="620" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="620" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1afeae896afa6cfcd0b52f3117ac31e58a" prot="public" static="no">
        <name>arg</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>a3</defname></param>
        <param><defname>a4</defname></param>
        <initializer>_Py_arg(a0, a1, a2, a3, a4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="624" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="624" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a6f4e4451f80663655311eff20aad3ed5" prot="public" static="no">
        <name>keyword</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <initializer>_Py_keyword(a0, a1, a2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="627" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="627" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1a15c6f038882f857ce45ea016a3a735c9" prot="public" static="no">
        <name>alias</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <initializer>_Py_alias(a0, a1, a2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="629" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="629" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_python-ast_8h_1adfa20b526dabddcde42d976c8a5f860c" prot="public" static="no">
        <name>withitem</name>
        <param><defname>a0</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>a2</defname></param>
        <initializer>_Py_withitem(a0, a1, a2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="631" column="9" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="631" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_python-ast_8h_1a7cc9da6a6307ea8052f27a18bd3d7d5b" prot="public" static="no">
        <name>_expr_context</name>
        <enumvalue id="_python-ast_8h_1a7cc9da6a6307ea8052f27a18bd3d7d5bac40ec5db2990469fc236f4c5dea23edb" prot="public">
          <name>Load</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a7cc9da6a6307ea8052f27a18bd3d7d5ba9e1df3f1049c7d326da72b0f9145c005" prot="public">
          <name>Store</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a7cc9da6a6307ea8052f27a18bd3d7d5bae31c9c954fb9faedfb27bbcdf61d3034" prot="public">
          <name>Del</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a7cc9da6a6307ea8052f27a18bd3d7d5babab917fe620a622652abf504066dc637" prot="public">
          <name>AugLoad</name>
          <initializer>=4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a7cc9da6a6307ea8052f27a18bd3d7d5ba45b7e0e9a7ec1fe7db218314e5bf9a05" prot="public">
          <name>AugStore</name>
          <initializer>=5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a7cc9da6a6307ea8052f27a18bd3d7d5bad690f1954a79e4bc037bd69527f04358" prot="public">
          <name>Param</name>
          <initializer>=6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="11" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="11" bodyend="12"/>
      </memberdef>
      <memberdef kind="enum" id="_python-ast_8h_1a16067ed2b6546040536da29338709abf" prot="public" static="no">
        <name>_boolop</name>
        <enumvalue id="_python-ast_8h_1a16067ed2b6546040536da29338709abfa60b042c2c7da21af2ed42f8cc27e7ff8" prot="public">
          <name>And</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a16067ed2b6546040536da29338709abfa5d66935f41f1e80990e8bf3349074fe1" prot="public">
          <name>Or</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="16" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="enum" id="_python-ast_8h_1ab9d92a0f505af42d2049e62ae49ef932" prot="public" static="no">
        <name>_operator</name>
        <enumvalue id="_python-ast_8h_1ab9d92a0f505af42d2049e62ae49ef932a0d592a4b562059bc283e00b3704865c9" prot="public">
          <name>Add</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1ab9d92a0f505af42d2049e62ae49ef932a3e53f06234367d0e453fa5ea0ad2ab34" prot="public">
          <name>Sub</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1ab9d92a0f505af42d2049e62ae49ef932ac11cd5096bce522e5c65a328bdfa8950" prot="public">
          <name>Mult</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1ab9d92a0f505af42d2049e62ae49ef932a2dc064ebd199ed02883c02869c7ae35f" prot="public">
          <name>MatMult</name>
          <initializer>=4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1ab9d92a0f505af42d2049e62ae49ef932ae6fac012a9b23f2f87d8094e349e4418" prot="public">
          <name>Div</name>
          <initializer>=5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1ab9d92a0f505af42d2049e62ae49ef932a6265a10e42e4cfbf0c109d1685551e38" prot="public">
          <name>Mod</name>
          <initializer>=6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1ab9d92a0f505af42d2049e62ae49ef932a54cc8639b2ae32fad159203ab1b7aa4a" prot="public">
          <name>Pow</name>
          <initializer>=7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1ab9d92a0f505af42d2049e62ae49ef932a18d769abada18b7ac807c82764e475cb" prot="public">
          <name>LShift</name>
          <initializer>=8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1ab9d92a0f505af42d2049e62ae49ef932a98d0c110bdfdcc86bd18e372f0836bf3" prot="public">
          <name>RShift</name>
          <initializer>=9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1ab9d92a0f505af42d2049e62ae49ef932a9cc5f732de9ad61d2fbdc269ad8fd229" prot="public">
          <name>BitOr</name>
          <initializer>=10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1ab9d92a0f505af42d2049e62ae49ef932ad569888d3f9eb37a52b39ff267e0f71b" prot="public">
          <name>BitXor</name>
          <initializer>=11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1ab9d92a0f505af42d2049e62ae49ef932a4b00f9088f5497303ed67e67eacaca87" prot="public">
          <name>BitAnd</name>
          <initializer>=12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1ab9d92a0f505af42d2049e62ae49ef932ad89d44f098a9db72c5d6cf04d28dfcb1" prot="public">
          <name>FloorDiv</name>
          <initializer>=13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="18" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="enum" id="_python-ast_8h_1a2fcb7a4a9d1e6c4815772f808b402048" prot="public" static="no">
        <name>_unaryop</name>
        <enumvalue id="_python-ast_8h_1a2fcb7a4a9d1e6c4815772f808b402048ab445f261064c82a12bb18bab9496514f" prot="public">
          <name>Invert</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a2fcb7a4a9d1e6c4815772f808b402048aa60891460e284e663f5060208f72870b" prot="public">
          <name>Not</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a2fcb7a4a9d1e6c4815772f808b402048a07b218190abe4537188cdf9e2f572a44" prot="public">
          <name>UAdd</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a2fcb7a4a9d1e6c4815772f808b402048aa1f66d7391e86c99428bf615e84e4377" prot="public">
          <name>USub</name>
          <initializer>=4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="22" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="enum" id="_python-ast_8h_1aeae2807c86997ffad2fa6d972a29ee1f" prot="public" static="no">
        <name>_cmpop</name>
        <enumvalue id="_python-ast_8h_1aeae2807c86997ffad2fa6d972a29ee1fae1f850d18e84a62c4d982716d88c9956" prot="public">
          <name>Eq</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1aeae2807c86997ffad2fa6d972a29ee1fa87d7573b16e8096fd3255725c6bb4233" prot="public">
          <name>NotEq</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1aeae2807c86997ffad2fa6d972a29ee1fafa56747a82e24ea192125ef6dbd04d90" prot="public">
          <name>Lt</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1aeae2807c86997ffad2fa6d972a29ee1fa738a6921b33f511a1f188e076930eb1a" prot="public">
          <name>LtE</name>
          <initializer>=4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1aeae2807c86997ffad2fa6d972a29ee1fa5537aeeb812d680758d86f3a7a5f4008" prot="public">
          <name>Gt</name>
          <initializer>=5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1aeae2807c86997ffad2fa6d972a29ee1fa77cec11e2d46fb499bde97770b432cfb" prot="public">
          <name>GtE</name>
          <initializer>=6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1aeae2807c86997ffad2fa6d972a29ee1fa4e8f1adb83ee0775de17ed3aba6d45c0" prot="public">
          <name>Is</name>
          <initializer>=7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1aeae2807c86997ffad2fa6d972a29ee1fa47c783aeb318ad28ac6836aca9bbbbfa" prot="public">
          <name>IsNot</name>
          <initializer>=8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1aeae2807c86997ffad2fa6d972a29ee1fad8ff8dfc9381018e97fce86d909f8975" prot="public">
          <name>In</name>
          <initializer>=9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1aeae2807c86997ffad2fa6d972a29ee1faf570569b66e6350ba443805f89c95044" prot="public">
          <name>NotIn</name>
          <initializer>=10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="24" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="24" bodyend="25"/>
      </memberdef>
      <memberdef kind="enum" id="_python-ast_8h_1a8f50e8590be64db9ce87b40df20e1a30" prot="public" static="no">
        <name>_mod_kind</name>
        <enumvalue id="_python-ast_8h_1a8f50e8590be64db9ce87b40df20e1a30a085e7ed21c9aeb7b9530089bcf5155ac" prot="public">
          <name>Module_kind</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a8f50e8590be64db9ce87b40df20e1a30ab8f44ca0d8ca8a37c25377f1c9b428aa" prot="public">
          <name>Interactive_kind</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a8f50e8590be64db9ce87b40df20e1a30a50098a2f4bcc087c756c20052978eb2c" prot="public">
          <name>Expression_kind</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a8f50e8590be64db9ce87b40df20e1a30addf06367447cc84192bf76ee3cf86720" prot="public">
          <name>Suite_kind</name>
          <initializer>=4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="42" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="42" bodyend="43"/>
      </memberdef>
      <memberdef kind="enum" id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50" prot="public" static="no">
        <name>_stmt_kind</name>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50a22ed6daa57cbc77be76a0b63606c16d1" prot="public">
          <name>FunctionDef_kind</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50a10092dad27274c5ab321174ce5632359" prot="public">
          <name>AsyncFunctionDef_kind</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50a2aea04335f8b0421c0778106ae2d892b" prot="public">
          <name>ClassDef_kind</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50a828b1087744f86659f3c0820b967de93" prot="public">
          <name>Return_kind</name>
          <initializer>=4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50a739bdd27a09d3f7726a10e8e1dce2dc1" prot="public">
          <name>Delete_kind</name>
          <initializer>=5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50aa15a8b1b9ce98c68287e81319eb8c883" prot="public">
          <name>Assign_kind</name>
          <initializer>=6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50afef3025a7f7aa383957f560eefb3be1c" prot="public">
          <name>AugAssign_kind</name>
          <initializer>=7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50a9bf50f4679115440a53eca2e09c7e9dd" prot="public">
          <name>AnnAssign_kind</name>
          <initializer>=8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50a910d7d824e3095c3de6a3cfd5f8c99ef" prot="public">
          <name>For_kind</name>
          <initializer>=9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50a90f5adda0905ec0f50a95d5852357c79" prot="public">
          <name>AsyncFor_kind</name>
          <initializer>=10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50afc4199fcac0eeced7c1c57753fb78f38" prot="public">
          <name>While_kind</name>
          <initializer>=11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50aa09699248f936e38a783c6af799bfce7" prot="public">
          <name>If_kind</name>
          <initializer>=12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50a5f074f2c2f5e8e653cc228031fe6c891" prot="public">
          <name>With_kind</name>
          <initializer>=13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50ade178852d23416713d9a91627c083407" prot="public">
          <name>AsyncWith_kind</name>
          <initializer>=14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50a3bce7f55bcb5c8dac65e7653467de014" prot="public">
          <name>Raise_kind</name>
          <initializer>=15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50ad8db351af16a82ed0602ca706ad049d4" prot="public">
          <name>Try_kind</name>
          <initializer>=16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50a5872bb311a9da83c33d30a9fd58cc918" prot="public">
          <name>Assert_kind</name>
          <initializer>=17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50af4917c0258863b110b8eadab84112f99" prot="public">
          <name>Import_kind</name>
          <initializer>=18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50ac3ab5a0a2e07c74d5a52d7955317dae8" prot="public">
          <name>ImportFrom_kind</name>
          <initializer>=19</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50adadc2390a77a52bcd7e95ddb98331c35" prot="public">
          <name>Global_kind</name>
          <initializer>=20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50a90569996a5fd5241de443470a514b1d3" prot="public">
          <name>Nonlocal_kind</name>
          <initializer>=21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50aa6cfe045d86b92bb00027fbbac7c93b4" prot="public">
          <name>Expr_kind</name>
          <initializer>=22</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50a5e18ecd288081778a0894c5259358184" prot="public">
          <name>Pass_kind</name>
          <initializer>=23</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50af022f4f0dbcc13fa7484033cf48f64c4" prot="public">
          <name>Break_kind</name>
          <initializer>=24</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a3f8747ef1343a8899c10bb4911deed50af79e6f3e900a7ef290de0b95605a4260" prot="public">
          <name>Continue_kind</name>
          <initializer>=25</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="66" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="66" bodyend="73"/>
      </memberdef>
      <memberdef kind="enum" id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5" prot="public" static="no">
        <name>_expr_kind</name>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5a3164b72458abacf0800706b9e3251542" prot="public">
          <name>BoolOp_kind</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5ae0ab15a30be6f09f7c487ca41a83f844" prot="public">
          <name>BinOp_kind</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5af5146a83cab7c0cae4ac2ec045539ae6" prot="public">
          <name>UnaryOp_kind</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5a49a7c6a1b488cbf54b19ba2c1cbf24b5" prot="public">
          <name>Lambda_kind</name>
          <initializer>=4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5a0c8144cf0bfcd56df2f80c151fdb8b32" prot="public">
          <name>IfExp_kind</name>
          <initializer>=5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5a667caba6ace97ddb7fbf95e4d4472b09" prot="public">
          <name>Dict_kind</name>
          <initializer>=6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5aec764141401c5b84d2c6e76faa221e88" prot="public">
          <name>Set_kind</name>
          <initializer>=7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5a18fee2e451f7be3b2799e0227d734c39" prot="public">
          <name>ListComp_kind</name>
          <initializer>=8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5af10e18902b2c11ebb273489c8b920d55" prot="public">
          <name>SetComp_kind</name>
          <initializer>=9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5a6e4ef5e3e5f8c51a16759e3c88d3fffa" prot="public">
          <name>DictComp_kind</name>
          <initializer>=10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5a81e2ba7a8f8504ee1585a49548544046" prot="public">
          <name>GeneratorExp_kind</name>
          <initializer>=11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5a2fb8fc2ba1a5a7e82b38b380e30311bd" prot="public">
          <name>Await_kind</name>
          <initializer>=12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5ab4c4b250bc54c49bdab150992435b3ad" prot="public">
          <name>Yield_kind</name>
          <initializer>=13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5a5bae7f9cb826a1a77473bbf222e3a574" prot="public">
          <name>YieldFrom_kind</name>
          <initializer>=14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5a6615c81271ece756d328dc102afd6276" prot="public">
          <name>Compare_kind</name>
          <initializer>=15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5af3e77f520a0c2a30243938c3d37ffdaf" prot="public">
          <name>Call_kind</name>
          <initializer>=16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5af25f251c75389e54bf57fd57caa3f282" prot="public">
          <name>Num_kind</name>
          <initializer>=17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5abcbc4ac2ef1f42b3ed6cb1db4c9b9bce" prot="public">
          <name>Str_kind</name>
          <initializer>=18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5abd44d530a634c5c174ef4ee52d820534" prot="public">
          <name>FormattedValue_kind</name>
          <initializer>=19</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5afbd5bce311bee64185823d93dbe966e7" prot="public">
          <name>JoinedStr_kind</name>
          <initializer>=20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5ab3bd741bb73fcef14713a203f72c94c7" prot="public">
          <name>Bytes_kind</name>
          <initializer>=21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5af253fc10ecbb3a626250fd896a7e45e8" prot="public">
          <name>NameConstant_kind</name>
          <initializer>=22</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5ad4aee8939336eff2162d7529452e03b5" prot="public">
          <name>Ellipsis_kind</name>
          <initializer>=23</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5ac0f0465656b4cd3fa3916911cbb25dc9" prot="public">
          <name>Constant_kind</name>
          <initializer>=24</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5ae77f63aaf198ea1dcad6436068ffa43e" prot="public">
          <name>Attribute_kind</name>
          <initializer>=25</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5a86f08c478ccd12c6b441ca029b8f36d0" prot="public">
          <name>Subscript_kind</name>
          <initializer>=26</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5aafad126e6f42bf2529df09d02b4d043a" prot="public">
          <name>Starred_kind</name>
          <initializer>=27</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5a91b85e3c3730e60289ea543479a9d279" prot="public">
          <name>Name_kind</name>
          <initializer>=28</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5aeebd2d66924b67078cd020e7a87d3a90" prot="public">
          <name>List_kind</name>
          <initializer>=29</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1a5040779a586bc1f6938f47df869170a5a59859cb09bde0043fa0a6b75878f38e0" prot="public">
          <name>Tuple_kind</name>
          <initializer>=30</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="207" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="207" bodyend="215"/>
      </memberdef>
      <memberdef kind="enum" id="_python-ast_8h_1aca2c61e8b8abfd4a29eda6a47f491fcb" prot="public" static="no">
        <name>_slice_kind</name>
        <enumvalue id="_python-ast_8h_1aca2c61e8b8abfd4a29eda6a47f491fcba53eb6a1888d5bff810152915fc156ce7" prot="public">
          <name>Slice_kind</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1aca2c61e8b8abfd4a29eda6a47f491fcba8bee1f3cb51d8d9584a84c86da7c4a7b" prot="public">
          <name>ExtSlice_kind</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_python-ast_8h_1aca2c61e8b8abfd4a29eda6a47f491fcbaa6f9a1f413ae7903d7cec521decc6bdc" prot="public">
          <name>Index_kind</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="367" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="367" bodyend="367"/>
      </memberdef>
      <memberdef kind="enum" id="_python-ast_8h_1ab1a02e0128d053979abf2a94cf6ca9f2" prot="public" static="no">
        <name>_excepthandler_kind</name>
        <enumvalue id="_python-ast_8h_1ab1a02e0128d053979abf2a94cf6ca9f2adc67a3e6d61ceb4415f56387e611f438" prot="public">
          <name>ExceptHandler_kind</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="395" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="395" bodyend="395"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_python-ast_8h_1ac5ca223bf2573144610f74dc91fc431e" prot="public" static="no">
        <type>struct <ref refid="struct__mod" kindref="compound">_mod</ref> *</type>
        <definition>typedef struct _mod* mod_ty</definition>
        <argsstring></argsstring>
        <name>mod_ty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="5" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_python-ast_8h_1a39618071027b661bc03e8916e664e1a7" prot="public" static="no">
        <type>struct <ref refid="struct__stmt" kindref="compound">_stmt</ref> *</type>
        <definition>typedef struct _stmt* stmt_ty</definition>
        <argsstring></argsstring>
        <name>stmt_ty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="7" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_python-ast_8h_1a56d3705e020a071405094a220c4592bd" prot="public" static="no">
        <type>struct <ref refid="struct__expr" kindref="compound">_expr</ref> *</type>
        <definition>typedef struct _expr* expr_ty</definition>
        <argsstring></argsstring>
        <name>expr_ty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="9" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_python-ast_8h_1a38710ce394ed6d5cc8ebe79a322dcdf9" prot="public" static="no">
        <type>enum _expr_context</type>
        <definition>typedef enum _expr_context  expr_context_ty</definition>
        <argsstring></argsstring>
        <name>expr_context_ty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="12" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_python-ast_8h_1a1aba5288236679e8faff34c189476bf0" prot="public" static="no">
        <type>struct <ref refid="struct__slice" kindref="compound">_slice</ref> *</type>
        <definition>typedef struct _slice* slice_ty</definition>
        <argsstring></argsstring>
        <name>slice_ty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="14" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_python-ast_8h_1ab7ba8d66d81017932471af1f2609a830" prot="public" static="no">
        <type>enum _boolop</type>
        <definition>typedef enum _boolop  boolop_ty</definition>
        <argsstring></argsstring>
        <name>boolop_ty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="16" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_python-ast_8h_1a288bebfaafc9909b7072bf3f3997b700" prot="public" static="no">
        <type>enum _operator</type>
        <definition>typedef enum _operator  operator_ty</definition>
        <argsstring></argsstring>
        <name>operator_ty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="20" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_python-ast_8h_1a5a89f44a24bfbdb92d5a16b59468cffb" prot="public" static="no">
        <type>enum _unaryop</type>
        <definition>typedef enum _unaryop  unaryop_ty</definition>
        <argsstring></argsstring>
        <name>unaryop_ty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="22" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_python-ast_8h_1aabeaddc9c86d689d06ce80e7ebb22789" prot="public" static="no">
        <type>enum _cmpop</type>
        <definition>typedef enum _cmpop  cmpop_ty</definition>
        <argsstring></argsstring>
        <name>cmpop_ty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_python-ast_8h_1a465095ed82e25892d2ed2515ddfce38d" prot="public" static="no">
        <type>struct <ref refid="struct__comprehension" kindref="compound">_comprehension</ref> *</type>
        <definition>typedef struct _comprehension* comprehension_ty</definition>
        <argsstring></argsstring>
        <name>comprehension_ty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="27" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_python-ast_8h_1af85359ef2251f8c9819960684e134dfb" prot="public" static="no">
        <type>struct <ref refid="struct__excepthandler" kindref="compound">_excepthandler</ref> *</type>
        <definition>typedef struct _excepthandler* excepthandler_ty</definition>
        <argsstring></argsstring>
        <name>excepthandler_ty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="29" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_python-ast_8h_1a45cc6e94d598fdc335d8c85739108a3e" prot="public" static="no">
        <type>struct <ref refid="struct__arguments" kindref="compound">_arguments</ref> *</type>
        <definition>typedef struct _arguments* arguments_ty</definition>
        <argsstring></argsstring>
        <name>arguments_ty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="31" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_python-ast_8h_1a63b1f585aa12f29f44e22995e5b2f47d" prot="public" static="no">
        <type>struct <ref refid="struct__arg" kindref="compound">_arg</ref> *</type>
        <definition>typedef struct _arg* arg_ty</definition>
        <argsstring></argsstring>
        <name>arg_ty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="33" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_python-ast_8h_1a7acec0a136fb87c323f0a2e320b933d0" prot="public" static="no">
        <type>struct <ref refid="struct__keyword" kindref="compound">_keyword</ref> *</type>
        <definition>typedef struct _keyword* keyword_ty</definition>
        <argsstring></argsstring>
        <name>keyword_ty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="35" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_python-ast_8h_1a01f738700190ffcf2da799b99e05cbd1" prot="public" static="no">
        <type>struct <ref refid="struct__alias" kindref="compound">_alias</ref> *</type>
        <definition>typedef struct _alias* alias_ty</definition>
        <argsstring></argsstring>
        <name>alias_ty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="37" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_python-ast_8h_1afd9edc2bf5d24b3ff6812477f808f9d9" prot="public" static="no">
        <type>struct <ref refid="struct__withitem" kindref="compound">_withitem</ref> *</type>
        <definition>typedef struct _withitem* withitem_ty</definition>
        <argsstring></argsstring>
        <name>withitem_ty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="39" column="1" bodyfile="/usr/include/python3.6m/Python-ast.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_python-ast_8h_1ac22a9146d597c59e94e9511dd4db4772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__mod" kindref="compound">mod_ty</ref></type>
        <definition>mod_ty _Py_Module</definition>
        <argsstring>(asdl_seq *body, PyArena *arena)</argsstring>
        <name>_Py_Module</name>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>body</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="443" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a8e15d080424e133f37dcc31ddd99a34b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__mod" kindref="compound">mod_ty</ref></type>
        <definition>mod_ty _Py_Interactive</definition>
        <argsstring>(asdl_seq *body, PyArena *arena)</argsstring>
        <name>_Py_Interactive</name>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>body</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="445" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a87521a69a46a2f948409cfc6e4a8e8cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__mod" kindref="compound">mod_ty</ref></type>
        <definition>mod_ty _Py_Expression</definition>
        <argsstring>(expr_ty body, PyArena *arena)</argsstring>
        <name>_Py_Expression</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>body</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="447" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a7a0cc82ce7beb48bc2e9811f63ce1d9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__mod" kindref="compound">mod_ty</ref></type>
        <definition>mod_ty _Py_Suite</definition>
        <argsstring>(asdl_seq *body, PyArena *arena)</argsstring>
        <name>_Py_Suite</name>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>body</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="449" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a2270e52ef5322adba1270211812933c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_FunctionDef</definition>
        <argsstring>(identifier name, arguments_ty args, asdl_seq *body, asdl_seq *decorator_list, expr_ty returns, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_FunctionDef</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">identifier</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct__arguments" kindref="compound">arguments_ty</ref></type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>body</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>decorator_list</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>returns</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="451" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a99ff718e71a78ad1976daaf7121794fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_AsyncFunctionDef</definition>
        <argsstring>(identifier name, arguments_ty args, asdl_seq *body, asdl_seq *decorator_list, expr_ty returns, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_AsyncFunctionDef</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">identifier</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct__arguments" kindref="compound">arguments_ty</ref></type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>body</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>decorator_list</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>returns</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="455" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a2338b153c3331a0c729eb79ac29dba51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_ClassDef</definition>
        <argsstring>(identifier name, asdl_seq *bases, asdl_seq *keywords, asdl_seq *body, asdl_seq *decorator_list, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_ClassDef</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">identifier</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>bases</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>keywords</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>body</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>decorator_list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="459" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a7119d853ac5d21a0aab782a16be84c6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_Return</definition>
        <argsstring>(expr_ty value, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Return</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="463" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1ad988aab3b2734705a19dcf45a0b98950" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_Delete</definition>
        <argsstring>(asdl_seq *targets, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Delete</name>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>targets</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="465" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1ac35a8556d501c8658c9c2439952e50be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_Assign</definition>
        <argsstring>(asdl_seq *targets, expr_ty value, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Assign</name>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>targets</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="468" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1aa5441b53bbc02068d0348142c67109fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_AugAssign</definition>
        <argsstring>(expr_ty target, operator_ty op, expr_ty value, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_AugAssign</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type>operator_ty</type>
          <declname>op</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="471" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1ac5b395905ff9fda7ed8b9f13115ea477" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_AnnAssign</definition>
        <argsstring>(expr_ty target, expr_ty annotation, expr_ty value, int simple, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_AnnAssign</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>annotation</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>simple</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="474" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a53baf77d5304f3cbae00f4a06e5f1731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_For</definition>
        <argsstring>(expr_ty target, expr_ty iter, asdl_seq *body, asdl_seq *orelse, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_For</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>iter</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>body</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>orelse</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="477" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a7310991a13fe5f57e6d32b218106f21c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_AsyncFor</definition>
        <argsstring>(expr_ty target, expr_ty iter, asdl_seq *body, asdl_seq *orelse, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_AsyncFor</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>iter</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>body</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>orelse</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="480" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a95968d26701a57ae6bb604224b74ecee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_While</definition>
        <argsstring>(expr_ty test, asdl_seq *body, asdl_seq *orelse, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_While</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>test</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>body</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>orelse</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="483" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a4576b4b5b479fe67421c45bc1fcab077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_If</definition>
        <argsstring>(expr_ty test, asdl_seq *body, asdl_seq *orelse, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_If</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>test</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>body</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>orelse</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="486" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a6141144e21bde28903cedfb92aa0799e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_With</definition>
        <argsstring>(asdl_seq *items, asdl_seq *body, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_With</name>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>items</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>body</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="489" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a1865bd3fd8fced0c90b5d576b0035fb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_AsyncWith</definition>
        <argsstring>(asdl_seq *items, asdl_seq *body, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_AsyncWith</name>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>items</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>body</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="492" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1ae8d143fe1584811c2a0224ff47917f6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_Raise</definition>
        <argsstring>(expr_ty exc, expr_ty cause, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Raise</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>exc</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>cause</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="495" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1afbea54b4b693e66218dfe632f8492313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_Try</definition>
        <argsstring>(asdl_seq *body, asdl_seq *handlers, asdl_seq *orelse, asdl_seq *finalbody, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Try</name>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>body</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>handlers</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>orelse</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>finalbody</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="498" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a49ca293b711e4c7548184670d3e4e17f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_Assert</definition>
        <argsstring>(expr_ty test, expr_ty msg, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Assert</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>test</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>msg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="502" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a023382d2810dee50a2b0f8185043b76d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_Import</definition>
        <argsstring>(asdl_seq *names, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Import</name>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>names</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="505" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a78ee6afb979ce2e9d7c57aface1dc7f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_ImportFrom</definition>
        <argsstring>(identifier module, asdl_seq *names, int level, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_ImportFrom</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">identifier</ref></type>
          <declname>module</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>names</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="508" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a7070f4e0f5c60bfcaaa0ca6b0c42c840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_Global</definition>
        <argsstring>(asdl_seq *names, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Global</name>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>names</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="511" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1ab6e3542b0cce64c15b5b9ba6954bbc68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_Nonlocal</definition>
        <argsstring>(asdl_seq *names, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Nonlocal</name>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>names</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="514" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a2c246c3845b9932449f5a9afdabc2683" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_Expr</definition>
        <argsstring>(expr_ty value, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Expr</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="517" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1afa9885f0b471f7e1a640ac82c9be090f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_Pass</definition>
        <argsstring>(int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Pass</name>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="519" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a9bddbd991d9285df556fcda52f160aec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_Break</definition>
        <argsstring>(int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Break</name>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="521" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a135a80565203c375f54525ca9b46bbc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__stmt" kindref="compound">stmt_ty</ref></type>
        <definition>stmt_ty _Py_Continue</definition>
        <argsstring>(int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Continue</name>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="523" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a8441169f71a59d05748d4652ad0f691f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_BoolOp</definition>
        <argsstring>(boolop_ty op, asdl_seq *values, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_BoolOp</name>
        <param>
          <type>boolop_ty</type>
          <declname>op</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="525" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1ab7097e515f5a83d39487d5a585463dac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_BinOp</definition>
        <argsstring>(expr_ty left, operator_ty op, expr_ty right, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_BinOp</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type>operator_ty</type>
          <declname>op</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>right</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="528" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a988c2f43347c9e208c14ee54290474ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_UnaryOp</definition>
        <argsstring>(unaryop_ty op, expr_ty operand, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_UnaryOp</name>
        <param>
          <type>unaryop_ty</type>
          <declname>op</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>operand</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="531" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a445d98073909530cdb4b51f5c640baf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_Lambda</definition>
        <argsstring>(arguments_ty args, expr_ty body, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Lambda</name>
        <param>
          <type><ref refid="struct__arguments" kindref="compound">arguments_ty</ref></type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>body</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="534" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a912e7818e9f2abb4d541e6fb1cba269e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_IfExp</definition>
        <argsstring>(expr_ty test, expr_ty body, expr_ty orelse, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_IfExp</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>test</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>body</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>orelse</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="537" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a9c9d41ca778cf10d746e215dcb75c978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_Dict</definition>
        <argsstring>(asdl_seq *keys, asdl_seq *values, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Dict</name>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>keys</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="540" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1adf1513b1fa378e46c866f0bb85194b5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_Set</definition>
        <argsstring>(asdl_seq *elts, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Set</name>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>elts</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="543" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1ae1343d568a74770d89054de3b27a689e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_ListComp</definition>
        <argsstring>(expr_ty elt, asdl_seq *generators, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_ListComp</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>elt</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>generators</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="545" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1ac4460b8e0df62ceb60802eea5f299c19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_SetComp</definition>
        <argsstring>(expr_ty elt, asdl_seq *generators, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_SetComp</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>elt</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>generators</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="548" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a221e34772c12c38d3e2b230bf2c20471" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_DictComp</definition>
        <argsstring>(expr_ty key, expr_ty value, asdl_seq *generators, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_DictComp</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>generators</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="551" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a2e8fb0398e6235d848e31d61b4f34289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_GeneratorExp</definition>
        <argsstring>(expr_ty elt, asdl_seq *generators, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_GeneratorExp</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>elt</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>generators</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="554" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a5435eae0dccdc028778cb830aa3a2909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_Await</definition>
        <argsstring>(expr_ty value, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Await</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="557" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1aef15cd5d48730f2c5f4215d2cfc170df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_Yield</definition>
        <argsstring>(expr_ty value, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Yield</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="559" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a35f869465bec37e713dc05ac45564134" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_YieldFrom</definition>
        <argsstring>(expr_ty value, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_YieldFrom</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="561" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a2b463e29d526a83d1854ded8b88e9d7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_Compare</definition>
        <argsstring>(expr_ty left, asdl_int_seq *ops, asdl_seq *comparators, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Compare</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type><ref refid="structasdl__int__seq" kindref="compound">asdl_int_seq</ref> *</type>
          <declname>ops</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>comparators</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="564" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a466eeef4726fd07bd0ffa3b23d537908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_Call</definition>
        <argsstring>(expr_ty func, asdl_seq *args, asdl_seq *keywords, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Call</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>keywords</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="567" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a79a9fac1cfaeeff22b78665840bca615" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_Num</definition>
        <argsstring>(object n, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Num</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">object</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="570" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a2e03cfff5f4c8b214e1ca1d61fc3b5cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_Str</definition>
        <argsstring>(string s, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Str</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">string</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="572" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1ad4c31054fac75859ea73ff3e7c87cc26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_FormattedValue</definition>
        <argsstring>(expr_ty value, int conversion, expr_ty format_spec, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_FormattedValue</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>conversion</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>format_spec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="574" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a17f289726ad77e0ab3511b735e776f4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_JoinedStr</definition>
        <argsstring>(asdl_seq *values, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_JoinedStr</name>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="577" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a2cc41d04fda959fd0e51f82b8b66c1d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_Bytes</definition>
        <argsstring>(bytes s, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Bytes</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">bytes</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="580" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a4f1f1166722fe9d3016eab18ea3401bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_NameConstant</definition>
        <argsstring>(singleton value, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_NameConstant</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">singleton</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="582" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1aced222796bed847239a2c6dba41dc21f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_Ellipsis</definition>
        <argsstring>(int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Ellipsis</name>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="585" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a9dd7483163ae2ebe474550a9a7feb690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_Constant</definition>
        <argsstring>(constant value, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Constant</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">constant</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="587" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1aee0b04133ba38fe51fc7d4195644c5d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_Attribute</definition>
        <argsstring>(expr_ty value, identifier attr, expr_context_ty ctx, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Attribute</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">identifier</ref></type>
          <declname>attr</declname>
        </param>
        <param>
          <type>expr_context_ty</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="590" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a4f0bd3273fab37948889711e668fcc5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_Subscript</definition>
        <argsstring>(expr_ty value, slice_ty slice, expr_context_ty ctx, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Subscript</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="struct__slice" kindref="compound">slice_ty</ref></type>
          <declname>slice</declname>
        </param>
        <param>
          <type>expr_context_ty</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="593" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a0d8417a674c0534a436573e3aa67ca0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_Starred</definition>
        <argsstring>(expr_ty value, expr_context_ty ctx, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Starred</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>expr_context_ty</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="596" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1add305b1df2f60623616644e2bc5c4c96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_Name</definition>
        <argsstring>(identifier id, expr_context_ty ctx, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Name</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">identifier</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>expr_context_ty</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="599" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a60f89e3a3bd0f6d993ddcc2c3a3eb9f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_List</definition>
        <argsstring>(asdl_seq *elts, expr_context_ty ctx, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_List</name>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>elts</declname>
        </param>
        <param>
          <type>expr_context_ty</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="602" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1adcbcc2836882c9eda8680dffb9cde4d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
        <definition>expr_ty _Py_Tuple</definition>
        <argsstring>(asdl_seq *elts, expr_context_ty ctx, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_Tuple</name>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>elts</declname>
        </param>
        <param>
          <type>expr_context_ty</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="605" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a2319130e186f0697f6d7cc6d6c33b34c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__slice" kindref="compound">slice_ty</ref></type>
        <definition>slice_ty _Py_Slice</definition>
        <argsstring>(expr_ty lower, expr_ty upper, expr_ty step, PyArena *arena)</argsstring>
        <name>_Py_Slice</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>lower</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>upper</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>step</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="608" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a2b4bdfbc6abd001f33a02e5a205fbf1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__slice" kindref="compound">slice_ty</ref></type>
        <definition>slice_ty _Py_ExtSlice</definition>
        <argsstring>(asdl_seq *dims, PyArena *arena)</argsstring>
        <name>_Py_ExtSlice</name>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>dims</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="610" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a9aac09e16c4da5fdfa59d726fa0e1e2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__slice" kindref="compound">slice_ty</ref></type>
        <definition>slice_ty _Py_Index</definition>
        <argsstring>(expr_ty value, PyArena *arena)</argsstring>
        <name>_Py_Index</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="612" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a8128734860aee908bb3e3c4f2daac814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__comprehension" kindref="compound">comprehension_ty</ref></type>
        <definition>comprehension_ty _Py_comprehension</definition>
        <argsstring>(expr_ty target, expr_ty iter, asdl_seq *ifs, int is_async, PyArena *arena)</argsstring>
        <name>_Py_comprehension</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>iter</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>ifs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>is_async</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="614" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1acd3b70bed43fde3c867bc757efa681eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__excepthandler" kindref="compound">excepthandler_ty</ref></type>
        <definition>excepthandler_ty _Py_ExceptHandler</definition>
        <argsstring>(expr_ty type, identifier name, asdl_seq *body, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_ExceptHandler</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">identifier</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>body</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="617" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a5a7df5e03ded6b33ba5be7c12b073275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__arguments" kindref="compound">arguments_ty</ref></type>
        <definition>arguments_ty _Py_arguments</definition>
        <argsstring>(asdl_seq *args, arg_ty vararg, asdl_seq *kwonlyargs, asdl_seq *kw_defaults, arg_ty kwarg, asdl_seq *defaults, PyArena *arena)</argsstring>
        <name>_Py_arguments</name>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="struct__arg" kindref="compound">arg_ty</ref></type>
          <declname>vararg</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>kwonlyargs</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>kw_defaults</declname>
        </param>
        <param>
          <type><ref refid="struct__arg" kindref="compound">arg_ty</ref></type>
          <declname>kwarg</declname>
        </param>
        <param>
          <type><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref> *</type>
          <declname>defaults</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="621" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a31ac9dcd6be4daf8575107ef00727a1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__arg" kindref="compound">arg_ty</ref></type>
        <definition>arg_ty _Py_arg</definition>
        <argsstring>(identifier arg, expr_ty annotation, int lineno, int col_offset, PyArena *arena)</argsstring>
        <name>_Py_arg</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">identifier</ref></type>
          <declname>arg</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>annotation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_offset</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="625" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1aa25dc5cb8a1078deaea4ea52c7db9113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__keyword" kindref="compound">keyword_ty</ref></type>
        <definition>keyword_ty _Py_keyword</definition>
        <argsstring>(identifier arg, expr_ty value, PyArena *arena)</argsstring>
        <name>_Py_keyword</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">identifier</ref></type>
          <declname>arg</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="628" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a2849a333e5d58648fdd6b48c041c5f53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__alias" kindref="compound">alias_ty</ref></type>
        <definition>alias_ty _Py_alias</definition>
        <argsstring>(identifier name, identifier asname, PyArena *arena)</argsstring>
        <name>_Py_alias</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">identifier</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct__object" kindref="compound">identifier</ref></type>
          <declname>asname</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="630" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1ae2ee941dc2a94de80a9b2c8bf4f38b00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__withitem" kindref="compound">withitem_ty</ref></type>
        <definition>withitem_ty _Py_withitem</definition>
        <argsstring>(expr_ty context_expr, expr_ty optional_vars, PyArena *arena)</argsstring>
        <name>_Py_withitem</name>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>context_expr</declname>
        </param>
        <param>
          <type><ref refid="struct__expr" kindref="compound">expr_ty</ref></type>
          <declname>optional_vars</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="632" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a8e7c775337af2bb6deefd4dee9cbcd18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>PyObject* PyAST_mod2obj</definition>
        <argsstring>(mod_ty t)</argsstring>
        <name>PyAST_mod2obj</name>
        <param>
          <type><ref refid="struct__mod" kindref="compound">mod_ty</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="635" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a7756e1a1e8034f7ab1cf1f0cae7c54e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__mod" kindref="compound">mod_ty</ref></type>
        <definition>mod_ty PyAST_obj2mod</definition>
        <argsstring>(PyObject *ast, PyArena *arena, int mode)</argsstring>
        <name>PyAST_obj2mod</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>ast</declname>
        </param>
        <param>
          <type>PyArena *</type>
          <declname>arena</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="636" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_python-ast_8h_1a64b82b278d361955a1b9403b516dfe12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PyAST_Check</definition>
        <argsstring>(PyObject *obj)</argsstring>
        <name>PyAST_Check</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/Python-ast.h" line="637" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>File<sp/>automatically<sp/>generated<sp/>by<sp/>Parser/asdl_c.py.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;asdl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__mod" kindref="compound">_mod</ref><sp/>*<ref refid="struct__mod" kindref="compound">mod_ty</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__stmt" kindref="compound">_stmt</ref><sp/>*<ref refid="struct__stmt" kindref="compound">stmt_ty</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__expr" kindref="compound">_expr</ref><sp/>*<ref refid="struct__expr" kindref="compound">expr_ty</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_expr_context<sp/>{<sp/>Load=1,<sp/>Store=2,<sp/>Del=3,<sp/>AugLoad=4,<sp/>AugStore=5,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Param=6<sp/>}<sp/>expr_context_ty;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__slice" kindref="compound">_slice</ref><sp/>*<ref refid="struct__slice" kindref="compound">slice_ty</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_boolop<sp/>{<sp/>And=1,<sp/>Or=2<sp/>}<sp/>boolop_ty;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_operator<sp/>{<sp/>Add=1,<sp/>Sub=2,<sp/>Mult=3,<sp/>MatMult=4,<sp/>Div=5,<sp/>Mod=6,<sp/>Pow=7,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LShift=8,<sp/>RShift=9,<sp/>BitOr=10,<sp/>BitXor=11,<sp/>BitAnd=12,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloorDiv=13<sp/>}<sp/>operator_ty;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_unaryop<sp/>{<sp/>Invert=1,<sp/>Not=2,<sp/>UAdd=3,<sp/>USub=4<sp/>}<sp/>unaryop_ty;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_cmpop<sp/>{<sp/>Eq=1,<sp/>NotEq=2,<sp/>Lt=3,<sp/>LtE=4,<sp/>Gt=5,<sp/>GtE=6,<sp/>Is=7,<sp/>IsNot=8,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In=9,<sp/>NotIn=10<sp/>}<sp/>cmpop_ty;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__comprehension" kindref="compound">_comprehension</ref><sp/>*<ref refid="struct__comprehension" kindref="compound">comprehension_ty</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__excepthandler" kindref="compound">_excepthandler</ref><sp/>*<ref refid="struct__excepthandler" kindref="compound">excepthandler_ty</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__arguments" kindref="compound">_arguments</ref><sp/>*<ref refid="struct__arguments" kindref="compound">arguments_ty</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__arg" kindref="compound">_arg</ref><sp/>*<ref refid="struct__arg" kindref="compound">arg_ty</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__keyword" kindref="compound">_keyword</ref><sp/>*<ref refid="struct__keyword" kindref="compound">keyword_ty</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__alias" kindref="compound">_alias</ref><sp/>*<ref refid="struct__alias" kindref="compound">alias_ty</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__withitem" kindref="compound">_withitem</ref><sp/>*<ref refid="struct__withitem" kindref="compound">withitem_ty</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_mod_kind<sp/>{Module_kind=1,<sp/>Interactive_kind=2,<sp/>Expression_kind=3,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Suite_kind=4};</highlight></codeline>
<codeline lineno="44" refid="struct__mod" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__mod" kindref="compound">_mod</ref><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_mod_kind<sp/>kind;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*body;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Module;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*body;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Interactive;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>body;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Expression;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*body;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Suite;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>v;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_stmt_kind<sp/>{FunctionDef_kind=1,<sp/>AsyncFunctionDef_kind=2,<sp/>ClassDef_kind=3,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return_kind=4,<sp/>Delete_kind=5,<sp/>Assign_kind=6,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AugAssign_kind=7,<sp/>AnnAssign_kind=8,<sp/>For_kind=9,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AsyncFor_kind=10,<sp/>While_kind=11,<sp/>If_kind=12,<sp/>With_kind=13,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AsyncWith_kind=14,<sp/>Raise_kind=15,<sp/>Try_kind=16,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert_kind=17,<sp/>Import_kind=18,<sp/>ImportFrom_kind=19,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Global_kind=20,<sp/>Nonlocal_kind=21,<sp/>Expr_kind=22,<sp/>Pass_kind=23,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Break_kind=24,<sp/>Continue_kind=25};</highlight></codeline>
<codeline lineno="74" refid="struct__stmt" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__stmt" kindref="compound">_stmt</ref><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_stmt_kind<sp/>kind;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">identifier</ref><sp/>name;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments_ty<sp/>args;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*body;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*decorator_list;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>returns;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>FunctionDef;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">identifier</ref><sp/>name;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments_ty<sp/>args;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*body;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*decorator_list;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>returns;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>AsyncFunctionDef;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">identifier</ref><sp/>name;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*bases;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*keywords;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*body;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*decorator_list;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>ClassDef;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>value;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Return;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*targets;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Delete;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*targets;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>value;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Assign;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>target;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator_ty<sp/>op;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>value;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>AugAssign;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>target;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>annotation;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>value;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>simple;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>AnnAssign;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>target;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>iter;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*body;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*orelse;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>For;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>target;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>iter;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*body;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*orelse;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>AsyncFor;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>test;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*body;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*orelse;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>While;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>test;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*body;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*orelse;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>If;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*items;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*body;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>With;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*items;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*body;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>AsyncWith;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>exc;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>cause;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Raise;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*body;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*handlers;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*orelse;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*finalbody;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Try;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>test;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>msg;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Assert;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*names;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Import;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">identifier</ref><sp/>module;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*names;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>ImportFrom;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*names;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Global;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*names;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Nonlocal;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>value;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Expr;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>v;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_expr_kind<sp/>{BoolOp_kind=1,<sp/>BinOp_kind=2,<sp/>UnaryOp_kind=3,<sp/>Lambda_kind=4,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IfExp_kind=5,<sp/>Dict_kind=6,<sp/>Set_kind=7,<sp/>ListComp_kind=8,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetComp_kind=9,<sp/>DictComp_kind=10,<sp/>GeneratorExp_kind=11,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Await_kind=12,<sp/>Yield_kind=13,<sp/>YieldFrom_kind=14,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Compare_kind=15,<sp/>Call_kind=16,<sp/>Num_kind=17,<sp/>Str_kind=18,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FormattedValue_kind=19,<sp/>JoinedStr_kind=20,<sp/>Bytes_kind=21,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NameConstant_kind=22,<sp/>Ellipsis_kind=23,<sp/>Constant_kind=24,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Attribute_kind=25,<sp/>Subscript_kind=26,<sp/>Starred_kind=27,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Name_kind=28,<sp/>List_kind=29,<sp/>Tuple_kind=30};</highlight></codeline>
<codeline lineno="216" refid="struct__expr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__expr" kindref="compound">_expr</ref><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_expr_kind<sp/>kind;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolop_ty<sp/>op;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*values;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>BoolOp;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>left;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator_ty<sp/>op;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>right;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>BinOp;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unaryop_ty<sp/>op;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>operand;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>UnaryOp;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments_ty<sp/>args;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>body;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Lambda;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>test;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>body;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>orelse;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>IfExp;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*keys;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*values;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Dict;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*elts;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Set;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>elt;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*generators;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>ListComp;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>elt;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*generators;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>SetComp;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>key;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>value;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*generators;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>DictComp;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>elt;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*generators;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>GeneratorExp;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>value;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Await;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>value;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Yield;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>value;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>YieldFrom;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>left;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__int__seq" kindref="compound">asdl_int_seq</ref><sp/>*ops;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*comparators;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Compare;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>func;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*args;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*keywords;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Call;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Num;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Str;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>value;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>conversion;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>format_spec;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>FormattedValue;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*values;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>JoinedStr;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">bytes</ref><sp/>s;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Bytes;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">singleton</ref><sp/>value;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>NameConstant;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">constant</ref><sp/>value;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Constant;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>value;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">identifier</ref><sp/>attr;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_context_ty<sp/>ctx;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Attribute;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>value;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_ty<sp/>slice;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_context_ty<sp/>ctx;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Subscript;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>value;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_context_ty<sp/>ctx;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Starred;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">identifier</ref><sp/>id;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_context_ty<sp/>ctx;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Name;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*elts;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_context_ty<sp/>ctx;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>List;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*elts;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_context_ty<sp/>ctx;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Tuple;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>v;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset;</highlight></codeline>
<codeline lineno="365"><highlight class="normal">};</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_slice_kind<sp/>{Slice_kind=1,<sp/>ExtSlice_kind=2,<sp/>Index_kind=3};</highlight></codeline>
<codeline lineno="368" refid="struct__slice" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__slice" kindref="compound">_slice</ref><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_slice_kind<sp/>kind;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>lower;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>upper;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>step;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Slice;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*dims;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>ExtSlice;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>value;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>Index;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>v;</highlight></codeline>
<codeline lineno="386"><highlight class="normal">};</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="struct__comprehension" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__comprehension" kindref="compound">_comprehension</ref><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>expr_ty<sp/>target;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>expr_ty<sp/>iter;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*ifs;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_async;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">};</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_excepthandler_kind<sp/>{ExceptHandler_kind=1};</highlight></codeline>
<codeline lineno="396" refid="struct__excepthandler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__excepthandler" kindref="compound">_excepthandler</ref><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_excepthandler_kind<sp/>kind;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_ty<sp/>type;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">identifier</ref><sp/>name;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*body;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>ExceptHandler;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>v;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset;</highlight></codeline>
<codeline lineno="408"><highlight class="normal">};</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="struct__arguments" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__arguments" kindref="compound">_arguments</ref><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*args;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>arg_ty<sp/>vararg;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*kwonlyargs;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*kw_defaults;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>arg_ty<sp/>kwarg;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*defaults;</highlight></codeline>
<codeline lineno="417"><highlight class="normal">};</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="struct__arg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__arg" kindref="compound">_arg</ref><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">identifier</ref><sp/>arg;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>expr_ty<sp/>annotation;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset;</highlight></codeline>
<codeline lineno="424"><highlight class="normal">};</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="struct__keyword" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__keyword" kindref="compound">_keyword</ref><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">identifier</ref><sp/>arg;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>expr_ty<sp/>value;</highlight></codeline>
<codeline lineno="429"><highlight class="normal">};</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="struct__alias" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__alias" kindref="compound">_alias</ref><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">identifier</ref><sp/>name;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">identifier</ref><sp/>asname;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">};</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="struct__withitem" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__withitem" kindref="compound">_withitem</ref><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>expr_ty<sp/>context_expr;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>expr_ty<sp/>optional_vars;</highlight></codeline>
<codeline lineno="439"><highlight class="normal">};</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Module(a0,<sp/>a1)<sp/>_Py_Module(a0,<sp/>a1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal">mod_ty<sp/>_Py_Module(<ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>body,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Interactive(a0,<sp/>a1)<sp/>_Py_Interactive(a0,<sp/>a1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal">mod_ty<sp/>_Py_Interactive(<ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>body,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Expression(a0,<sp/>a1)<sp/>_Py_Expression(a0,<sp/>a1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal">mod_ty<sp/>_Py_Expression(expr_ty<sp/>body,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Suite(a0,<sp/>a1)<sp/>_Py_Suite(a0,<sp/>a1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal">mod_ty<sp/>_Py_Suite(<ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>body,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FunctionDef(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7)<sp/>_Py_FunctionDef(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal">stmt_ty<sp/>_Py_FunctionDef(<ref refid="struct__object" kindref="compound">identifier</ref><sp/>name,<sp/>arguments_ty<sp/>args,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>body,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>decorator_list,<sp/>expr_ty<sp/>returns,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AsyncFunctionDef(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7)<sp/>_Py_AsyncFunctionDef(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal">stmt_ty<sp/>_Py_AsyncFunctionDef(<ref refid="struct__object" kindref="compound">identifier</ref><sp/>name,<sp/>arguments_ty<sp/>args,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>body,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>decorator_list,<sp/>expr_ty<sp/>returns,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ClassDef(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7)<sp/>_Py_ClassDef(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6,<sp/>a7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal">stmt_ty<sp/>_Py_ClassDef(<ref refid="struct__object" kindref="compound">identifier</ref><sp/>name,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>bases,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>keywords,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>body,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>decorator_list,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Return(a0,<sp/>a1,<sp/>a2,<sp/>a3)<sp/>_Py_Return(a0,<sp/>a1,<sp/>a2,<sp/>a3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal">stmt_ty<sp/>_Py_Return(expr_ty<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Delete(a0,<sp/>a1,<sp/>a2,<sp/>a3)<sp/>_Py_Delete(a0,<sp/>a1,<sp/>a2,<sp/>a3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal">stmt_ty<sp/>_Py_Delete(<ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>targets,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arena);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Assign(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>_Py_Assign(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal">stmt_ty<sp/>_Py_Assign(<ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>targets,<sp/>expr_ty<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AugAssign(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)<sp/>_Py_AugAssign(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal">stmt_ty<sp/>_Py_AugAssign(expr_ty<sp/>target,<sp/>operator_ty<sp/>op,<sp/>expr_ty<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AnnAssign(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6)<sp/>_Py_AnnAssign(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal">stmt_ty<sp/>_Py_AnnAssign(expr_ty<sp/>target,<sp/>expr_ty<sp/>annotation,<sp/>expr_ty<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>For(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6)<sp/>_Py_For(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal">stmt_ty<sp/>_Py_For(expr_ty<sp/>target,<sp/>expr_ty<sp/>iter,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>body,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orelse,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AsyncFor(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6)<sp/>_Py_AsyncFor(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal">stmt_ty<sp/>_Py_AsyncFor(expr_ty<sp/>target,<sp/>expr_ty<sp/>iter,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>body,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orelse,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>While(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)<sp/>_Py_While(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal">stmt_ty<sp/>_Py_While(expr_ty<sp/>test,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>body,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>orelse,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>If(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)<sp/>_Py_If(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal">stmt_ty<sp/>_Py_If(expr_ty<sp/>test,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>body,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>orelse,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>With(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>_Py_With(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal">stmt_ty<sp/>_Py_With(<ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>items,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>body,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AsyncWith(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>_Py_AsyncWith(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal">stmt_ty<sp/>_Py_AsyncWith(<ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>items,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>body,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Raise(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>_Py_Raise(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal">stmt_ty<sp/>_Py_Raise(expr_ty<sp/>exc,<sp/>expr_ty<sp/>cause,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Try(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6)<sp/>_Py_Try(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal">stmt_ty<sp/>_Py_Try(<ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>body,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>handlers,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>orelse,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>finalbody,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arena);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Assert(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>_Py_Assert(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal">stmt_ty<sp/>_Py_Assert(expr_ty<sp/>test,<sp/>expr_ty<sp/>msg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Import(a0,<sp/>a1,<sp/>a2,<sp/>a3)<sp/>_Py_Import(a0,<sp/>a1,<sp/>a2,<sp/>a3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal">stmt_ty<sp/>_Py_Import(<ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>names,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arena);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ImportFrom(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)<sp/>_Py_ImportFrom(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal">stmt_ty<sp/>_Py_ImportFrom(<ref refid="struct__object" kindref="compound">identifier</ref><sp/>module,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>names,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Global(a0,<sp/>a1,<sp/>a2,<sp/>a3)<sp/>_Py_Global(a0,<sp/>a1,<sp/>a2,<sp/>a3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal">stmt_ty<sp/>_Py_Global(<ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>names,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arena);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Nonlocal(a0,<sp/>a1,<sp/>a2,<sp/>a3)<sp/>_Py_Nonlocal(a0,<sp/>a1,<sp/>a2,<sp/>a3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal">stmt_ty<sp/>_Py_Nonlocal(<ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>names,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arena);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Expr(a0,<sp/>a1,<sp/>a2,<sp/>a3)<sp/>_Py_Expr(a0,<sp/>a1,<sp/>a2,<sp/>a3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal">stmt_ty<sp/>_Py_Expr(expr_ty<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Pass(a0,<sp/>a1,<sp/>a2)<sp/>_Py_Pass(a0,<sp/>a1,<sp/>a2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal">stmt_ty<sp/>_Py_Pass(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Break(a0,<sp/>a1,<sp/>a2)<sp/>_Py_Break(a0,<sp/>a1,<sp/>a2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal">stmt_ty<sp/>_Py_Break(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Continue(a0,<sp/>a1,<sp/>a2)<sp/>_Py_Continue(a0,<sp/>a1,<sp/>a2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal">stmt_ty<sp/>_Py_Continue(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BoolOp(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>_Py_BoolOp(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal">expr_ty<sp/>_Py_BoolOp(boolop_ty<sp/>op,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>values,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BinOp(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)<sp/>_Py_BinOp(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal">expr_ty<sp/>_Py_BinOp(expr_ty<sp/>left,<sp/>operator_ty<sp/>op,<sp/>expr_ty<sp/>right,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UnaryOp(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>_Py_UnaryOp(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal">expr_ty<sp/>_Py_UnaryOp(unaryop_ty<sp/>op,<sp/>expr_ty<sp/>operand,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Lambda(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>_Py_Lambda(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal">expr_ty<sp/>_Py_Lambda(arguments_ty<sp/>args,<sp/>expr_ty<sp/>body,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IfExp(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)<sp/>_Py_IfExp(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal">expr_ty<sp/>_Py_IfExp(expr_ty<sp/>test,<sp/>expr_ty<sp/>body,<sp/>expr_ty<sp/>orelse,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Dict(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>_Py_Dict(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal">expr_ty<sp/>_Py_Dict(<ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>keys,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>values,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Set(a0,<sp/>a1,<sp/>a2,<sp/>a3)<sp/>_Py_Set(a0,<sp/>a1,<sp/>a2,<sp/>a3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal">expr_ty<sp/>_Py_Set(<ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>elts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ListComp(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>_Py_ListComp(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal">expr_ty<sp/>_Py_ListComp(expr_ty<sp/>elt,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>generators,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SetComp(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>_Py_SetComp(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal">expr_ty<sp/>_Py_SetComp(expr_ty<sp/>elt,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>generators,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DictComp(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)<sp/>_Py_DictComp(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal">expr_ty<sp/>_Py_DictComp(expr_ty<sp/>key,<sp/>expr_ty<sp/>value,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>generators,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GeneratorExp(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>_Py_GeneratorExp(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal">expr_ty<sp/>_Py_GeneratorExp(expr_ty<sp/>elt,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>generators,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Await(a0,<sp/>a1,<sp/>a2,<sp/>a3)<sp/>_Py_Await(a0,<sp/>a1,<sp/>a2,<sp/>a3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal">expr_ty<sp/>_Py_Await(expr_ty<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Yield(a0,<sp/>a1,<sp/>a2,<sp/>a3)<sp/>_Py_Yield(a0,<sp/>a1,<sp/>a2,<sp/>a3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal">expr_ty<sp/>_Py_Yield(expr_ty<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YieldFrom(a0,<sp/>a1,<sp/>a2,<sp/>a3)<sp/>_Py_YieldFrom(a0,<sp/>a1,<sp/>a2,<sp/>a3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal">expr_ty<sp/>_Py_YieldFrom(expr_ty<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arena);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Compare(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)<sp/>_Py_Compare(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal">expr_ty<sp/>_Py_Compare(expr_ty<sp/>left,<sp/><ref refid="structasdl__int__seq" kindref="compound">asdl_int_seq</ref><sp/>*<sp/>ops,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>comparators,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Call(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)<sp/>_Py_Call(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal">expr_ty<sp/>_Py_Call(expr_ty<sp/>func,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>args,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>keywords,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Num(a0,<sp/>a1,<sp/>a2,<sp/>a3)<sp/>_Py_Num(a0,<sp/>a1,<sp/>a2,<sp/>a3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal">expr_ty<sp/>_Py_Num(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Str(a0,<sp/>a1,<sp/>a2,<sp/>a3)<sp/>_Py_Str(a0,<sp/>a1,<sp/>a2,<sp/>a3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal">expr_ty<sp/>_Py_Str(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FormattedValue(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)<sp/>_Py_FormattedValue(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal">expr_ty<sp/>_Py_FormattedValue(expr_ty<sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>conversion,<sp/>expr_ty<sp/>format_spec,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JoinedStr(a0,<sp/>a1,<sp/>a2,<sp/>a3)<sp/>_Py_JoinedStr(a0,<sp/>a1,<sp/>a2,<sp/>a3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal">expr_ty<sp/>_Py_JoinedStr(<ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>values,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arena);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Bytes(a0,<sp/>a1,<sp/>a2,<sp/>a3)<sp/>_Py_Bytes(a0,<sp/>a1,<sp/>a2,<sp/>a3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal">expr_ty<sp/>_Py_Bytes(<ref refid="struct__object" kindref="compound">bytes</ref><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NameConstant(a0,<sp/>a1,<sp/>a2,<sp/>a3)<sp/>_Py_NameConstant(a0,<sp/>a1,<sp/>a2,<sp/>a3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal">expr_ty<sp/>_Py_NameConstant(<ref refid="struct__object" kindref="compound">singleton</ref><sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arena);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Ellipsis(a0,<sp/>a1,<sp/>a2)<sp/>_Py_Ellipsis(a0,<sp/>a1,<sp/>a2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal">expr_ty<sp/>_Py_Ellipsis(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Constant(a0,<sp/>a1,<sp/>a2,<sp/>a3)<sp/>_Py_Constant(a0,<sp/>a1,<sp/>a2,<sp/>a3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal">expr_ty<sp/>_Py_Constant(<ref refid="struct__object" kindref="compound">constant</ref><sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arena);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Attribute(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)<sp/>_Py_Attribute(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal">expr_ty<sp/>_Py_Attribute(expr_ty<sp/>value,<sp/><ref refid="struct__object" kindref="compound">identifier</ref><sp/>attr,<sp/>expr_context_ty<sp/>ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Subscript(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)<sp/>_Py_Subscript(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal">expr_ty<sp/>_Py_Subscript(expr_ty<sp/>value,<sp/>slice_ty<sp/>slice,<sp/>expr_context_ty<sp/>ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Starred(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>_Py_Starred(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal">expr_ty<sp/>_Py_Starred(expr_ty<sp/>value,<sp/>expr_context_ty<sp/>ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Name(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>_Py_Name(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal">expr_ty<sp/>_Py_Name(<ref refid="struct__object" kindref="compound">identifier</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>expr_context_ty<sp/>ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>List(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>_Py_List(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal">expr_ty<sp/>_Py_List(<ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>elts,<sp/>expr_context_ty<sp/>ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Tuple(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>_Py_Tuple(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal">expr_ty<sp/>_Py_Tuple(<ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>elts,<sp/>expr_context_ty<sp/>ctx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_offset,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Slice(a0,<sp/>a1,<sp/>a2,<sp/>a3)<sp/>_Py_Slice(a0,<sp/>a1,<sp/>a2,<sp/>a3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal">slice_ty<sp/>_Py_Slice(expr_ty<sp/>lower,<sp/>expr_ty<sp/>upper,<sp/>expr_ty<sp/>step,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ExtSlice(a0,<sp/>a1)<sp/>_Py_ExtSlice(a0,<sp/>a1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal">slice_ty<sp/>_Py_ExtSlice(<ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>dims,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Index(a0,<sp/>a1)<sp/>_Py_Index(a0,<sp/>a1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal">slice_ty<sp/>_Py_Index(expr_ty<sp/>value,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>comprehension(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>_Py_comprehension(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal">comprehension_ty<sp/>_Py_comprehension(expr_ty<sp/>target,<sp/>expr_ty<sp/>iter,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_async,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ExceptHandler(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)<sp/>_Py_ExceptHandler(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal">excepthandler_ty<sp/>_Py_ExceptHandler(expr_ty<sp/>type,<sp/><ref refid="struct__object" kindref="compound">identifier</ref><sp/>name,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>body,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,<sp/>PyArena</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arena);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arguments(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6)<sp/>_Py_arguments(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4,<sp/>a5,<sp/>a6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal">arguments_ty<sp/>_Py_arguments(<ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>args,<sp/>arg_ty<sp/>vararg,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwonlyargs,<sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>kw_defaults,<sp/>arg_ty<sp/>kwarg,</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structasdl__seq" kindref="compound">asdl_seq</ref><sp/>*<sp/>defaults,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arg(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)<sp/>_Py_arg(a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal">arg_ty<sp/>_Py_arg(<ref refid="struct__object" kindref="compound">identifier</ref><sp/>arg,<sp/>expr_ty<sp/>annotation,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_offset,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>keyword(a0,<sp/>a1,<sp/>a2)<sp/>_Py_keyword(a0,<sp/>a1,<sp/>a2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal">keyword_ty<sp/>_Py_keyword(<ref refid="struct__object" kindref="compound">identifier</ref><sp/>arg,<sp/>expr_ty<sp/>value,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>alias(a0,<sp/>a1,<sp/>a2)<sp/>_Py_alias(a0,<sp/>a1,<sp/>a2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal">alias_ty<sp/>_Py_alias(<ref refid="struct__object" kindref="compound">identifier</ref><sp/>name,<sp/><ref refid="struct__object" kindref="compound">identifier</ref><sp/>asname,<sp/>PyArena<sp/>*arena);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>withitem(a0,<sp/>a1,<sp/>a2)<sp/>_Py_withitem(a0,<sp/>a1,<sp/>a2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal">withitem_ty<sp/>_Py_withitem(expr_ty<sp/>context_expr,<sp/>expr_ty<sp/>optional_vars,<sp/>PyArena</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arena);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><ref refid="struct__object" kindref="compound">PyObject</ref>*<sp/>PyAST_mod2obj(mod_ty<sp/>t);</highlight></codeline>
<codeline lineno="636"><highlight class="normal">mod_ty<sp/>PyAST_obj2mod(<ref refid="struct__object" kindref="compound">PyObject</ref>*<sp/>ast,<sp/>PyArena*<sp/>arena,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PyAST_Check(<ref refid="struct__object" kindref="compound">PyObject</ref>*<sp/>obj);</highlight></codeline>
    </programlisting>
    <location file="/usr/include/python3.6m/Python-ast.h"/>
  </compounddef>
</doxygen>
