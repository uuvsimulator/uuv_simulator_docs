<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="accu_8h" kind="file" language="C++">
    <compoundname>accu.h</compoundname>
    <innerclass refid="struct___py_accu" prot="public">_PyAccu</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="accu_8h_1ab48492b78aa6ac6655f02de90be5741a" prot="public" static="no" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>PyObject* unicode</definition>
        <argsstring></argsstring>
        <name>unicode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/accu.h" line="27" column="1" bodyfile="/usr/include/python3.6m/accu.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="accu_8h_1a00600622a6ec783bf04e0a6ade614966" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(int) _PyAccu_Init(_PyAccu *acc)</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/accu.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="accu_8h_1a3ade3395894ea8ba564d098c4b21dd08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(PyObject *) _PyAccu_FinishAsList(_PyAccu *acc)</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/accu.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="accu_8h_1aacecada9581f43fb4b46cb4c17eee183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(void) _PyAccu_Destroy(_PyAccu *acc)</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/accu.h" line="30" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_ACCU_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_ACCU_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/***<sp/>This<sp/>is<sp/>a<sp/>private<sp/>API<sp/>for<sp/>use<sp/>by<sp/>the<sp/>interpreter<sp/>and<sp/>the<sp/>stdlib.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>***<sp/>Its<sp/>definition<sp/>may<sp/>be<sp/>changed<sp/>or<sp/>removed<sp/>at<sp/>any<sp/>moment.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>***/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>A<sp/>two-level<sp/>accumulator<sp/>of<sp/>unicode<sp/>objects<sp/>that<sp/>avoids<sp/>both<sp/>the<sp/>overhead</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>of<sp/>keeping<sp/>a<sp/>huge<sp/>number<sp/>of<sp/>small<sp/>separate<sp/>objects,<sp/>and<sp/>the<sp/>quadratic</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>behaviour<sp/>of<sp/>using<sp/>a<sp/>naive<sp/>repeated<sp/>concatenation<sp/>scheme.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>small<sp/></highlight><highlight class="comment">/*<sp/>defined<sp/>by<sp/>some<sp/>Windows<sp/>headers<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="struct___py_accu" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*large;<sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>list<sp/>of<sp/>previously<sp/>accumulated<sp/>large<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*small;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Pending<sp/>small<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">}<sp/><ref refid="struct___py_accu" kindref="compound">_PyAccu</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>_PyAccu_Init(<ref refid="struct___py_accu" kindref="compound">_PyAccu</ref><sp/>*acc);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>_PyAccu_Accumulate(<ref refid="struct___py_accu" kindref="compound">_PyAccu</ref><sp/>*acc,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*unicode);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>_PyAccu_FinishAsList(<ref refid="struct___py_accu" kindref="compound">_PyAccu</ref><sp/>*acc);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>_PyAccu_Finish(<ref refid="struct___py_accu" kindref="compound">_PyAccu</ref><sp/>*acc);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>_PyAccu_Destroy(<ref refid="struct___py_accu" kindref="compound">_PyAccu</ref><sp/>*acc);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>Py_ACCU_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>Py_LIMITED_API<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/usr/include/python3.6m/accu.h"/>
  </compounddef>
</doxygen>
