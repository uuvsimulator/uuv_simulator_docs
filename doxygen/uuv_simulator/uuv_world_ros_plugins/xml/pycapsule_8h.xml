<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pycapsule_8h" kind="file" language="C++">
    <compoundname>pycapsule.h</compoundname>
    <includedby refid="_python_8h" local="yes">/usr/include/python3.6m/Python.h</includedby>
    <invincdepgraph>
      <node id="3428">
        <label>/usr/include/python3.6m/Imaging.h</label>
        <link refid="_imaging_8h_source"/>
      </node>
      <node id="3429">
        <label>/usr/include/python3.6m/pgenheaders.h</label>
        <link refid="pgenheaders_8h_source"/>
      </node>
      <node id="3431">
        <label>venv/lib/python3.6/site-packages/lxml/includes/etree_defs.h</label>
        <link refid="etree__defs_8h_source"/>
      </node>
      <node id="3425">
        <label>/usr/include/python3.6m/pycapsule.h</label>
        <link refid="pycapsule_8h"/>
        <childnode refid="3426" relation="include">
        </childnode>
      </node>
      <node id="3426">
        <label>/usr/include/python3.6m/Python.h</label>
        <link refid="_python_8h_source"/>
        <childnode refid="3427" relation="include">
        </childnode>
        <childnode refid="3429" relation="include">
        </childnode>
        <childnode refid="3430" relation="include">
        </childnode>
        <childnode refid="3431" relation="include">
        </childnode>
        <childnode refid="3432" relation="include">
        </childnode>
      </node>
      <node id="3432">
        <label>venv/lib/python3.6/site-packages/lxml/lxml.etree_api.h</label>
        <link refid="lxml_8etree__api_8h_source"/>
      </node>
      <node id="3427">
        <label>/usr/include/python3.6m/ImPlatform.h</label>
        <link refid="_im_platform_8h_source"/>
        <childnode refid="3428" relation="include">
        </childnode>
      </node>
      <node id="3430">
        <label>venv/lib/python3.6/site-packages/lxml/etree_api.h</label>
        <link refid="etree__api_8h_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="pycapsule_8h_1acbffed1d41d81024db5942a436f1e161" prot="public" static="no">
        <name>PyCapsule_CheckExact</name>
        <param><defname>op</defname></param>
        <initializer>(Py_TYPE(op) == &amp;PyCapsule_Type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pycapsule.h" line="25" column="9" bodyfile="/usr/include/python3.6m/pycapsule.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pycapsule_8h_1ab17d45d94d40b76402a2bd446311ccf4" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* PyCapsule_Destructor) (PyObject *)</definition>
        <argsstring>)(PyObject *)</argsstring>
        <name>PyCapsule_Destructor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pycapsule.h" line="23" column="1" bodyfile="/usr/include/python3.6m/pycapsule.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pycapsule_8h_1a8f8f80d37794cde9472343e4487ba3eb" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pycapsule.h" line="30" column="1" bodyfile="/usr/include/python3.6m/pycapsule.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pycapsule_8h_1a51509651aa95ca080a474808eb5c8544" prot="public" static="no" mutable="no">
        <type>const char PyCapsule_Destructor</type>
        <definition>PyCapsule_Destructor destructor</definition>
        <argsstring></argsstring>
        <name>destructor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pycapsule.h" line="31" column="1" bodyfile="/usr/include/python3.6m/pycapsule.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pycapsule_8h_1abc7cbbec1f024bd23164936bd765b06d" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pycapsule.h" line="43" column="1" bodyfile="/usr/include/python3.6m/pycapsule.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pycapsule_8h_1ae376f130b17d169ee51be68077a89ed0" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* context</definition>
        <argsstring></argsstring>
        <name>context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pycapsule.h" line="49" column="1" bodyfile="/usr/include/python3.6m/pycapsule.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pycapsule_8h_1ad04becfd6db580ae3e20671649d8416b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int no_block</definition>
        <argsstring></argsstring>
        <name>no_block</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pycapsule.h" line="53" column="1" bodyfile="/usr/include/python3.6m/pycapsule.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pycapsule_8h_1a9a9acc24334b921f57782b958056ead8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_DATA</definition>
        <argsstring>(PyTypeObject) PyCapsule_Type</argsstring>
        <name>PyAPI_DATA</name>
        <param>
          <type><ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pycapsule.h" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pycapsule_8h_1a8df5cf121438b486df59935137f18798" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(PyObject *) PyCapsule_New(void *pointer</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pycapsule.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pycapsule_8h_1a72a61cc81fec175372e87667059d765f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(void *) PyCapsule_GetPointer(PyObject *capsule</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pycapsule.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pycapsule_8h_1ac108e8d7041bd147d3ad1a75cf2cbc52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(PyCapsule_Destructor) PyCapsule_GetDestructor(PyObject *capsule)</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type>PyCapsule_Destructor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pycapsule.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pycapsule_8h_1acb181c09834e4ee218b6f51807420097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(const char *) PyCapsule_GetName(PyObject *capsule)</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pycapsule.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pycapsule_8h_1af94b13c26574343a7d12880171e5351a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(int) PyCapsule_IsValid(PyObject *capsule</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/pycapsule.h" line="41" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Capsule<sp/>objects<sp/>let<sp/>you<sp/>wrap<sp/>a<sp/>C<sp/>&quot;void<sp/>*&quot;<sp/>pointer<sp/>in<sp/>a<sp/>Python</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>object.<sp/><sp/>They&apos;re<sp/>a<sp/>way<sp/>of<sp/>passing<sp/>data<sp/>through<sp/>the<sp/>Python<sp/>interpreter</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>without<sp/>creating<sp/>your<sp/>own<sp/>custom<sp/>type.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/>Capsules<sp/>are<sp/>used<sp/>for<sp/>communication<sp/>between<sp/>extension<sp/>modules.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>They<sp/>provide<sp/>a<sp/>way<sp/>for<sp/>an<sp/>extension<sp/>module<sp/>to<sp/>export<sp/>a<sp/>C<sp/>interface</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/>to<sp/>other<sp/>extension<sp/>modules,<sp/>so<sp/>that<sp/>extension<sp/>modules<sp/>can<sp/>use<sp/>the</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>Python<sp/>import<sp/>mechanism<sp/>to<sp/>link<sp/>to<sp/>one<sp/>another.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/>For<sp/>more<sp/>information,<sp/>please<sp/>see<sp/>&quot;c-api/capsule.html&quot;<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/>documentation.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_CAPSULE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_CAPSULE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">PyAPI_DATA(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref>)<sp/>PyCapsule_Type;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*PyCapsule_Destructor)(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PyCapsule_CheckExact(op)<sp/>(Py_TYPE(op)<sp/>==<sp/>&amp;PyCapsule_Type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PyCapsule_New(</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pointer,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>PyCapsule_Destructor<sp/>destructor);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>PyCapsule_GetPointer(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*capsule,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">PyAPI_FUNC(PyCapsule_Destructor)<sp/>PyCapsule_GetDestructor(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*capsule);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>PyCapsule_GetName(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*capsule);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>PyCapsule_GetContext(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*capsule);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>PyCapsule_IsValid(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*capsule,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>PyCapsule_SetPointer(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*capsule,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pointer);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>PyCapsule_SetDestructor(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*capsule,<sp/>PyCapsule_Destructor<sp/>destructor);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>PyCapsule_SetName(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*capsule,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>PyCapsule_SetContext(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*capsule,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>PyCapsule_Import(</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UTF-8<sp/>encoded<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>no_block);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!Py_CAPSULE_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/usr/include/python3.6m/pycapsule.h"/>
  </compounddef>
</doxygen>
