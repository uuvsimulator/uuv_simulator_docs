<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_underwater_current_r_o_s_plugin_8cc" kind="file" language="C++">
    <compoundname>UnderwaterCurrentROSPlugin.cc</compoundname>
    <includes refid="_underwater_current_r_o_s_plugin_8hh" local="no">uuv_world_ros_plugins/UnderwaterCurrentROSPlugin.hh</includes>
    <incdepgraph>
      <node id="54">
        <label>gazebo/common/Plugin.hh</label>
      </node>
      <node id="61">
        <label>uuv_world_ros_plugins_msgs/SetCurrentDirection.h</label>
      </node>
      <node id="63">
        <label>uuv_world_ros_plugins_msgs/GetOriginSphericalCoord.h</label>
      </node>
      <node id="49">
        <label>uuv_world_ros_plugins/UnderwaterCurrentROSPlugin.hh</label>
        <link refid="_underwater_current_r_o_s_plugin_8hh"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>string</label>
      </node>
      <node id="50">
        <label>map</label>
      </node>
      <node id="48">
        <label>/home/musamorena/catkin_ws/src/uuv_simulator/uuv_world_plugins/uuv_world_ros_plugins/src/UnderwaterCurrentROSPlugin.cc</label>
        <link refid="_underwater_current_r_o_s_plugin_8cc"/>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>uuv_world_ros_plugins_msgs/SetOriginSphericalCoord.h</label>
      </node>
      <node id="56">
        <label>ros/ros.h</label>
      </node>
      <node id="53">
        <label>boost/scoped_ptr.hpp</label>
      </node>
      <node id="59">
        <label>uuv_world_ros_plugins_msgs/GetCurrentModel.h</label>
      </node>
      <node id="60">
        <label>uuv_world_ros_plugins_msgs/SetCurrentVelocity.h</label>
      </node>
      <node id="58">
        <label>uuv_world_ros_plugins_msgs/SetCurrentModel.h</label>
      </node>
      <node id="52">
        <label>uuv_world_plugins/UnderwaterCurrentPlugin.hh</label>
      </node>
      <node id="57">
        <label>geometry_msgs/TwistStamped.h</label>
      </node>
      <node id="55">
        <label>gazebo/physics/World.hh</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceuuv__simulator__ros">uuv_simulator_ros</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2016<sp/>The<sp/>UUV<sp/>Simulator<sp/>Authors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_underwater_current_r_o_s_plugin_8hh" kindref="compound">uuv_world_ros_plugins/UnderwaterCurrentROSPlugin.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceuuv__simulator__ros" kindref="compound">uuv_simulator_ros</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1a495903eb436982545dffaaf2ef685877" kindref="member">UnderwaterCurrentROSPlugin::UnderwaterCurrentROSPlugin</ref>()</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>this-&gt;rosPublishPeriod<sp/>=<sp/>gazebo::common::Time(0.05);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>this-&gt;lastRosPublishTime<sp/>=<sp/>gazebo::common::Time(0.0);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1a144781a36c5f5df6f71ffc43fc0a8eb1" kindref="member">UnderwaterCurrentROSPlugin::~UnderwaterCurrentROSPlugin</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>this-&gt;rosPublishConnection.reset();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>gazebo::event::Events::DisconnectWorldUpdateBegin(</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosPublishConnection);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>this-&gt;rosNode-&gt;shutdown();</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1a1a5b927b9afa3ad9e0ec3f37e47e4f67" kindref="member">UnderwaterCurrentROSPlugin::Load</ref>(gazebo::physics::WorldPtr<sp/>_world,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>sdf::ElementPtr<sp/>_sdf)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>UnderwaterCurrentPlugin::Load(_world,<sp/>_sdf);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(gazebo::common::Exception<sp/>&amp;_e)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>gzerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>loading<sp/>plugin.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>ensure<sp/>that<sp/>your<sp/>model<sp/>is<sp/>correct.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ros::isInitialized())</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>gzerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>loading<sp/>plugin<sp/>since<sp/>ROS<sp/>has<sp/>not<sp/>been<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;properly<sp/>initialized.<sp/><sp/>Try<sp/>starting<sp/>gazebo<sp/>with<sp/>ros<sp/>plugin:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>gazebo<sp/>-s<sp/>libgazebo_ros_api_plugin.so\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>this-&gt;ns<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;namespace&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ns<sp/>=<sp/>_sdf-&gt;Get&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;namespace&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;UnderwaterCurrentROSPlugin::namespace=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;ns<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>this-&gt;rosNode.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ros::NodeHandle(this-&gt;ns));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Advertise<sp/>the<sp/>flow<sp/>velocity<sp/>as<sp/>a<sp/>stamped<sp/>twist<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>this-&gt;flowVelocityPub<sp/>=<sp/>this-&gt;rosNode-&gt;advertise&lt;geometry_msgs::TwistStamped&gt;(</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;currentVelocityTopic,<sp/>10);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Advertise<sp/>the<sp/>service<sp/>to<sp/>update<sp/>the<sp/>current<sp/>velocity<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>this-&gt;worldServices[</highlight><highlight class="stringliteral">&quot;set_current_velocity_model&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;set_current_velocity_model&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1a703a1f33b7ba4a12bc337d01c923050c" kindref="member">UnderwaterCurrentROSPlugin::UpdateCurrentVelocityModel</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Advertise<sp/>the<sp/>service<sp/>to<sp/>update<sp/>the<sp/>current<sp/>velocity<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>this-&gt;worldServices[</highlight><highlight class="stringliteral">&quot;get_current_velocity_model&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;get_current_velocity_model&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1a0063203dbdd0ff00cc0b9dd36cb6c203" kindref="member">UnderwaterCurrentROSPlugin::GetCurrentVelocityModel</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Advertise<sp/>the<sp/>service<sp/>to<sp/>update<sp/>the<sp/>current<sp/>velocity<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>this-&gt;worldServices[</highlight><highlight class="stringliteral">&quot;set_current_horz_angle_model&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;set_current_horz_angle_model&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1aa023f81b677c1599224b5cb61d2a998c" kindref="member">UnderwaterCurrentROSPlugin::UpdateCurrentHorzAngleModel</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Advertise<sp/>the<sp/>service<sp/>to<sp/>update<sp/>the<sp/>current<sp/>velocity<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>this-&gt;worldServices[</highlight><highlight class="stringliteral">&quot;get_current_horz_angle_model&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;get_current_horz_angle_model&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1ac122dcc0b978614443ae85a7cf3e071c" kindref="member">UnderwaterCurrentROSPlugin::GetCurrentHorzAngleModel</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Advertise<sp/>the<sp/>service<sp/>to<sp/>update<sp/>the<sp/>current<sp/>velocity<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>this-&gt;worldServices[</highlight><highlight class="stringliteral">&quot;set_current_vert_angle_model&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;set_current_vert_angle_model&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1a027e73b225b807cb2dc75baf1de9ec8c" kindref="member">UnderwaterCurrentROSPlugin::UpdateCurrentVertAngleModel</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Advertise<sp/>the<sp/>service<sp/>to<sp/>update<sp/>the<sp/>current<sp/>velocity<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>this-&gt;worldServices[</highlight><highlight class="stringliteral">&quot;get_current_vert_angle_model&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;get_current_vert_angle_model&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1ac122dcc0b978614443ae85a7cf3e071c" kindref="member">UnderwaterCurrentROSPlugin::GetCurrentHorzAngleModel</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Advertise<sp/>the<sp/>service<sp/>to<sp/>update<sp/>the<sp/>current<sp/>velocity<sp/>mean<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>this-&gt;worldServices[</highlight><highlight class="stringliteral">&quot;set_current_velocity&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;set_current_velocity&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1a77152a67d11a9185b0caf2455afd5ce0" kindref="member">UnderwaterCurrentROSPlugin::UpdateCurrentVelocity</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Advertise<sp/>the<sp/>service<sp/>to<sp/>update<sp/>the<sp/>current<sp/>velocity<sp/>mean<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>this-&gt;worldServices[</highlight><highlight class="stringliteral">&quot;set_current_horz_angle&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;set_current_horz_angle&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1ac0970ebff612f9682e833ad289698845" kindref="member">UnderwaterCurrentROSPlugin::UpdateHorzAngle</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Advertise<sp/>the<sp/>service<sp/>to<sp/>update<sp/>the<sp/>current<sp/>velocity<sp/>mean<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>this-&gt;worldServices[</highlight><highlight class="stringliteral">&quot;set_current_vert_angle&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;set_current_vert_angle&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1ac1eabcb153dd2252519826766ac68252" kindref="member">UnderwaterCurrentROSPlugin::UpdateVertAngle</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>this-&gt;rosPublishConnection<sp/>=<sp/>gazebo::event::Events::ConnectWorldUpdateBegin(</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::bind(&amp;UnderwaterCurrentROSPlugin::OnUpdateCurrentVel,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnderwaterCurrentROSPlugin::OnUpdateCurrentVel()</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;lastUpdate<sp/>-<sp/>this-&gt;lastRosPublishTime<sp/>&gt;=<sp/>this-&gt;rosPublishPeriod)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;lastRosPublishTime<sp/>=<sp/>this-&gt;lastUpdate;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::TwistStamped<sp/>flowVelMsg;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>flowVelMsg.header.stamp<sp/>=<sp/>ros::Time().now();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>flowVelMsg.header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/world&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>flowVelMsg.twist.linear.x<sp/>=<sp/>this-&gt;currentVelocity.X();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>flowVelMsg.twist.linear.y<sp/>=<sp/>this-&gt;currentVelocity.Y();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>flowVelMsg.twist.linear.z<sp/>=<sp/>this-&gt;currentVelocity.Z();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;flowVelocityPub.publish(flowVelMsg);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1ac0970ebff612f9682e833ad289698845" kindref="member">UnderwaterCurrentROSPlugin::UpdateHorzAngle</ref>(</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_world_ros_plugins_msgs::SetCurrentDirection::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_world_ros_plugins_msgs::SetCurrentDirection::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>_res.success<sp/>=<sp/>this-&gt;currentHorzAngleModel.SetMean(_req.angle);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1ac1eabcb153dd2252519826766ac68252" kindref="member">UnderwaterCurrentROSPlugin::UpdateVertAngle</ref>(</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_world_ros_plugins_msgs::SetCurrentDirection::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_world_ros_plugins_msgs::SetCurrentDirection::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>_res.success<sp/>=<sp/>this-&gt;currentVertAngleModel.SetMean(_req.angle);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1a77152a67d11a9185b0caf2455afd5ce0" kindref="member">UnderwaterCurrentROSPlugin::UpdateCurrentVelocity</ref>(</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_world_ros_plugins_msgs::SetCurrentVelocity::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_world_ros_plugins_msgs::SetCurrentVelocity::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;currentVelModel.SetMean(_req.velocity)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;currentHorzAngleModel.SetMean(_req.horizontal_angle)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;currentVertAngleModel.SetMean(_req.vertical_angle))</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Current<sp/>velocity<sp/>[m/s]<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_req.velocity<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Current<sp/>horizontal<sp/>angle<sp/>[rad]<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_req.horizontal_angle</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Current<sp/>vertical<sp/>angle<sp/>[rad]<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_req.vertical_angle</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tWARNING:<sp/>Current<sp/>velocity<sp/>calculated<sp/>in<sp/>the<sp/>ENU<sp/>frame&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>while<sp/>updating<sp/>the<sp/>current<sp/>velocity&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1a0063203dbdd0ff00cc0b9dd36cb6c203" kindref="member">UnderwaterCurrentROSPlugin::GetCurrentVelocityModel</ref>(</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_world_ros_plugins_msgs::GetCurrentModel::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_world_ros_plugins_msgs::GetCurrentModel::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>_res.mean<sp/>=<sp/>this-&gt;currentVelModel.mean;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>_res.min<sp/>=<sp/>this-&gt;currentVelModel.min;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>_res.max<sp/>=<sp/>this-&gt;currentVelModel.max;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>_res.noise<sp/>=<sp/>this-&gt;currentVelModel.noiseAmp;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>_res.mu<sp/>=<sp/>this-&gt;currentVelModel.mu;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1ac122dcc0b978614443ae85a7cf3e071c" kindref="member">UnderwaterCurrentROSPlugin::GetCurrentHorzAngleModel</ref>(</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_world_ros_plugins_msgs::GetCurrentModel::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_world_ros_plugins_msgs::GetCurrentModel::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>_res.mean<sp/>=<sp/>this-&gt;currentHorzAngleModel.mean;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>_res.min<sp/>=<sp/>this-&gt;currentHorzAngleModel.min;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>_res.max<sp/>=<sp/>this-&gt;currentHorzAngleModel.max;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>_res.noise<sp/>=<sp/>this-&gt;currentHorzAngleModel.noiseAmp;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>_res.mu<sp/>=<sp/>this-&gt;currentHorzAngleModel.mu;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1a6ca3823687f0c1bf3cf7b32cc9e7f438" kindref="member">UnderwaterCurrentROSPlugin::GetCurrentVertAngleModel</ref>(</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_world_ros_plugins_msgs::GetCurrentModel::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_world_ros_plugins_msgs::GetCurrentModel::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>_res.mean<sp/>=<sp/>this-&gt;currentVertAngleModel.mean;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>_res.min<sp/>=<sp/>this-&gt;currentVertAngleModel.min;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>_res.max<sp/>=<sp/>this-&gt;currentVertAngleModel.max;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>_res.noise<sp/>=<sp/>this-&gt;currentVertAngleModel.noiseAmp;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>_res.mu<sp/>=<sp/>this-&gt;currentVertAngleModel.mu;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1a703a1f33b7ba4a12bc337d01c923050c" kindref="member">UnderwaterCurrentROSPlugin::UpdateCurrentVelocityModel</ref>(</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_world_ros_plugins_msgs::SetCurrentModel::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_world_ros_plugins_msgs::SetCurrentModel::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>_res.success<sp/>=<sp/>this-&gt;currentVelModel.SetModel(</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>std::max(0.0,<sp/>_req.mean),</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>std::max(0.0,<sp/>_req.min),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>std::max(0.0,<sp/>_req.max),</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>_req.mu,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>_req.noise);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Current<sp/>velocity<sp/>model<sp/>updated&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tWARNING:<sp/>Current<sp/>velocity<sp/>calculated<sp/>in<sp/>the<sp/>ENU<sp/>frame&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>this-&gt;currentVelModel.Print();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1aa023f81b677c1599224b5cb61d2a998c" kindref="member">UnderwaterCurrentROSPlugin::UpdateCurrentHorzAngleModel</ref>(</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_world_ros_plugins_msgs::SetCurrentModel::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_world_ros_plugins_msgs::SetCurrentModel::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>_res.success<sp/>=<sp/>this-&gt;currentHorzAngleModel.SetModel(_req.mean,<sp/>_req.min,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>_req.max,<sp/>_req.mu,<sp/>_req.noise);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Horizontal<sp/>angle<sp/>model<sp/>updated&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tWARNING:<sp/>Current<sp/>velocity<sp/>calculated<sp/>in<sp/>the<sp/>ENU<sp/>frame&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>this-&gt;currentHorzAngleModel.Print();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1a027e73b225b807cb2dc75baf1de9ec8c" kindref="member">UnderwaterCurrentROSPlugin::UpdateCurrentVertAngleModel</ref>(</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_world_ros_plugins_msgs::SetCurrentModel::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_world_ros_plugins_msgs::SetCurrentModel::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>_res.success<sp/>=<sp/>this-&gt;currentVertAngleModel.SetModel(_req.mean,<sp/>_req.min,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>_req.max,<sp/>_req.mu,<sp/>_req.noise);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Vertical<sp/>angle<sp/>model<sp/>updated&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tWARNING:<sp/>Current<sp/>velocity<sp/>calculated<sp/>in<sp/>the<sp/>ENU<sp/>frame&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>this-&gt;currentVertAngleModel.Print();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal">GZ_REGISTER_WORLD_PLUGIN(<ref refid="classuuv__simulator__ros_1_1_underwater_current_r_o_s_plugin_1a495903eb436982545dffaaf2ef685877" kindref="member">UnderwaterCurrentROSPlugin</ref>)</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/musamorena/catkin_ws/src/uuv_simulator/uuv_world_plugins/uuv_world_ros_plugins/src/UnderwaterCurrentROSPlugin.cc"/>
  </compounddef>
</doxygen>
