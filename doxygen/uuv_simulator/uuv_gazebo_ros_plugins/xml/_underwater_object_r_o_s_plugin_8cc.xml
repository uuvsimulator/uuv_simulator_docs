<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_underwater_object_r_o_s_plugin_8cc" kind="file" language="C++">
    <compoundname>UnderwaterObjectROSPlugin.cc</compoundname>
    <includes refid="_underwater_object_r_o_s_plugin_8hh" local="no">uuv_gazebo_ros_plugins/UnderwaterObjectROSPlugin.hh</includes>
    <includes local="no">gazebo/physics/Base.hh</includes>
    <includes local="no">gazebo/physics/Model.hh</includes>
    <includes local="no">gazebo/physics/World.hh</includes>
    <includes local="no">gazebo/physics/Link.hh</includes>
    <incdepgraph>
      <node id="194">
        <label>geometry_msgs/WrenchStamped.h</label>
      </node>
      <node id="192">
        <label>gazebo/common/Plugin.hh</label>
      </node>
      <node id="196">
        <label>std_msgs/Bool.h</label>
      </node>
      <node id="186">
        <label>/home/musamorena/catkin_ws/src/uuv_simulator/uuv_gazebo_plugins/uuv_gazebo_ros_plugins/src/UnderwaterObjectROSPlugin.cc</label>
        <link refid="_underwater_object_r_o_s_plugin_8cc"/>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
      </node>
      <node id="188">
        <label>string</label>
      </node>
      <node id="189">
        <label>uuv_gazebo_plugins/UnderwaterObjectPlugin.hh</label>
      </node>
      <node id="206">
        <label>map</label>
      </node>
      <node id="191">
        <label>gazebo/gazebo.hh</label>
      </node>
      <node id="195">
        <label>geometry_msgs/Vector3.h</label>
      </node>
      <node id="197">
        <label>visualization_msgs/Marker.h</label>
      </node>
      <node id="203">
        <label>geometry_msgs/TransformStamped.h</label>
      </node>
      <node id="207">
        <label>gazebo/physics/Base.hh</label>
      </node>
      <node id="198">
        <label>uuv_gazebo_ros_plugins_msgs/SetUseGlobalCurrentVel.h</label>
      </node>
      <node id="193">
        <label>ros/ros.h</label>
      </node>
      <node id="201">
        <label>uuv_gazebo_ros_plugins_msgs/SetFloat.h</label>
      </node>
      <node id="190">
        <label>boost/scoped_ptr.hpp</label>
      </node>
      <node id="208">
        <label>gazebo/physics/Model.hh</label>
      </node>
      <node id="205">
        <label>tf2/LinearMath/Quaternion.h</label>
      </node>
      <node id="202">
        <label>uuv_gazebo_ros_plugins_msgs/GetFloat.h</label>
      </node>
      <node id="204">
        <label>tf2_ros/transform_broadcaster.h</label>
      </node>
      <node id="210">
        <label>gazebo/physics/Link.hh</label>
      </node>
      <node id="200">
        <label>uuv_gazebo_ros_plugins_msgs/GetModelProperties.h</label>
      </node>
      <node id="187">
        <label>uuv_gazebo_ros_plugins/UnderwaterObjectROSPlugin.hh</label>
        <link refid="_underwater_object_r_o_s_plugin_8hh"/>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
      </node>
      <node id="199">
        <label>uuv_gazebo_ros_plugins_msgs/UnderwaterObjectModel.h</label>
      </node>
      <node id="209">
        <label>gazebo/physics/World.hh</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceuuv__simulator__ros">uuv_simulator_ros</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2016<sp/>The<sp/>UUV<sp/>Simulator<sp/>Authors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_underwater_object_r_o_s_plugin_8hh" kindref="compound">uuv_gazebo_ros_plugins/UnderwaterObjectROSPlugin.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/Base.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/Model.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/World.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/Link.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceuuv__simulator__ros" kindref="compound">uuv_simulator_ros</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a6d26a8a5c08e79c0a149a07cf61209e0" kindref="member">UnderwaterObjectROSPlugin::UnderwaterObjectROSPlugin</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1ae1eb17f91cb1383400138b6ef241a06f" kindref="member">UnderwaterObjectROSPlugin::~UnderwaterObjectROSPlugin</ref>()</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>this-&gt;rosNode-&gt;shutdown();</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a86c5be6309611c623757fca4565051c9" kindref="member">UnderwaterObjectROSPlugin::Load</ref>(gazebo::physics::ModelPtr<sp/>_parent,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdf::ElementPtr<sp/>_sdf)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ros::isInitialized())</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>gzerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>loading<sp/>plugin<sp/>since<sp/>ROS<sp/>has<sp/>not<sp/>been<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;properly<sp/>initialized.<sp/><sp/>Try<sp/>starting<sp/>gazebo<sp/>with<sp/>ros<sp/>plugin:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>gazebo<sp/>-s<sp/>libgazebo_ros_api_plugin.so\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>this-&gt;rosNode.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ros::NodeHandle(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>UnderwaterObjectPlugin::Load(_parent,<sp/>_sdf);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(gazebo::common::Exception<sp/>&amp;_e)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>gzerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>loading<sp/>plugin.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>ensure<sp/>that<sp/>your<sp/>model<sp/>is<sp/>correct.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>this-&gt;subLocalCurVel<sp/>=<sp/>this-&gt;rosNode-&gt;subscribe&lt;geometry_msgs::Vector3&gt;(</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/current_velocity&quot;</highlight><highlight class="normal">,<sp/>10,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::bind(&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a8796c2736835dc203cb7f9c7e84a923e" kindref="member">UnderwaterObjectROSPlugin::UpdateLocalCurrentVelocity</ref>,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;set_use_global_current_velocity&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/set_use_global_current_velocity&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a038402f422a3940e426eec798f6a0d39" kindref="member">UnderwaterObjectROSPlugin::SetUseGlobalCurrentVel</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;set_added_mass_scaling&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/set_added_mass_scaling&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a5d6cd010fa2f18ae91147c03ee9d1408" kindref="member">UnderwaterObjectROSPlugin::SetScalingAddedMass</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;get_added_mass_scaling&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/get_added_mass_scaling&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1ad8ee29496336a958fa59c6fc35026729" kindref="member">UnderwaterObjectROSPlugin::GetScalingAddedMass</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;set_damping_scaling&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/set_damping_scaling&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a67861c1e99ee10a9c64f96d6401b221d" kindref="member">UnderwaterObjectROSPlugin::SetScalingDamping</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;get_damping_scaling&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/get_damping_scaling&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1adc480b2b52d0da8a9c1d1b700d7bacd6" kindref="member">UnderwaterObjectROSPlugin::GetScalingDamping</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;set_volume_scaling&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/set_volume_scaling&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a2569924791d708d8d879c0fec853b5f4" kindref="member">UnderwaterObjectROSPlugin::SetScalingVolume</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;get_volume_scaling&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/get_volume_scaling&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a9eb2881a288725f83c9924b7be498c81" kindref="member">UnderwaterObjectROSPlugin::GetScalingVolume</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;set_fluid_density&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/set_fluid_density&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1ac254edcbd59acb26fd70b70acad679c9" kindref="member">UnderwaterObjectROSPlugin::SetFluidDensity</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;get_fluid_density&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/get_fluid_density&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a92c568850087edd355359e967f42d966" kindref="member">UnderwaterObjectROSPlugin::GetFluidDensity</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;set_volume_offset&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/set_volume_offset&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a473e7dae4ba36e061389cf4d193ce80d" kindref="member">UnderwaterObjectROSPlugin::SetOffsetVolume</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;get_volume_offset&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/get_volume_offset&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a70d64b6da3a18257bb1b4b1edc9afb3b" kindref="member">UnderwaterObjectROSPlugin::GetOffsetVolume</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;set_added_mass_offset&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/set_added_mass_offset&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1ae062c4867e24ba3daf56032728fb3e9a" kindref="member">UnderwaterObjectROSPlugin::SetOffsetAddedMass</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;get_added_mass_offset&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/get_added_mass_offset&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a317123306ae032c3cfb408553ed0706c" kindref="member">UnderwaterObjectROSPlugin::GetOffsetAddedMass</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;set_linear_damping_offset&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/set_linear_damping_offset&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a9b3127ae45a4972927bd7becc61a4cf4" kindref="member">UnderwaterObjectROSPlugin::SetOffsetLinearDamping</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;get_linear_damping_offset&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/get_linear_damping_offset&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a979a847fb03c318d23809ef7e516f980" kindref="member">UnderwaterObjectROSPlugin::GetOffsetLinearDamping</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;set_linear_forward_speed_damping_offset&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/set_linear_forward_speed_damping_offset&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a85a1221c40202088731e56f1d7736bf1" kindref="member">UnderwaterObjectROSPlugin::SetOffsetLinearForwardSpeedDamping</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;get_linear_forward_speed_damping_offset&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/get_linear_forward_speed_damping_offset&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a8c63d709fc992f899ffbe1eced7b6cd8" kindref="member">UnderwaterObjectROSPlugin::GetOffsetLinearForwardSpeedDamping</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;set_nonlinear_damping_offset&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/set_nonlinear_damping_offset&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a972ab56e380c00dcc489c0d9e9a4d0de" kindref="member">UnderwaterObjectROSPlugin::SetOffsetNonLinearDamping</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;get_nonlinear_damping_offset&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/get_nonlinear_damping_offset&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1abc734c754de497bf62b13de980649f70" kindref="member">UnderwaterObjectROSPlugin::GetOffsetNonLinearDamping</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;get_model_properties&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/get_model_properties&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a36c121c67de5ba30cd0770fc9b60ea26" kindref="member">UnderwaterObjectROSPlugin::GetModelProperties</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>this-&gt;rosHydroPub[</highlight><highlight class="stringliteral">&quot;current_velocity_marker&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertise&lt;visualization_msgs::Marker&gt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>(_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/current_velocity_marker&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>this-&gt;rosHydroPub[</highlight><highlight class="stringliteral">&quot;using_global_current_velocity&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertise&lt;std_msgs::Bool&gt;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>(_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/using_global_current_velocity&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>this-&gt;rosHydroPub[</highlight><highlight class="stringliteral">&quot;is_submerged&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertise&lt;std_msgs::Bool&gt;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>(_parent-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/is_submerged&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>this-&gt;nedTransform.header.frame_id<sp/>=<sp/>this-&gt;model-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/base_link&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>this-&gt;nedTransform.child_frame_id<sp/>=<sp/>this-&gt;model-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/base_link_ned&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>this-&gt;nedTransform.transform.translation.x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>this-&gt;nedTransform.transform.translation.y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>this-&gt;nedTransform.transform.translation.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>tf2::Quaternion<sp/>quat;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>quat.setRPY(M_PI,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>this-&gt;nedTransform.transform.rotation.x<sp/>=<sp/>quat.x();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>this-&gt;nedTransform.transform.rotation.y<sp/>=<sp/>quat.y();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>this-&gt;nedTransform.transform.rotation.z<sp/>=<sp/>quat.z();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>this-&gt;nedTransform.transform.rotation.w<sp/>=<sp/>quat.w();</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a3401922bc6e94cfcb5db27a99d2e4f0a" kindref="member">UnderwaterObjectROSPlugin::Init</ref>()</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>UnderwaterObjectPlugin::Init();</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1ae0316192f5b26fa321f3e64dd46287b7" kindref="member">UnderwaterObjectROSPlugin::Reset</ref>()</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a8f81a22f771bc1203365de1438452e7a" kindref="member">UnderwaterObjectROSPlugin::Update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gazebo::common::UpdateInfo<sp/>&amp;_info)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>UnderwaterObjectPlugin::Update(_info);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>this-&gt;nedTransform.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>this-&gt;tfBroadcaster.sendTransform(this-&gt;nedTransform);</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a5dbdc863b0902d14f77a3f31b585d0f8" kindref="member">UnderwaterObjectROSPlugin::InitDebug</ref>(gazebo::physics::LinkPtr<sp/>_link,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>gazebo::HydrodynamicModelPtr<sp/>_hydro)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>UnderwaterObjectPlugin::InitDebug(_link,<sp/>_hydro);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>the<sp/>stamped<sp/>wrench<sp/>topics<sp/>if<sp/>the<sp/>debug<sp/>flag<sp/>is<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;std::string,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>gazebo::transport::PublisherPtr&gt;::iterator<sp/>it<sp/>=<sp/>this-&gt;hydroPub.begin();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>this-&gt;hydroPub.end();<sp/>++it)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosHydroPub[it-&gt;first]<sp/>=</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertise&lt;geometry_msgs::WrenchStamped&gt;(</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;GetTopic(),<sp/>10);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ROS<sp/>TOPIC:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;second-&gt;GetTopic()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1adf2dd5f72380c281f9176bd0e4e98f59" kindref="member">UnderwaterObjectROSPlugin::PublishRestoringForce</ref>(</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>gazebo::physics::LinkPtr<sp/>_link)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>base<sp/>class<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>UnderwaterObjectPlugin::PublishRestoringForce(_link);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>data<sp/>in<sp/>a<sp/>ROS<sp/>topic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;models.count(_link))</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;models[_link]-&gt;GetDebugFlag())</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>ignition::math::Vector3d<sp/>restoring<sp/>=<sp/>this-&gt;models[_link]-&gt;GetStoredVector(</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RESTORING_FORCE);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::WrenchStamped<sp/>msg;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a62b50fa4ff5d5b36b78a2160bad1d500" kindref="member">GenWrenchMsg</ref>(restoring,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ignition::math::Vector3d(0,<sp/>0,<sp/>0),<sp/>msg);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosHydroPub[_link-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/restoring&quot;</highlight><highlight class="normal">].publish(msg);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1afa9d2c09358d243270ee454905dcdb23" kindref="member">UnderwaterObjectROSPlugin::PublishIsSubmerged</ref>()</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;baseLinkName.empty())</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>gzwarn<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Base<sp/>link<sp/>name<sp/>string<sp/>is<sp/>empty&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>std_msgs::Bool<sp/>isSubmerged;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>isSubmerged.data<sp/>=<sp/>this-&gt;models[this-&gt;model-&gt;GetLink(this-&gt;baseLinkName)]-&gt;IsSubmerged();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>this-&gt;rosHydroPub[</highlight><highlight class="stringliteral">&quot;is_submerged&quot;</highlight><highlight class="normal">].publish(isSubmerged);</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1ae2defd15b338fe56edbbc87bfe364b6c" kindref="member">UnderwaterObjectROSPlugin::PublishCurrentVelocityMarker</ref>()</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>visualization_msgs::Marker<sp/>marker;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>marker.header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;world&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>marker.header.stamp<sp/>=<sp/>ros::Time();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>marker.ns<sp/>=<sp/>this-&gt;model-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/current_velocity_marker&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>marker.id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>marker.type<sp/>=<sp/>visualization_msgs::Marker::ARROW;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Creating<sp/>the<sp/>arrow<sp/>marker<sp/>for<sp/>the<sp/>current<sp/>velocity<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(orientation<sp/>only,<sp/>magnitude<sp/>has<sp/>to<sp/>be<sp/>read<sp/>from<sp/>the<sp/>topic)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;flowVelocity.Length()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.action<sp/>=<sp/>visualization_msgs::Marker::ADD;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>ignition::math::Pose3d<sp/>pose;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>pose<sp/>=<sp/>this-&gt;model-&gt;WorldPose();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>pose<sp/>=<sp/>this-&gt;model-&gt;GetWorldPose().Ign();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yaw<sp/>=<sp/>std::atan2(this-&gt;flowVelocity.Y(),<sp/>this-&gt;flowVelocity.X());</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pitch<sp/>=<sp/>std::atan2(</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;flowVelocity.Z(),</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::sqrt(std::pow(this-&gt;flowVelocity.X(),<sp/>2)<sp/>+</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pow(this-&gt;flowVelocity.Y(),<sp/>2)));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>ignition::math::Quaterniond<sp/>qt(0.0,<sp/>-pitch,<sp/>yaw);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.pose.position.x<sp/>=<sp/>pose.Pos().X();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.pose.position.y<sp/>=<sp/>pose.Pos().Y();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.pose.position.z<sp/>=<sp/>pose.Pos().Z()<sp/>+<sp/>1.5;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.pose.orientation.x<sp/>=<sp/>qt.X();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.pose.orientation.y<sp/>=<sp/>qt.Y();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.pose.orientation.z<sp/>=<sp/>qt.Z();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.pose.orientation.w<sp/>=<sp/>qt.W();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.scale.x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.scale.y<sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.scale.z<sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.a<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.r<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.g<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.color.b<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>marker.action<sp/>=<sp/>visualization_msgs::Marker::DELETE;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>current<sp/>velocity<sp/>RViz<sp/>marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>this-&gt;rosHydroPub[</highlight><highlight class="stringliteral">&quot;current_velocity_marker&quot;</highlight><highlight class="normal">].publish(marker);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Publishing<sp/>flag<sp/>for<sp/>usage<sp/>of<sp/>global<sp/>current<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>std_msgs::Bool<sp/>useGlobalMsg;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>useGlobalMsg.data<sp/>=<sp/>this-&gt;useGlobalCurrent;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>this-&gt;rosHydroPub[</highlight><highlight class="stringliteral">&quot;using_global_current_velocity&quot;</highlight><highlight class="normal">].publish(useGlobalMsg);</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a22cd26dfdc7d64c8fa3b0a8d5ac40682" kindref="member">UnderwaterObjectROSPlugin::PublishHydrodynamicWrenches</ref>(</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>gazebo::physics::LinkPtr<sp/>_link)</highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>base<sp/>class<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>UnderwaterObjectPlugin::PublishRestoringForce(_link);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>data<sp/>in<sp/>a<sp/>ROS<sp/>topic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;models.count(_link))</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;models[_link]-&gt;GetDebugFlag())</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::WrenchStamped<sp/>msg;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>ignition::math::Vector3d<sp/>force,<sp/>torque;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>wrench<sp/>generated<sp/>by<sp/>the<sp/>acceleration<sp/>of<sp/>fluid<sp/>around<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>force<sp/>=<sp/>this-&gt;models[_link]-&gt;GetStoredVector(UUV_ADDED_MASS_FORCE);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>torque<sp/>=<sp/>this-&gt;models[_link]-&gt;GetStoredVector(UUV_ADDED_MASS_TORQUE);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a62b50fa4ff5d5b36b78a2160bad1d500" kindref="member">GenWrenchMsg</ref>(force,<sp/>torque,<sp/>msg);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosHydroPub[_link-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/added_mass&quot;</highlight><highlight class="normal">].publish(msg);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>wrench<sp/>generated<sp/>by<sp/>the<sp/>fluid<sp/>damping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>force<sp/>=<sp/>this-&gt;models[_link]-&gt;GetStoredVector(UUV_DAMPING_FORCE);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>torque<sp/>=<sp/>this-&gt;models[_link]-&gt;GetStoredVector(UUV_DAMPING_TORQUE);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a62b50fa4ff5d5b36b78a2160bad1d500" kindref="member">GenWrenchMsg</ref>(force,<sp/>torque,<sp/>msg);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosHydroPub[_link-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/damping&quot;</highlight><highlight class="normal">].publish(msg);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>wrench<sp/>generated<sp/>by<sp/>the<sp/>Coriolis<sp/>forces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>force<sp/>=<sp/>this-&gt;models[_link]-&gt;GetStoredVector(UUV_ADDED_CORIOLIS_FORCE);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>torque<sp/>=<sp/>this-&gt;models[_link]-&gt;GetStoredVector(UUV_ADDED_CORIOLIS_TORQUE);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a62b50fa4ff5d5b36b78a2160bad1d500" kindref="member">GenWrenchMsg</ref>(force,<sp/>torque,<sp/>msg);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosHydroPub[_link-&gt;GetName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/added_coriolis&quot;</highlight><highlight class="normal">].publish(msg);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a62b50fa4ff5d5b36b78a2160bad1d500" kindref="member">UnderwaterObjectROSPlugin::GenWrenchMsg</ref>(</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>ignition::math::Vector3d<sp/>_force,<sp/>ignition::math::Vector3d<sp/>_torque,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>geometry_msgs::WrenchStamped<sp/>&amp;_output)</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>_output.wrench.force.x<sp/>=<sp/>_force.X();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>_output.wrench.force.y<sp/>=<sp/>_force.Y();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>_output.wrench.force.z<sp/>=<sp/>_force.Z();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>_output.wrench.torque.x<sp/>=<sp/>_torque.X();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>_output.wrench.torque.y<sp/>=<sp/>_torque.Y();</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>_output.wrench.torque.z<sp/>=<sp/>_torque.Z();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>_output.header.stamp<sp/>=<sp/>ros::Time(this-&gt;world-&gt;SimTime().Double());</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>_output.header.stamp<sp/>=<sp/>ros::Time(this-&gt;world-&gt;GetSimTime().Double());</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a8796c2736835dc203cb7f9c7e84a923e" kindref="member">UnderwaterObjectROSPlugin::UpdateLocalCurrentVelocity</ref>(</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>geometry_msgs::Vector3::ConstPtr<sp/>&amp;_msg)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;useGlobalCurrent)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;flowVelocity.X()<sp/>=<sp/>_msg-&gt;x;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;flowVelocity.Y()<sp/>=<sp/>_msg-&gt;y;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;flowVelocity.Z()<sp/>=<sp/>_msg-&gt;z;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a038402f422a3940e426eec798f6a0d39" kindref="member">UnderwaterObjectROSPlugin::SetUseGlobalCurrentVel</ref>(</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetUseGlobalCurrentVel::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetUseGlobalCurrentVel::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_req.use_global<sp/>==<sp/>this-&gt;useGlobalCurrent)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;useGlobalCurrent<sp/>=<sp/>_req.use_global;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;flowVelocity.X()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;flowVelocity.Y()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;flowVelocity.Z()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;useGlobalCurrent)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/>this-&gt;model-&gt;GetName()<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;::Now<sp/>using<sp/>global<sp/>current<sp/>velocity&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/>this-&gt;model-&gt;GetName()<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;::Using<sp/>the<sp/>current<sp/>velocity<sp/>under<sp/>the<sp/>namespace<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;model-&gt;GetName()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a36c121c67de5ba30cd0770fc9b60ea26" kindref="member">UnderwaterObjectROSPlugin::GetModelProperties</ref>(</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetModelProperties::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetModelProperties::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;gazebo::physics::LinkPtr,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr&gt;::iterator<sp/>it<sp/>=<sp/>models.begin();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>models.end();<sp/>++it)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>gazebo::physics::LinkPtr<sp/>link<sp/>=<sp/>it-&gt;first;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr<sp/>hydro<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.link_names.push_back(link-&gt;GetName());</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_gazebo_ros_plugins_msgs::UnderwaterObjectModel<sp/>model;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>mat;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>hydro-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;volume&quot;</highlight><highlight class="normal">,<sp/>param);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>model.volume<sp/>=<sp/>param;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>hydro-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;fluid_density&quot;</highlight><highlight class="normal">,<sp/>param);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>model.fluid_density<sp/>=<sp/>param;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>hydro-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;bbox_height&quot;</highlight><highlight class="normal">,<sp/>param);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>model.bbox_height<sp/>=<sp/>param;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>hydro-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;bbox_length&quot;</highlight><highlight class="normal">,<sp/>param);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>model.bbox_length<sp/>=<sp/>param;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>hydro-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;bbox_width&quot;</highlight><highlight class="normal">,<sp/>param);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>model.bbox_width<sp/>=<sp/>param;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>hydro-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;added_mass&quot;</highlight><highlight class="normal">,<sp/>mat);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>model.added_mass<sp/>=<sp/>mat;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>hydro-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;linear_damping&quot;</highlight><highlight class="normal">,<sp/>mat);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>model.linear_damping<sp/>=<sp/>mat;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>hydro-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;linear_damping_forward_speed&quot;</highlight><highlight class="normal">,<sp/>mat);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>model.linear_damping_forward_speed<sp/>=<sp/>mat;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>hydro-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;quadratic_damping&quot;</highlight><highlight class="normal">,<sp/>mat);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>model.quadratic_damping<sp/>=<sp/>mat;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>model.neutrally_buoyant<sp/>=<sp/>hydro-&gt;IsNeutrallyBuoyant();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>hydro-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;center_of_buoyancy&quot;</highlight><highlight class="normal">,<sp/>mat);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>model.cob.x<sp/>=<sp/>mat[0];</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>model.cob.y<sp/>=<sp/>mat[1];</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>model.cob.z<sp/>=<sp/>mat[2];</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.m<sp/>=<sp/>link-&gt;GetInertial()-&gt;Mass();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.ixx<sp/>=<sp/>link-&gt;GetInertial()-&gt;IXX();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.ixy<sp/>=<sp/>link-&gt;GetInertial()-&gt;IXY();</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.ixz<sp/>=<sp/>link-&gt;GetInertial()-&gt;IXZ();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.iyy<sp/>=<sp/>link-&gt;GetInertial()-&gt;IYY();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.iyz<sp/>=<sp/>link-&gt;GetInertial()-&gt;IYZ();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.izz<sp/>=<sp/>link-&gt;GetInertial()-&gt;IZZ();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.com.x<sp/>=<sp/>link-&gt;GetInertial()-&gt;CoG().X();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.com.y<sp/>=<sp/>link-&gt;GetInertial()-&gt;CoG().Y();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.com.z<sp/>=<sp/>link-&gt;GetInertial()-&gt;CoG().Z();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.m<sp/>=<sp/>link-&gt;GetInertial()-&gt;GetMass();</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.ixx<sp/>=<sp/>link-&gt;GetInertial()-&gt;GetIXX();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.ixy<sp/>=<sp/>link-&gt;GetInertial()-&gt;GetIXY();</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.ixz<sp/>=<sp/>link-&gt;GetInertial()-&gt;GetIXZ();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.iyy<sp/>=<sp/>link-&gt;GetInertial()-&gt;GetIYY();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.iyz<sp/>=<sp/>link-&gt;GetInertial()-&gt;GetIYZ();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.izz<sp/>=<sp/>link-&gt;GetInertial()-&gt;GetIZZ();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.com.x<sp/>=<sp/>link-&gt;GetInertial()-&gt;GetCoG().x;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.com.y<sp/>=<sp/>link-&gt;GetInertial()-&gt;GetCoG().y;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>model.inertia.com.z<sp/>=<sp/>link-&gt;GetInertial()-&gt;GetCoG().z;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.models.push_back(model);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a5d6cd010fa2f18ae91147c03ee9d1408" kindref="member">UnderwaterObjectROSPlugin::SetScalingAddedMass</ref>(</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetFloat::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetFloat::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_req.data<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Scaling<sp/>factor<sp/>cannot<sp/>be<sp/>negative&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;gazebo::physics::LinkPtr,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr&gt;::iterator<sp/>it<sp/>=<sp/>models.begin();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>models.end();<sp/>++it)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr<sp/>hydro<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hydro-&gt;SetParam(</highlight><highlight class="stringliteral">&quot;scaling_added_mass&quot;</highlight><highlight class="normal">,<sp/>_req.data);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>links<sp/>set<sp/>with<sp/>new<sp/>added-mass<sp/>scaling<sp/>factor&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1ad8ee29496336a958fa59c6fc35026729" kindref="member">UnderwaterObjectROSPlugin::GetScalingAddedMass</ref>(</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetFloat::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetFloat::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>models.begin()-&gt;second-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;scaling_added_mass&quot;</highlight><highlight class="normal">,<sp/>_res.data);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a67861c1e99ee10a9c64f96d6401b221d" kindref="member">UnderwaterObjectROSPlugin::SetScalingDamping</ref>(</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetFloat::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetFloat::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal">{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_req.data<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Scaling<sp/>factor<sp/>cannot<sp/>be<sp/>negative&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;gazebo::physics::LinkPtr,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr&gt;::iterator<sp/>it<sp/>=<sp/>models.begin();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>models.end();<sp/>++it)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr<sp/>hydro<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hydro-&gt;SetParam(</highlight><highlight class="stringliteral">&quot;scaling_damping&quot;</highlight><highlight class="normal">,<sp/>_req.data);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>links<sp/>set<sp/>with<sp/>new<sp/>damping<sp/>scaling<sp/>factor&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1adc480b2b52d0da8a9c1d1b700d7bacd6" kindref="member">UnderwaterObjectROSPlugin::GetScalingDamping</ref>(</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetFloat::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetFloat::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>models.begin()-&gt;second-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;scaling_damping&quot;</highlight><highlight class="normal">,<sp/>_res.data);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a2569924791d708d8d879c0fec853b5f4" kindref="member">UnderwaterObjectROSPlugin::SetScalingVolume</ref>(</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetFloat::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetFloat::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_req.data<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Scaling<sp/>factor<sp/>cannot<sp/>be<sp/>negative&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;gazebo::physics::LinkPtr,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr&gt;::iterator<sp/>it<sp/>=<sp/>models.begin();</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>models.end();<sp/>++it)</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr<sp/>hydro<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hydro-&gt;SetParam(</highlight><highlight class="stringliteral">&quot;scaling_volume&quot;</highlight><highlight class="normal">,<sp/>_req.data);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>links<sp/>set<sp/>with<sp/>new<sp/>volume<sp/>scaling<sp/>factor&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a9eb2881a288725f83c9924b7be498c81" kindref="member">UnderwaterObjectROSPlugin::GetScalingVolume</ref>(</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetFloat::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetFloat::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>models.begin()-&gt;second-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;scaling_volume&quot;</highlight><highlight class="normal">,<sp/>_res.data);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1ac254edcbd59acb26fd70b70acad679c9" kindref="member">UnderwaterObjectROSPlugin::SetFluidDensity</ref>(</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetFloat::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetFloat::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_req.data<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Scaling<sp/>factor<sp/>cannot<sp/>be<sp/>negative&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;gazebo::physics::LinkPtr,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr&gt;::iterator<sp/>it<sp/>=<sp/>models.begin();</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>models.end();<sp/>++it)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr<sp/>hydro<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hydro-&gt;SetParam(</highlight><highlight class="stringliteral">&quot;fluid_density&quot;</highlight><highlight class="normal">,<sp/>_req.data);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>links<sp/>set<sp/>with<sp/>new<sp/>fluid<sp/>density&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a92c568850087edd355359e967f42d966" kindref="member">UnderwaterObjectROSPlugin::GetFluidDensity</ref>(</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetFloat::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetFloat::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>models.begin()-&gt;second-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;fluid_density&quot;</highlight><highlight class="normal">,<sp/>_res.data);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a473e7dae4ba36e061389cf4d193ce80d" kindref="member">UnderwaterObjectROSPlugin::SetOffsetVolume</ref>(</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetFloat::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetFloat::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal">{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;gazebo::physics::LinkPtr,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr&gt;::iterator<sp/>it<sp/>=<sp/>models.begin();</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>models.end();<sp/>++it)</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr<sp/>hydro<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>hydro-&gt;SetParam(</highlight><highlight class="stringliteral">&quot;offset_volume&quot;</highlight><highlight class="normal">,<sp/>_req.data);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>_res.message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>links<sp/>set<sp/>with<sp/>new<sp/>volume<sp/>offset&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a70d64b6da3a18257bb1b4b1edc9afb3b" kindref="member">UnderwaterObjectROSPlugin::GetOffsetVolume</ref>(</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetFloat::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetFloat::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>models.begin()-&gt;second-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;offset_volume&quot;</highlight><highlight class="normal">,<sp/>_res.data);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1ae062c4867e24ba3daf56032728fb3e9a" kindref="member">UnderwaterObjectROSPlugin::SetOffsetAddedMass</ref>(</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetFloat::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetFloat::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;gazebo::physics::LinkPtr,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr&gt;::iterator<sp/>it<sp/>=<sp/>models.begin();</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>models.end();<sp/>++it)</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr<sp/>hydro<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>hydro-&gt;SetParam(</highlight><highlight class="stringliteral">&quot;offset_added_mass&quot;</highlight><highlight class="normal">,<sp/>_req.data);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>_res.message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>links<sp/>set<sp/>with<sp/>new<sp/>added-mass<sp/>identity<sp/>offset&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a317123306ae032c3cfb408553ed0706c" kindref="member">UnderwaterObjectROSPlugin::GetOffsetAddedMass</ref>(</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetFloat::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetFloat::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>models.begin()-&gt;second-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;offset_added_mass&quot;</highlight><highlight class="normal">,<sp/>_res.data);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal">}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a9b3127ae45a4972927bd7becc61a4cf4" kindref="member">UnderwaterObjectROSPlugin::SetOffsetLinearDamping</ref>(</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetFloat::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetFloat::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal">{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;gazebo::physics::LinkPtr,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr&gt;::iterator<sp/>it<sp/>=<sp/>models.begin();</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>models.end();<sp/>++it)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr<sp/>hydro<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>hydro-&gt;SetParam(</highlight><highlight class="stringliteral">&quot;offset_linear_damping&quot;</highlight><highlight class="normal">,<sp/>_req.data);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>_res.message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>links<sp/>set<sp/>with<sp/>new<sp/>linear<sp/>damping<sp/>identity<sp/>offset&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a979a847fb03c318d23809ef7e516f980" kindref="member">UnderwaterObjectROSPlugin::GetOffsetLinearDamping</ref>(</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetFloat::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetFloat::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>models.begin()-&gt;second-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;offset_linear_damping&quot;</highlight><highlight class="normal">,<sp/>_res.data);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a85a1221c40202088731e56f1d7736bf1" kindref="member">UnderwaterObjectROSPlugin::SetOffsetLinearForwardSpeedDamping</ref>(</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetFloat::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetFloat::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;gazebo::physics::LinkPtr,</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr&gt;::iterator<sp/>it<sp/>=<sp/>models.begin();</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>models.end();<sp/>++it)</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr<sp/>hydro<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>hydro-&gt;SetParam(</highlight><highlight class="stringliteral">&quot;offset_lin_forward_speed_damping&quot;</highlight><highlight class="normal">,<sp/>_req.data);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>_res.message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>links<sp/>set<sp/>with<sp/>new<sp/>linear<sp/>forward<sp/>speed<sp/>damping<sp/>identity<sp/>offset&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a8c63d709fc992f899ffbe1eced7b6cd8" kindref="member">UnderwaterObjectROSPlugin::GetOffsetLinearForwardSpeedDamping</ref>(</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetFloat::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetFloat::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>models.begin()-&gt;second-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;offset_lin_forward_speed_damping&quot;</highlight><highlight class="normal">,<sp/>_res.data);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a972ab56e380c00dcc489c0d9e9a4d0de" kindref="member">UnderwaterObjectROSPlugin::SetOffsetNonLinearDamping</ref>(</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetFloat::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetFloat::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;gazebo::physics::LinkPtr,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr&gt;::iterator<sp/>it<sp/>=<sp/>models.begin();</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>models.end();<sp/>++it)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>gazebo::HydrodynamicModelPtr<sp/>hydro<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>hydro-&gt;SetParam(</highlight><highlight class="stringliteral">&quot;offset_nonlin_damping&quot;</highlight><highlight class="normal">,<sp/>_req.data);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>_res.message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>links<sp/>set<sp/>with<sp/>new<sp/>nonlinear<sp/>damping<sp/>identity<sp/>offset&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1abc734c754de497bf62b13de980649f70" kindref="member">UnderwaterObjectROSPlugin::GetOffsetNonLinearDamping</ref>(</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetFloat::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetFloat::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/>models.begin()-&gt;second-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;offset_nonlin_damping&quot;</highlight><highlight class="normal">,<sp/>_res.data);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal">GZ_REGISTER_MODEL_PLUGIN(<ref refid="classuuv__simulator__ros_1_1_underwater_object_r_o_s_plugin_1a6d26a8a5c08e79c0a149a07cf61209e0" kindref="member">UnderwaterObjectROSPlugin</ref>)</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/musamorena/catkin_ws/src/uuv_simulator/uuv_gazebo_plugins/uuv_gazebo_ros_plugins/src/UnderwaterObjectROSPlugin.cc"/>
  </compounddef>
</doxygen>
