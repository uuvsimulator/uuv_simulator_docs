<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_linear_battery_r_o_s_plugin_8cc" kind="file" language="C++">
    <compoundname>LinearBatteryROSPlugin.cc</compoundname>
    <includes refid="_linear_battery_r_o_s_plugin_8hh" local="no">uuv_gazebo_ros_plugins/LinearBatteryROSPlugin.hh</includes>
    <includes local="no">gazebo/plugins/LinearBatteryPlugin.hh</includes>
    <includes local="no">gazebo/physics/Model.hh</includes>
    <includes local="no">gazebo/common/Plugin.hh</includes>
    <incdepgraph>
      <node id="157">
        <label>gazebo/common/Plugin.hh</label>
      </node>
      <node id="152">
        <label>/home/musamorena/catkin_ws/src/uuv_simulator/uuv_gazebo_plugins/uuv_gazebo_ros_plugins/src/LinearBatteryROSPlugin.cc</label>
        <link refid="_linear_battery_r_o_s_plugin_8cc"/>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>gazebo/plugins/LinearBatteryPlugin.hh</label>
      </node>
      <node id="161">
        <label>string</label>
      </node>
      <node id="154">
        <label>gazebo/gazebo.hh</label>
      </node>
      <node id="153">
        <label>uuv_gazebo_ros_plugins/LinearBatteryROSPlugin.hh</label>
        <link refid="_linear_battery_r_o_s_plugin_8hh_source"/>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
      </node>
      <node id="159">
        <label>ros/ros.h</label>
      </node>
      <node id="158">
        <label>boost/scoped_ptr.hpp</label>
      </node>
      <node id="156">
        <label>gazebo/physics/Model.hh</label>
      </node>
      <node id="160">
        <label>sensor_msgs/BatteryState.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacegazebo">gazebo</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2016<sp/>The<sp/>UUV<sp/>Simulator<sp/>Authors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;uuv_gazebo_ros_plugins/LinearBatteryROSPlugin.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/plugins/LinearBatteryPlugin.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/Model.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/common/Plugin.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegazebo" kindref="compound">gazebo</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1aabebb4f5b17d524e9c3d74dd0cb1acdd" kindref="member">LinearBatteryROSPlugin::LinearBatteryROSPlugin</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1ae9469d16486e6a1730d6ba881caef006" kindref="member">robotNamespace</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1a46c86524f2df0f027533d1806c32a47e" kindref="member">LinearBatteryROSPlugin::~LinearBatteryROSPlugin</ref>()</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1ac079f1d2cb6edb06f4432c69f165a0a4" kindref="member">rosNode</ref>-&gt;shutdown();</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1a224ee323f756ae606c9836493f1ff494" kindref="member">LinearBatteryROSPlugin::Load</ref>(physics::ModelPtr<sp/>_parent,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>sdf::ElementPtr<sp/>_sdf)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>LinearBatteryPlugin::Load(_parent,<sp/>_sdf);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(common::Exception<sp/>&amp;_e)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>gzerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>loading<sp/>plugin.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>ensure<sp/>that<sp/>your<sp/>model<sp/>is<sp/>correct.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ros::isInitialized())</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>gzerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>loading<sp/>plugin<sp/>since<sp/>ROS<sp/>has<sp/>not<sp/>been<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;properly<sp/>initialized.<sp/><sp/>Try<sp/>starting<sp/>gazebo<sp/>with<sp/>ros<sp/>plugin:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>gazebo<sp/>-s<sp/>libgazebo_ros_api_plugin.so\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;namespace&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1ae9469d16486e6a1730d6ba881caef006" kindref="member">robotNamespace</ref><sp/>=<sp/>_sdf-&gt;Get&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;namespace&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>updateRate<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;update_rate&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>updateRate<sp/>=<sp/>_sdf-&gt;Get&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;update_rate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(updateRate<sp/>&lt;=<sp/>0.0)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>update<sp/>rate,<sp/>setting<sp/>it<sp/>to<sp/>2<sp/>Hz,<sp/>rate=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>updateRate</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>updateRate<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1ac079f1d2cb6edb06f4432c69f165a0a4" kindref="member">rosNode</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ros::NodeHandle(this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1ae9469d16486e6a1730d6ba881caef006" kindref="member">robotNamespace</ref>));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>this-&gt;batteryStatePub<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1ac079f1d2cb6edb06f4432c69f165a0a4" kindref="member">rosNode</ref>-&gt;advertise&lt;sensor_msgs::BatteryState&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;battery_state&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1ac1ba8a2811bbcf5f5700a2505f7a63d9" kindref="member">updateTimer</ref><sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1ac079f1d2cb6edb06f4432c69f165a0a4" kindref="member">rosNode</ref>-&gt;createTimer(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Duration(1<sp/>/<sp/>updateRate),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::bind(&amp;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1af7dd1d4bd4f0b220d8c815bdb8e38679" kindref="member">LinearBatteryROSPlugin::PublishBatteryState</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ROS<sp/>Battery<sp/>Plugin<sp/>for<sp/>link<sp/>&lt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;link-&gt;GetName()</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;<sp/>initialized\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t-<sp/>Initial<sp/>charge<sp/>[Ah]=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;q0<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t-<sp/>Update<sp/>rate<sp/>[Hz]=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>updateRate</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1af7dd1d4bd4f0b220d8c815bdb8e38679" kindref="member">LinearBatteryROSPlugin::PublishBatteryState</ref>()</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1a44c22f944534c81519677c63c78c7701" kindref="member">batteryStateMsg</ref>.header.stamp<sp/>=<sp/>ros::Time().now();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1a44c22f944534c81519677c63c78c7701" kindref="member">batteryStateMsg</ref>.header.frame_id<sp/>=<sp/>this-&gt;link-&gt;GetName();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1a44c22f944534c81519677c63c78c7701" kindref="member">batteryStateMsg</ref>.charge<sp/>=<sp/>this-&gt;q;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1a44c22f944534c81519677c63c78c7701" kindref="member">batteryStateMsg</ref>.percentage<sp/>=<sp/>this-&gt;q<sp/>/<sp/>this-&gt;q0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1a44c22f944534c81519677c63c78c7701" kindref="member">batteryStateMsg</ref>.voltage<sp/>=<sp/>this-&gt;battery-&gt;Voltage();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1a44c22f944534c81519677c63c78c7701" kindref="member">batteryStateMsg</ref>.design_capacity<sp/>=<sp/>this-&gt;q0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1a44c22f944534c81519677c63c78c7701" kindref="member">batteryStateMsg</ref>.power_supply_status<sp/>=</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor_msgs::BatteryState::POWER_SUPPLY_STATUS_DISCHARGING;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1a44c22f944534c81519677c63c78c7701" kindref="member">batteryStateMsg</ref>.power_supply_health<sp/>=</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor_msgs::BatteryState::POWER_SUPPLY_HEALTH_GOOD;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1a44c22f944534c81519677c63c78c7701" kindref="member">batteryStateMsg</ref>.power_supply_technology<sp/>=</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor_msgs::BatteryState::POWER_SUPPLY_TECHNOLOGY_UNKNOWN;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1a44c22f944534c81519677c63c78c7701" kindref="member">batteryStateMsg</ref>.present<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>battery<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>this-&gt;batteryStatePub.publish(this-&gt;<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1a44c22f944534c81519677c63c78c7701" kindref="member">batteryStateMsg</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1aedd9b7053962837e687826e7e06ac249" kindref="member">LinearBatteryROSPlugin::Init</ref>()</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>LinearBatteryPlugin::Init();</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1a869ec61ac6792894bff98f7fc3b7fae0" kindref="member">LinearBatteryROSPlugin::Reset</ref>()</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>LinearBatteryPlugin::Reset();</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">GZ_REGISTER_MODEL_PLUGIN(<ref refid="classgazebo_1_1_linear_battery_r_o_s_plugin_1aabebb4f5b17d524e9c3d74dd0cb1acdd" kindref="member">LinearBatteryROSPlugin</ref>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/musamorena/catkin_ws/src/uuv_simulator/uuv_gazebo_plugins/uuv_gazebo_ros_plugins/src/LinearBatteryROSPlugin.cc"/>
  </compounddef>
</doxygen>
