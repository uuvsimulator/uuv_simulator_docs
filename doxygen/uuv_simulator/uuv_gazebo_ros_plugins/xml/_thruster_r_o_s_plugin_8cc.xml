<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_thruster_r_o_s_plugin_8cc" kind="file" language="C++">
    <compoundname>ThrusterROSPlugin.cc</compoundname>
    <includes refid="_thruster_r_o_s_plugin_8hh" local="no">uuv_gazebo_ros_plugins/ThrusterROSPlugin.hh</includes>
    <includes local="no">string</includes>
    <includes local="no">gazebo/physics/Base.hh</includes>
    <includes local="no">gazebo/physics/Link.hh</includes>
    <includes local="no">gazebo/physics/Model.hh</includes>
    <includes local="no">gazebo/physics/World.hh</includes>
    <includes local="no">uuv_gazebo_ros_plugins_msgs/FloatStamped.h</includes>
    <incdepgraph>
      <node id="173">
        <label>geometry_msgs/WrenchStamped.h</label>
      </node>
      <node id="170">
        <label>gazebo/common/Plugin.hh</label>
      </node>
      <node id="177">
        <label>uuv_gazebo_ros_plugins_msgs/GetThrusterState.h</label>
      </node>
      <node id="172">
        <label>uuv_gazebo_ros_plugins_msgs/FloatStamped.h</label>
      </node>
      <node id="174">
        <label>std_msgs/Bool.h</label>
      </node>
      <node id="163">
        <label>/home/musamorena/catkin_ws/src/uuv_simulator/uuv_gazebo_plugins/uuv_gazebo_ros_plugins/src/ThrusterROSPlugin.cc</label>
        <link refid="_thruster_r_o_s_plugin_8cc"/>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
      </node>
      <node id="166">
        <label>string</label>
      </node>
      <node id="168">
        <label>uuv_gazebo_plugins/ThrusterPlugin.hh</label>
      </node>
      <node id="165">
        <label>map</label>
      </node>
      <node id="176">
        <label>uuv_gazebo_ros_plugins_msgs/SetThrusterState.h</label>
      </node>
      <node id="175">
        <label>std_msgs/Float64.h</label>
      </node>
      <node id="164">
        <label>uuv_gazebo_ros_plugins/ThrusterROSPlugin.hh</label>
        <link refid="_thruster_r_o_s_plugin_8hh_source"/>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
      </node>
      <node id="167">
        <label>vector</label>
      </node>
      <node id="181">
        <label>gazebo/physics/Base.hh</label>
      </node>
      <node id="171">
        <label>ros/ros.h</label>
      </node>
      <node id="180">
        <label>uuv_gazebo_ros_plugins_msgs/GetThrusterConversionFcn.h</label>
      </node>
      <node id="169">
        <label>boost/scoped_ptr.hpp</label>
      </node>
      <node id="183">
        <label>gazebo/physics/Model.hh</label>
      </node>
      <node id="178">
        <label>uuv_gazebo_ros_plugins_msgs/SetThrusterEfficiency.h</label>
      </node>
      <node id="182">
        <label>gazebo/physics/Link.hh</label>
      </node>
      <node id="179">
        <label>uuv_gazebo_ros_plugins_msgs/GetThrusterEfficiency.h</label>
      </node>
      <node id="184">
        <label>gazebo/physics/World.hh</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceuuv__simulator__ros">uuv_simulator_ros</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2016<sp/>The<sp/>UUV<sp/>Simulator<sp/>Authors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;uuv_gazebo_ros_plugins/ThrusterROSPlugin.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/Base.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/Link.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/Model.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/World.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;uuv_gazebo_ros_plugins_msgs/FloatStamped.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceuuv__simulator__ros" kindref="compound">uuv_simulator_ros</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1a96d5b46e81d42adc6f1bedc129b56a92" kindref="member">ThrusterROSPlugin::ThrusterROSPlugin</ref>()</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>this-&gt;rosPublishPeriod<sp/>=<sp/>gazebo::common::Time(0.05);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>this-&gt;lastRosPublishTime<sp/>=<sp/>gazebo::common::Time(0.0);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1a25fab91375decd55eec8a8ee3bd4079e" kindref="member">ThrusterROSPlugin::~ThrusterROSPlugin</ref>()</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GAZEBO_MAJOR_VERSION<sp/>&gt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>this-&gt;rosPublishConnection.reset();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>gazebo::event::Events::DisconnectWorldUpdateBegin(</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosPublishConnection);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>this-&gt;rosNode-&gt;shutdown();</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1ac3f8c621ead1c6fe22809c3abf284a68" kindref="member">ThrusterROSPlugin::SetThrustReference</ref>(</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uuv_gazebo_ros_plugins_msgs::FloatStamped::ConstPtr<sp/>&amp;_msg)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::isnan(_msg-&gt;data))</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_WARN(</highlight><highlight class="stringliteral">&quot;ThrusterROSPlugin:<sp/>Ignoring<sp/>nan<sp/>command&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>this-&gt;inputCommand<sp/>=<sp/>_msg-&gt;data;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">gazebo::common::Time<sp/><ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1a61b52a4fbc5871061f3b8f4639596e32" kindref="member">ThrusterROSPlugin::GetRosPublishPeriod</ref>()</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;rosPublishPeriod;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1adb8206d74cba2e15a209db4284198db8" kindref="member">ThrusterROSPlugin::SetRosPublishRate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_hz)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_hz<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosPublishPeriod<sp/>=<sp/>1.0<sp/>/<sp/>_hz;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosPublishPeriod<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1a670f0befa3efac82bcff5d187fe6cbb3" kindref="member">ThrusterROSPlugin::Init</ref>()</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>ThrusterPlugin::Init();</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1a525a9a8ea9be37c4542137640c4a2fbc" kindref="member">ThrusterROSPlugin::Reset</ref>()</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>this-&gt;lastRosPublishTime.Set(0,<sp/>0);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1ab1b70d05c87212176d1237817bf9ddf5" kindref="member">ThrusterROSPlugin::Load</ref>(gazebo::physics::ModelPtr<sp/>_parent,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdf::ElementPtr<sp/>_sdf)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>ThrusterPlugin::Load(_parent,<sp/>_sdf);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(gazebo::common::Exception<sp/>&amp;_e)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>gzerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>loading<sp/>plugin.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>ensure<sp/>that<sp/>your<sp/>model<sp/>is<sp/>correct.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ros::isInitialized())</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>gzerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>loading<sp/>plugin<sp/>since<sp/>ROS<sp/>has<sp/>not<sp/>been<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;properly<sp/>initialized.<sp/><sp/>Try<sp/>starting<sp/>gazebo<sp/>with<sp/>ros<sp/>plugin:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>gazebo<sp/>-s<sp/>libgazebo_ros_api_plugin.so\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>this-&gt;rosNode.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ros::NodeHandle(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;set_thrust_force_efficiency&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;topicPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;set_thrust_force_efficiency&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1a9d65e6dda76939e59df4b18226f893b0" kindref="member">ThrusterROSPlugin::SetThrustForceEfficiency</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;get_thrust_force_efficiency&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;topicPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;get_thrust_force_efficiency&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1a4a73039a9b93090462da51189a83b85b" kindref="member">ThrusterROSPlugin::GetThrustForceEfficiency</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;set_dynamic_state_efficiency&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;topicPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;set_dynamic_state_efficiency&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1a10f86f23ba017986e816a83dbd217a5a" kindref="member">ThrusterROSPlugin::SetDynamicStateEfficiency</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;get_dynamic_state_efficiency&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;topicPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;get_dynamic_state_efficiency&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1a585e5327b2d1fd93d8bacce6e95e623c" kindref="member">ThrusterROSPlugin::GetDynamicStateEfficiency</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;set_thruster_state&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;topicPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;set_thruster_state&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1ad8b0158748c2ae0950851e257d811988" kindref="member">ThrusterROSPlugin::SetThrusterState</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;get_thruster_state&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;topicPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;get_thruster_state&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1a03f9489a29bf669efb23ecc9df28f95b" kindref="member">ThrusterROSPlugin::GetThrusterState</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>this-&gt;services[</highlight><highlight class="stringliteral">&quot;get_thruster_conversion_fcn&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertiseService(</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;topicPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;get_thruster_conversion_fcn&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1af012be49e3598405ceb764190838789c" kindref="member">ThrusterROSPlugin::GetThrusterConversionFcn</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>this-&gt;subThrustReference<sp/>=<sp/>this-&gt;rosNode-&gt;subscribe&lt;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_gazebo_ros_plugins_msgs::FloatStamped</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;(this-&gt;commandSubscriber-&gt;GetTopic(),<sp/>10,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::bind(&amp;<ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1ac3f8c621ead1c6fe22809c3abf284a68" kindref="member">ThrusterROSPlugin::SetThrustReference</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>this-&gt;pubThrust<sp/>=<sp/>this-&gt;rosNode-&gt;advertise&lt;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_gazebo_ros_plugins_msgs::FloatStamped</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;(this-&gt;thrustTopicPublisher-&gt;GetTopic(),<sp/>10);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>this-&gt;pubThrustWrench<sp/>=</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rosNode-&gt;advertise&lt;geometry_msgs::WrenchStamped&gt;(</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;thrustTopicPublisher-&gt;GetTopic()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_wrench&quot;</highlight><highlight class="normal">,<sp/>10);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>this-&gt;pubThrusterState<sp/>=<sp/>this-&gt;rosNode-&gt;advertise&lt;std_msgs::Bool&gt;(</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;topicPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;is_on&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>this-&gt;pubThrustForceEff<sp/>=<sp/>this-&gt;rosNode-&gt;advertise&lt;std_msgs::Float64&gt;(</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;topicPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;thrust_efficiency&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>this-&gt;pubDynamicStateEff<sp/>=<sp/>this-&gt;rosNode-&gt;advertise&lt;std_msgs::Float64&gt;(</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;topicPrefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;dynamic_state_efficiency&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Thruster<sp/>#&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;thrusterID<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>initialized&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t-<sp/>Link:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;thrusterLink-&gt;GetName()<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t-<sp/>Robot<sp/>model:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_parent-&gt;GetName()<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t-<sp/>Input<sp/>command<sp/>topic:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;commandSubscriber-&gt;GetTopic()<sp/>&lt;&lt;<sp/>std::endl</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t-<sp/>Thrust<sp/>output<sp/>topic:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;thrustTopicPublisher-&gt;GetTopic()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>this-&gt;rosPublishConnection<sp/>=<sp/>gazebo::event::Events::ConnectWorldUpdateBegin(</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::bind(&amp;<ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1ab3d7f21cabcbb88d9551860182e50096" kindref="member">ThrusterROSPlugin::RosPublishStates</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1ab3d7f21cabcbb88d9551860182e50096" kindref="member">ThrusterROSPlugin::RosPublishStates</ref>()</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Limit<sp/>publish<sp/>rate<sp/>according<sp/>to<sp/>publish<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;thrustForceStamp<sp/>-<sp/>this-&gt;lastRosPublishTime<sp/>&gt;=</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;rosPublishPeriod)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;lastRosPublishTime<sp/>=<sp/>this-&gt;thrustForceStamp;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>the<sp/>thrust<sp/>force<sp/>magnitude</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>uuv_gazebo_ros_plugins_msgs::FloatStamped<sp/>thrustMsg;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>thrustMsg.header.stamp<sp/>=<sp/>ros::Time().now();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>thrustMsg.header.frame_id<sp/>=<sp/>this-&gt;thrusterLink-&gt;GetName();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>thrustMsg.data<sp/>=<sp/>this-&gt;thrustForce;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pubThrust.publish(thrustMsg);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>the<sp/>thrust<sp/>force<sp/>vector<sp/>wrt<sp/>the<sp/>thruster<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::WrenchStamped<sp/>thrustWrenchMsg;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>thrustWrenchMsg.header.stamp<sp/>=<sp/>ros::Time().now();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>thrustWrenchMsg.header.frame_id<sp/>=<sp/>this-&gt;thrusterLink-&gt;GetName();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>ignition::math::Vector3d<sp/>thrustVector<sp/>=<sp/>this-&gt;thrustForce<sp/>*<sp/>this-&gt;thrusterAxis;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>thrustWrenchMsg.wrench.force.x<sp/>=<sp/>thrustVector.X();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>thrustWrenchMsg.wrench.force.y<sp/>=<sp/>thrustVector.Y();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>thrustWrenchMsg.wrench.force.z<sp/>=<sp/>thrustVector.Z();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pubThrustWrench.publish(thrustWrenchMsg);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>the<sp/>thruster<sp/>current<sp/>state<sp/>(ON<sp/>or<sp/>OFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>std_msgs::Bool<sp/>isOnMsg;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>isOnMsg.data<sp/>=<sp/>this-&gt;isOn;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pubThrusterState.publish(isOnMsg);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>thrust<sp/>output<sp/>efficiency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>std_msgs::Float64<sp/>thrustEffMsg;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>thrustEffMsg.data<sp/>=<sp/>this-&gt;thrustEfficiency;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pubThrustForceEff.publish(thrustEffMsg);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>dynamic<sp/>state<sp/>efficiency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>std_msgs::Float64<sp/>dynStateEffMsg;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>dynStateEffMsg.data<sp/>=<sp/>this-&gt;propellerEfficiency;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pubDynamicStateEff.publish(dynStateEffMsg);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1a9d65e6dda76939e59df4b18226f893b0" kindref="member">ThrusterROSPlugin::SetThrustForceEfficiency</ref>(</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetThrusterEfficiency::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetThrusterEfficiency::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_req.efficiency<sp/>&lt;<sp/>0.0<sp/>||<sp/>_req.efficiency<sp/>&gt;<sp/>1.0)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;thrustEfficiency<sp/>=<sp/>_req.efficiency;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>thrust<sp/>efficiency<sp/>at<sp/>thruster<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;thrusterLink-&gt;GetName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_req.efficiency<sp/><sp/>*<sp/>100</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1a4a73039a9b93090462da51189a83b85b" kindref="member">ThrusterROSPlugin::GetThrustForceEfficiency</ref>(</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetThrusterEfficiency::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetThrusterEfficiency::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>_res.efficiency<sp/>=<sp/>this-&gt;thrustEfficiency;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1a10f86f23ba017986e816a83dbd217a5a" kindref="member">ThrusterROSPlugin::SetDynamicStateEfficiency</ref>(</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetThrusterEfficiency::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetThrusterEfficiency::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_req.efficiency<sp/>&lt;<sp/>0.0<sp/>||<sp/>_req.efficiency<sp/>&gt;<sp/>1.0)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;propellerEfficiency<sp/>=<sp/>_req.efficiency;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>propeller<sp/>efficiency<sp/>at<sp/>thruster<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;thrusterLink-&gt;GetName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_req.efficiency<sp/>*<sp/>100</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1a585e5327b2d1fd93d8bacce6e95e623c" kindref="member">ThrusterROSPlugin::GetDynamicStateEfficiency</ref>(</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetThrusterEfficiency::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetThrusterEfficiency::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>_res.efficiency<sp/>=<sp/>this-&gt;propellerEfficiency;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1ad8b0158748c2ae0950851e257d811988" kindref="member">ThrusterROSPlugin::SetThrusterState</ref>(</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetThrusterState::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::SetThrusterState::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>this-&gt;isOn<sp/>=<sp/>_req.on;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Turning<sp/>thruster<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;thrusterLink-&gt;GetName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>(this-&gt;isOn<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;ON&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;OFF&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>_res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1a03f9489a29bf669efb23ecc9df28f95b" kindref="member">ThrusterROSPlugin::GetThrusterState</ref>(</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetThrusterState::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetThrusterState::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>_res.is_on<sp/>=<sp/>this-&gt;isOn;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1af012be49e3598405ceb764190838789c" kindref="member">ThrusterROSPlugin::GetThrusterConversionFcn</ref>(</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetThrusterConversionFcn::Request&amp;<sp/>_req,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>uuv_gazebo_ros_plugins_msgs::GetThrusterConversionFcn::Response&amp;<sp/>_res)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>_res.fcn.function_name<sp/>=<sp/>this-&gt;conversionFunction-&gt;GetType();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_res.fcn.function_name.compare(</highlight><highlight class="stringliteral">&quot;Basic&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ThrusterROSPlugin::GetThrusterConversionFcn::Basic&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.fcn.tags.push_back(</highlight><highlight class="stringliteral">&quot;rotor_constant&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;conversionFunction-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;rotor_constant&quot;</highlight><highlight class="normal">,<sp/>param);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.fcn.data.push_back(param);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_res.fcn.function_name.compare(</highlight><highlight class="stringliteral">&quot;Bessa&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ThrusterROSPlugin::GetThrusterConversionFcn::Bessa&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.fcn.tags.push_back(</highlight><highlight class="stringliteral">&quot;rotor_constant_l&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;conversionFunction-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;rotor_constant_l&quot;</highlight><highlight class="normal">,<sp/>param);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.fcn.data.push_back(param);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.fcn.tags.push_back(</highlight><highlight class="stringliteral">&quot;rotor_constant_r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;conversionFunction-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;rotor_constant_r&quot;</highlight><highlight class="normal">,<sp/>param);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.fcn.data.push_back(param);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.fcn.tags.push_back(</highlight><highlight class="stringliteral">&quot;delta_l&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;conversionFunction-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;delta_l&quot;</highlight><highlight class="normal">,<sp/>param);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.fcn.data.push_back(param);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.fcn.tags.push_back(</highlight><highlight class="stringliteral">&quot;delta_r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;conversionFunction-&gt;GetParam(</highlight><highlight class="stringliteral">&quot;delta_r&quot;</highlight><highlight class="normal">,<sp/>param);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>_res.fcn.data.push_back(param);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_res.fcn.function_name.compare(</highlight><highlight class="stringliteral">&quot;LinearInterp&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ThrusterROSPlugin::GetThrusterConversionFcn::LinearInterp&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;double,<sp/>double&gt;<sp/>table<sp/>=<sp/>this-&gt;conversionFunction-&gt;GetTable();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>item<sp/>:<sp/>table)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/>item.first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>item.second<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_res.fcn.lookup_table_input.push_back(item.first);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_res.fcn.lookup_table_output.push_back(item.second);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal">GZ_REGISTER_MODEL_PLUGIN(<ref refid="classuuv__simulator__ros_1_1_thruster_r_o_s_plugin_1a96d5b46e81d42adc6f1bedc129b56a92" kindref="member">ThrusterROSPlugin</ref>)</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/musamorena/catkin_ws/src/uuv_simulator/uuv_gazebo_plugins/uuv_gazebo_ros_plugins/src/ThrusterROSPlugin.cc"/>
  </compounddef>
</doxygen>
