<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sliceobject_8h" kind="file" language="C++">
    <compoundname>sliceobject.h</compoundname>
    <includedby refid="_python_8h" local="yes">/usr/include/python3.6m/Python.h</includedby>
    <invincdepgraph>
      <node id="3732">
        <label>/usr/include/python3.6m/Imaging.h</label>
        <link refid="_imaging_8h_source"/>
      </node>
      <node id="3729">
        <label>/usr/include/python3.6m/sliceobject.h</label>
        <link refid="sliceobject_8h"/>
        <childnode refid="3730" relation="include">
        </childnode>
      </node>
      <node id="3733">
        <label>/usr/include/python3.6m/pgenheaders.h</label>
        <link refid="pgenheaders_8h_source"/>
      </node>
      <node id="3735">
        <label>venv/lib/python3.6/site-packages/lxml/includes/etree_defs.h</label>
        <link refid="etree__defs_8h_source"/>
      </node>
      <node id="3730">
        <label>/usr/include/python3.6m/Python.h</label>
        <link refid="_python_8h_source"/>
        <childnode refid="3731" relation="include">
        </childnode>
        <childnode refid="3733" relation="include">
        </childnode>
        <childnode refid="3734" relation="include">
        </childnode>
        <childnode refid="3735" relation="include">
        </childnode>
        <childnode refid="3736" relation="include">
        </childnode>
      </node>
      <node id="3736">
        <label>venv/lib/python3.6/site-packages/lxml/lxml.etree_api.h</label>
        <link refid="lxml_8etree__api_8h_source"/>
      </node>
      <node id="3731">
        <label>/usr/include/python3.6m/ImPlatform.h</label>
        <link refid="_im_platform_8h_source"/>
        <childnode refid="3732" relation="include">
        </childnode>
      </node>
      <node id="3734">
        <label>venv/lib/python3.6/site-packages/lxml/etree_api.h</label>
        <link refid="etree__api_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_py_slice_object" prot="public">PySliceObject</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="sliceobject_8h_1a379bb9f17ad9196001b16c3226734e97" prot="public" static="no">
        <name>Py_Ellipsis</name>
        <initializer>(&amp;_Py_EllipsisObject)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/sliceobject.h" line="11" column="9" bodyfile="/usr/include/python3.6m/sliceobject.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sliceobject_8h_1a2175936ccda6a2fe72d35a9ae6272660" prot="public" static="no">
        <name>PySlice_Check</name>
        <param><defname>op</defname></param>
        <initializer>(Py_TYPE(op) == &amp;PySlice_Type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/sliceobject.h" line="31" column="9" bodyfile="/usr/include/python3.6m/sliceobject.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="sliceobject_8h_1a0719f2c2d2ec8c6ec37d64a00e59cf94" prot="public" static="no" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>Py_ssize_t Py_ssize_t * stop</definition>
        <argsstring></argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/sliceobject.h" line="33" column="1" bodyfile="/usr/include/python3.6m/sliceobject.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sliceobject_8h_1ad30ad6864738676236ebf5de71ff05f5" prot="public" static="no" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> <ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>Py_ssize_t Py_ssize_t Py_ssize_t step</definition>
        <argsstring></argsstring>
        <name>step</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/sliceobject.h" line="34" column="1" bodyfile="/usr/include/python3.6m/sliceobject.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sliceobject_8h_1abbd88c7a30e7a4643b0fc1675646d4a8" prot="public" static="no" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        <definition>Py_ssize_t length</definition>
        <argsstring></argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/sliceobject.h" line="37" column="1" bodyfile="/usr/include/python3.6m/sliceobject.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sliceobject_8h_1aa84ed04fa8ac71471f579cc3f54faa07" prot="public" static="no" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> <ref refid="struct__object" kindref="compound">PyObject</ref> **</type>
        <definition>PyObject PyObject** start_ptr</definition>
        <argsstring></argsstring>
        <name>start_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/sliceobject.h" line="38" column="1" bodyfile="/usr/include/python3.6m/sliceobject.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sliceobject_8h_1a11d18846483226012d0544d6089025dc" prot="public" static="no" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> <ref refid="struct__object" kindref="compound">PyObject</ref> <ref refid="struct__object" kindref="compound">PyObject</ref> **</type>
        <definition>PyObject PyObject PyObject** stop_ptr</definition>
        <argsstring></argsstring>
        <name>stop_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/sliceobject.h" line="38" column="1" bodyfile="/usr/include/python3.6m/sliceobject.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sliceobject_8h_1a388fe500cf3f23e5746d7ca45c06e3f7" prot="public" static="no" mutable="no">
        <type><ref refid="struct__object" kindref="compound">PyObject</ref> <ref refid="struct__object" kindref="compound">PyObject</ref> <ref refid="struct__object" kindref="compound">PyObject</ref> <ref refid="struct__object" kindref="compound">PyObject</ref> **</type>
        <definition>PyObject PyObject PyObject PyObject** step_ptr</definition>
        <argsstring></argsstring>
        <name>step_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/sliceobject.h" line="39" column="1" bodyfile="/usr/include/python3.6m/sliceobject.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sliceobject_8h_1a8a8eb74c44d162b028e5afd13850968e" prot="public" static="no" mutable="no">
        <type>Py_ssize_t Py_ssize_t *</type>
        <definition>Py_ssize_t* start</definition>
        <argsstring></argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/sliceobject.h" line="42" column="1" bodyfile="/usr/include/python3.6m/sliceobject.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sliceobject_8h_1a7ff52ed17e07dc84149981f59ae21d26" prot="public" static="no" mutable="no">
        <type>Py_ssize_t Py_ssize_t Py_ssize_t Py_ssize_t Py_ssize_t *</type>
        <definition>Py_ssize_t Py_ssize_t Py_ssize_t Py_ssize_t Py_ssize_t* slicelength</definition>
        <argsstring></argsstring>
        <name>slicelength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/sliceobject.h" line="45" column="1" bodyfile="/usr/include/python3.6m/sliceobject.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sliceobject_8h_1ac506a7ec3d5e8536fe2eef2bb5ce5054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_DATA</definition>
        <argsstring>(PyObject) _Py_EllipsisObject</argsstring>
        <name>PyAPI_DATA</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/sliceobject.h" line="9" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sliceobject_8h_1a65f3a5e20babe6b01fca9b96ae7ce019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_DATA</definition>
        <argsstring>(PyTypeObject) PySlice_Type</argsstring>
        <name>PyAPI_DATA</name>
        <param>
          <type><ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/sliceobject.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sliceobject_8h_1abd4477b51d9eb60462b53b106d245551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(PyObject *) PySlice_New(PyObject *start</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type><ref refid="struct__object" kindref="compound">PyObject</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/sliceobject.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sliceobject_8h_1adca767f8f5741be69e879ac07ee84254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(int) _PySlice_GetLongIndices(PySliceObject *self</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/sliceobject.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sliceobject_8h_1a04ac3342af92120a0a67433b1f4de676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyAPI_FUNC</definition>
        <argsstring>(Py_ssize_t) PySlice_AdjustIndices(Py_ssize_t length</argsstring>
        <name>PyAPI_FUNC</name>
        <param>
          <type>Py_ssize_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/include/python3.6m/sliceobject.h" line="57" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>Py_SLICEOBJECT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_SLICEOBJECT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>unique<sp/>ellipsis<sp/>object<sp/>&quot;...&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">PyAPI_DATA(<ref refid="struct__object" kindref="compound">PyObject</ref>)<sp/>_Py_EllipsisObject;<sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>use<sp/>this<sp/>directly<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Py_Ellipsis<sp/>(&amp;_Py_EllipsisObject)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Slice<sp/>object<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">A<sp/>slice<sp/>object<sp/>containing<sp/>start,<sp/>stop,<sp/>and<sp/>step<sp/>data<sp/>members<sp/>(the</highlight></codeline>
<codeline lineno="18"><highlight class="comment">names<sp/>are<sp/>from<sp/>range).<sp/><sp/>After<sp/>much<sp/>talk<sp/>with<sp/>Guido,<sp/>it<sp/>was<sp/>decided<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment">let<sp/>these<sp/>be<sp/>any<sp/>arbitrary<sp/>python<sp/>type.<sp/><sp/>Py_None<sp/>stands<sp/>for<sp/>omitted<sp/>values.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="struct_py_slice_object" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject_HEAD</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*start,<sp/>*stop,<sp/>*step;<sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">}<sp/><ref refid="struct_py_slice_object" kindref="compound">PySliceObject</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">PyAPI_DATA(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref>)<sp/>PySlice_Type;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">PyAPI_DATA(<ref refid="struct__typeobject" kindref="compound">PyTypeObject</ref>)<sp/>PyEllipsis_Type;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PySlice_Check(op)<sp/>(Py_TYPE(op)<sp/>==<sp/>&amp;PySlice_Type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>PySlice_New(<ref refid="struct__object" kindref="compound">PyObject</ref>*<sp/>start,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref>*<sp/>stop,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref>*<sp/>step);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">PyAPI_FUNC(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*)<sp/>_PySlice_FromIndices(Py_ssize_t<sp/>start,<sp/>Py_ssize_t<sp/>stop);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>_PySlice_GetLongIndices(<ref refid="struct_py_slice_object" kindref="compound">PySliceObject</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*length,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>**start_ptr,<sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>**stop_ptr,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__object" kindref="compound">PyObject</ref><sp/>**step_ptr);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>PySlice_GetIndices(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*r,<sp/>Py_ssize_t<sp/>length,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>*start,<sp/>Py_ssize_t<sp/>*stop,<sp/>Py_ssize_t<sp/>*step);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>PySlice_GetIndicesEx(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*r,<sp/>Py_ssize_t<sp/>length,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>*start,<sp/>Py_ssize_t<sp/>*stop,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>*step,<sp/>Py_ssize_t<sp/>*slicelength);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(Py_LIMITED_API)<sp/>||<sp/>(Py_LIMITED_API+0<sp/>&gt;=<sp/>0x03050400<sp/>&amp;&amp;<sp/>Py_LIMITED_API+0<sp/>&lt;<sp/>0x03060000)<sp/>||<sp/>Py_LIMITED_API+0<sp/>&gt;=<sp/>0x03060100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>Py_LIMITED_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PySlice_GetIndicesEx(slice,<sp/>length,<sp/>start,<sp/>stop,<sp/>step,<sp/>slicelen)<sp/>(<sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>PySlice_Unpack((slice),<sp/>(start),<sp/>(stop),<sp/>(step))<sp/>&lt;<sp/>0<sp/>?<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((*(slicelen)<sp/>=<sp/>0),<sp/>-1)<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((*(slicelen)<sp/>=<sp/>PySlice_AdjustIndices((length),<sp/>(start),<sp/>(stop),<sp/>*(step))),<sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">PyAPI_FUNC(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>PySlice_Unpack(<ref refid="struct__object" kindref="compound">PyObject</ref><sp/>*slice,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>*start,<sp/>Py_ssize_t<sp/>*stop,<sp/>Py_ssize_t<sp/>*step);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">PyAPI_FUNC(Py_ssize_t)<sp/>PySlice_AdjustIndices(Py_ssize_t<sp/>length,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>*start,<sp/>Py_ssize_t<sp/>*stop,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>step);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!Py_SLICEOBJECT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/usr/include/python3.6m/sliceobject.h"/>
  </compounddef>
</doxygen>
